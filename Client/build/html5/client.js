// Generated by Haxe 4.0.0-preview.4+1e3e5e016
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = {},$_;
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,matchedLeft: function() {
		if(this.r.m == null) {
			throw new js__$Boot_HaxeError("No string matched");
		}
		return HxOverrides.substr(this.r.s,0,this.r.m.index);
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,__class__: EReg
};
var EventDispatcher = function() {
	this._listeners = [];
};
$hxClasses["EventDispatcher"] = EventDispatcher;
EventDispatcher.__name__ = ["EventDispatcher"];
EventDispatcher.__properties__ = {get_instance:"get_instance"};
EventDispatcher.get_instance = function() {
	if(EventDispatcher._instance == null) {
		EventDispatcher._instance = new EventDispatcher();
	}
	return EventDispatcher._instance;
};
EventDispatcher.prototype = {
	registerListener: function(listener) {
		this._listeners.push(listener);
	}
	,dispatchEvent: function(event,data) {
		var _g = 0;
		var _g1 = this._listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l.onEvent(event,data);
		}
	}
	,__class__: EventDispatcher
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IListener = function() { };
$hxClasses["IListener"] = IListener;
IListener.__name__ = ["IListener"];
IListener.prototype = {
	__class__: IListener
};
var IconUtil = function() { };
$hxClasses["IconUtil"] = IconUtil;
IconUtil.__name__ = ["IconUtil"];
IconUtil.assetIcon = function(asset) {
	var icon = "img/picture_grey.png";
	if(StringTools.endsWith(asset,".wav") || StringTools.endsWith(asset,".ogg") || StringTools.endsWith(asset,".mp3")) {
		icon = "img/audio-file_grey.png";
	}
	return icon;
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = ["IntIterator"];
IntIterator.prototype = {
	hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $getIterator(it);
		while(_.hasNext()) {
			var _1 = _.next();
			++n;
		}
	} else {
		var x = $getIterator(it);
		while(x.hasNext()) {
			var x1 = x.next();
			if(pred(x1)) {
				++n;
			}
		}
	}
	return n;
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.main = function() {
	var app = new haxe_ui_HaxeUIApp();
	app.ready(function() {
		haxe_ui_ToolkitAssets.get_instance().getImage("img/play-button_grey.png",function(e) {
		});
		haxe_ui_ToolkitAssets.get_instance().getImage("img/repeat_grey.png",function(e1) {
		});
		haxe_ui_ToolkitAssets.get_instance().getImage("img/attachment_grey.png",function(e2) {
		});
		haxe_ui_ToolkitAssets.get_instance().getImage("img/plus_grey.png",function(e3) {
		});
		haxe_ui_ToolkitAssets.get_instance().getImage("img/file_grey.png",function(e4) {
		});
		haxe_ui_ToolkitAssets.get_instance().getImage("img/layers_grey.png",function(e5) {
		});
		haxe_ui_ToolkitAssets.get_instance().getImage("img/picture_grey.png",function(e6) {
		});
		haxe_ui_ToolkitAssets.get_instance().getImage("img/folder.png",function(e7) {
		});
		haxe_ui_ToolkitAssets.get_instance().getImage("img/control-000-small.png",function(e8) {
		});
		haxe_ui_ToolkitAssets.get_instance().getImage("img/control-270-small.png",function(e9) {
		});
		haxe_ui_ToolkitAssets.get_instance().getImage("img/blank.png",function(e10) {
		});
		Navigation.get_instance();
		app.addComponent(new MainView());
		app.start();
	});
};
var haxe_ui_backend_ComponentBase = function() {
	this._eventMap = new haxe_ds_StringMap();
	if(haxe_ui_backend_ComponentBase._mutationObserver == null) {
		haxe_ui_backend_ComponentBase._mutationObserver = new MutationObserver(haxe_ui_backend_ComponentBase.onMutationEvent);
		haxe_ui_backend_ComponentBase._mutationObserver.observe(haxe_ui_core_Screen.get_instance().get_container(),{ childList : true});
	}
};
$hxClasses["haxe.ui.backend.ComponentBase"] = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentBase.__name__ = ["haxe","ui","backend","ComponentBase"];
haxe_ui_backend_ComponentBase.onMutationEvent = function(records,o) {
	var done = false;
	var _g = 0;
	while(_g < records.length) {
		var record = records[_g];
		++_g;
		var _g2 = 0;
		var _g1 = record.addedNodes.length;
		while(_g2 < _g1) {
			var i = _g2++;
			var node = record.addedNodes.item(i);
			var c = haxe_ui_backend_ComponentBase.elementToComponent.h[node.__id__];
			if(c != null) {
				c.recursiveReady();
			}
		}
		if(done == true) {
			break;
		}
	}
};
haxe_ui_backend_ComponentBase.prototype = {
	recursiveReady: function() {
		haxe_ui_backend_ComponentBase.elementToComponent.remove(this.element);
		var component = js_Boot.__cast(this , haxe_ui_core_Component);
		if(!(component._layout == null || component._layoutLocked == true)) {
			component.invalidateComponent("layout");
		}
		component.ready();
		var _g = 0;
		var _g1 = component.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.recursiveReady();
		}
	}
	,handleCreate: function(native) {
		var newElement = null;
		if(native == true) {
			if((this instanceof haxe_ui_containers_ScrollView)) {
				this._nativeElement = new haxe_ui_backend_html5_native_NativeElement(this);
				if(this.element == null) {
					this.element = this._nativeElement.create();
				}
				this.element.style.position = "absolute";
				this.element.style.overflow = "auto";
				haxe_ui_backend_ComponentBase.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
				return;
			} else {
				var component = js_Boot.__cast(this , haxe_ui_core_Component);
				var nativeConfig = component.getNativeConfigProperties();
				if(nativeConfig != null && (__map_reserved["class"] != null ? nativeConfig.existsReserved("class") : nativeConfig.h.hasOwnProperty("class"))) {
					var name = __map_reserved["class"] != null ? nativeConfig.getReserved("class") : nativeConfig.h["class"];
					this._nativeElement = Type.createInstance($hxClasses[name],[this]);
					this._nativeElement.config = nativeConfig;
					newElement = this._nativeElement.create();
				}
			}
			if(newElement != null) {
				newElement.style.position = "absolute";
				if(this.element != null) {
					var p = this.element.parentElement;
					if(p != null) {
						haxe_ui_backend_ComponentBase.elementToComponent.remove(this.element);
						p.replaceChild(newElement,this.element);
					}
				}
				this.element = newElement;
				this.remapEvents();
			}
		}
		if(newElement == null) {
			if((this instanceof haxe_ui_containers_ScrollView)) {
				this._nativeElement = null;
				if(this.element == null) {
					this.element = window.document.createElement("div");
					this.element.style.setProperty("-webkit-touch-callout","none");
					this.element.style.setProperty("-webkit-user-select","none");
					this.element.style.setProperty("-khtml-user-select","none");
					this.element.style.setProperty("-moz-user-select","none");
					this.element.style.setProperty("-ms-user-select","none");
					this.element.style.setProperty("user-select","none");
					this.element.style.boxSizing = "border-box";
					this.element.style.position = "absolute";
				}
				this.element.scrollTop = 0;
				this.element.scrollLeft = 0;
				this.element.style.overflow = "hidden";
				haxe_ui_backend_ComponentBase.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
				return;
			}
			newElement = window.document.createElement("div");
			newElement.style.setProperty("-webkit-touch-callout","none");
			newElement.style.setProperty("-webkit-user-select","none");
			newElement.style.setProperty("-khtml-user-select","none");
			newElement.style.setProperty("-moz-user-select","none");
			newElement.style.setProperty("-ms-user-select","none");
			newElement.style.setProperty("user-select","none");
			newElement.style.boxSizing = "border-box";
			newElement.style.position = "absolute";
			if((this instanceof haxe_ui_components_Image)) {
				newElement.style.boxSizing = "initial";
			}
			if(this.element != null) {
				var p1 = this.element.parentElement;
				if(p1 != null) {
					haxe_ui_backend_ComponentBase.elementToComponent.remove(this.element);
					p1.replaceChild(newElement,this.element);
				}
			}
			this.element = newElement;
			haxe_ui_backend_ComponentBase.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
			this._nativeElement = null;
			this.remapEvents();
		}
	}
	,remapEvents: function() {
		if(this._eventMap == null) {
			return;
		}
		var copy = new haxe_ds_StringMap();
		var k = this._eventMap.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var _this = this._eventMap;
			var fn = __map_reserved[k1] != null ? _this.getReserved(k1) : _this.h[k1];
			if(__map_reserved[k1] != null) {
				copy.setReserved(k1,fn);
			} else {
				copy.h[k1] = fn;
			}
			this.unmapEvent(k1,fn);
		}
		this._eventMap = new haxe_ds_StringMap();
		var k2 = copy.keys();
		while(k2.hasNext()) {
			var k3 = k2.next();
			this.mapEvent(k3,__map_reserved[k3] != null ? copy.getReserved(k3) : copy.h[k3]);
		}
	}
	,handlePosition: function(left,top,style) {
		if(this.element == null) {
			return;
		}
		if(left != null) {
			this.element.style.left = "" + left + "px";
		}
		if(top != null) {
			this.element.style.top = "" + top + "px";
		}
		if((this instanceof haxe_ui_containers_TableView) && left != null && top != null && (js_Boot.__cast(this , haxe_ui_containers_TableView)).get_native() == true) {
			var c = js_Boot.__cast(this , haxe_ui_core_Component);
			var h = c.findComponent(null,haxe_ui_containers_Header);
			var tmp = "" + h.get_screenLeft() + "px";
			h.element.style.left = "" + tmp;
			var tmp1 = "" + h.get_screenTop() + "px";
			h.element.style.top = "" + tmp1;
		}
	}
	,handleSize: function(width,height,style) {
		if(width == null || height == null || width <= 0 || height <= 0) {
			return;
		}
		if(this.element == null) {
			return;
		}
		if((this instanceof haxe_ui_components_VProgress)) {
			if(this.element.style.getPropertyValue("transform-origin") != null && this.element.style.getPropertyValue("transform-origin").length > 0) {
				var tw = width;
				var th = height;
				width = th;
				height = tw;
			}
		}
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var css = this.element.style;
		haxe_ui_backend_html5_StyleHelper.apply(this,width,height,style);
		var parent = c.parentComponent;
		if(parent != null && parent.element.style.borderWidth != null) {
			css.marginTop = "-" + parent.element.style.borderWidth;
			css.marginLeft = "-" + parent.element.style.borderWidth;
		}
		var _g = 0;
		var _g1 = (js_Boot.__cast(this , haxe_ui_core_Component)).get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(style.borderLeftSize != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(style.borderLeftSize,haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0))) {
				var tmp = "-" + haxe_ui_util__$Variant_Variant_$Impl_$.toString(style.borderLeftSize);
				child.element.style.marginLeft = tmp + "px";
			}
			if(style.borderTopSize != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(style.borderTopSize,haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0))) {
				var tmp1 = "-" + haxe_ui_util__$Variant_Variant_$Impl_$.toString(style.borderTopSize);
				child.element.style.marginTop = tmp1 + "px";
			}
		}
		if(style.clip == true) {
			this.handleClipRect(new haxe_ui_util_Rectangle(0,0,width,height));
		}
	}
	,handleReady: function() {
		if((js_Boot.__cast(this , haxe_ui_core_Component)).get_id() != null) {
			this.element.id = (js_Boot.__cast(this , haxe_ui_core_Component)).get_id();
		}
	}
	,handleClipRect: function(value) {
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var parent = c.parentComponent;
		if(value != null && parent != null && (parent._nativeElement == null || (c instanceof haxe_ui_containers_Header))) {
			var tmp = "rect(" + ("" + value.top + "px") + "," + ("" + value.get_right() + "px") + "," + ("" + value.get_bottom() + "px") + ",";
			this.element.style.clip = tmp + ("" + value.left + "px") + ")";
			if((this instanceof haxe_ui_containers_Header) && parent.get_native() == true) {
				if(this.element.style.position != "fixed") {
					this.element.style.position = "fixed";
				}
				var tmp1 = "" + (c.get_screenLeft() - value.left) + "px";
				this.element.style.left = "" + tmp1;
				var tmp2 = "" + (c.get_screenTop() - value.top) + "px";
				this.element.style.top = "" + tmp2;
			} else {
				var tmp3 = "" + (c.get_left() - value.left) + "px";
				this.element.style.left = "" + tmp3;
				var tmp4 = "" + (c.get_top() - value.top) + "px";
				this.element.style.top = "" + tmp4;
			}
		} else {
			this.element.style.removeProperty("clip");
		}
	}
	,handlePreReposition: function() {
	}
	,handlePostReposition: function() {
	}
	,handleVisibility: function(show) {
		this.element.style.display = show == true ? "" : "none";
	}
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			this._textDisplay = new haxe_ui_core_TextDisplay();
			this._textDisplay.parentComponent = this;
			this.element.appendChild(this._textDisplay.element);
		}
		if(text != null) {
			this._textDisplay.set_text(text);
		}
		return this._textDisplay;
	}
	,getTextDisplay: function() {
		return this.createTextDisplay();
	}
	,hasTextDisplay: function() {
		return this._textDisplay != null;
	}
	,createTextInput: function(text) {
		if(this._textInput == null) {
			this._textInput = new haxe_ui_core_TextInput();
			this._textInput.parentComponent = this;
			this.element.appendChild(this._textInput.element);
		}
		if(text != null) {
			this._textInput.set_text(text);
		}
		return this._textInput;
	}
	,getTextInput: function() {
		return this.createTextInput();
	}
	,hasTextInput: function() {
		return this._textInput != null;
	}
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			this._imageDisplay = new haxe_ui_core_ImageDisplay();
			this.element.appendChild(this._imageDisplay.element);
		}
		return this._imageDisplay;
	}
	,getImageDisplay: function() {
		return this.createImageDisplay();
	}
	,hasImageDisplay: function() {
		return this._imageDisplay != null;
	}
	,removeImageDisplay: function() {
		if(this._imageDisplay != null) {
			this._imageDisplay.dispose();
			this._imageDisplay = null;
		}
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (js_Boot.__cast(this , haxe_ui_core_Component)).get_childComponents().length - 1) {
			this.element.appendChild(child.element);
		} else {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((js_Boot.__cast(this , haxe_ui_core_Component)).get_childComponents()[index + 1].element,child.element);
		}
	}
	,handleAddComponent: function(child) {
		this.element.appendChild(child.element);
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		this.handleAddComponent(child);
		this.handleSetComponentIndex(child,index);
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		var child = (js_Boot.__cast(this , haxe_ui_core_Component))._children[index];
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,applyStyle: function(style) {
		if(this.element == null) {
			return;
		}
		this.setCursor(style.cursor);
		if(style.filter != null) {
			if(style.filter[0] == "drop-shadow") {
				var dropShadow = haxe_ui_util_filters_FilterParser.parseDropShadow(style.filter);
				if(dropShadow.inner == false) {
					var tmp = "" + dropShadow.distance + "px " + dropShadow.distance + "px " + dropShadow.blurX + "px 0px ";
					var tmp1 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp + tmp1;
				} else {
					var tmp2 = "inset " + dropShadow.distance + "px " + dropShadow.distance + "px " + dropShadow.blurX + "px 0px ";
					var tmp3 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp2 + tmp3;
				}
			} else if(style.filter[0] == "blur") {
				var blur = haxe_ui_util_filters_FilterParser.parseBlur(style.filter);
				this.element.style.setProperty("-webkit-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-moz-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-o-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("filter","blur(" + blur.amount + "px)");
			}
		} else {
			this.element.style.filter = null;
			this.element.style.boxShadow = null;
			this.element.style.removeProperty("box-shadow");
			this.element.style.removeProperty("-webkit-filter");
			this.element.style.removeProperty("-moz-filter");
			this.element.style.removeProperty("-o-filter");
			this.element.style.removeProperty("filter");
		}
		if(style.opacity != null) {
			this.element.style.opacity = "" + style.opacity;
		}
		if(style.fontSize != null) {
			var tmp4 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.fontSize) + "px";
			this.element.style.fontSize = tmp4;
		}
		if(style.color != null) {
			this.element.style.color = haxe_ui_backend_html5_HtmlUtils.color(style.color);
		}
	}
	,setCursor: function(cursor) {
		var tmp = cursor == null;
		if(cursor == null) {
			this.element.style.removeProperty("cursor");
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.removeProperty("cursor");
			}
		} else {
			this.element.style.cursor = cursor;
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.cursor = cursor;
			}
			if(this.hasTextDisplay()) {
				this.getTextDisplay().element.style.cursor = cursor;
			}
		}
		var _g = 0;
		var _g1 = (js_Boot.__cast(this , haxe_ui_core_Component)).get_childComponents();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.element.style.cursor == null) {
				c.setCursor("inherit");
			}
		}
	}
	,get: function(name) {
		if(this.__props == null) {
			return null;
		}
		var _this = this.__props;
		if(__map_reserved[name] != null) {
			return _this.getReserved(name);
		} else {
			return _this.h[name];
		}
	}
	,set: function(name,value) {
		if(this.__props == null) {
			this.__props = new haxe_ds_StringMap();
		}
		var _this = this.__props;
		var value1 = value;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value1);
		} else {
			_this.h[name] = value1;
		}
	}
	,has: function(name) {
		if(this.__props == null) {
			return false;
		}
		var _this = this.__props;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,mapEvent: function(type,listener) {
		switch(type) {
		case "change":
			var _this = this._eventMap;
			if((__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type)) == false) {
				var _this1 = this._eventMap;
				if(__map_reserved[type] != null) {
					_this1.setReserved(type,listener);
				} else {
					_this1.h[type] = listener;
				}
				if((this instanceof haxe_ui_components_TextField) || (this instanceof haxe_ui_components_TextArea)) {
					var _this2 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
					this.element.addEventListener(__map_reserved["keyup"] != null ? _this2.getReserved("keyup") : _this2.h["keyup"],$bind(this,this.__onTextFieldChangeEvent));
				} else {
					var _this3 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
					this.element.addEventListener(__map_reserved[type] != null ? _this3.getReserved(type) : _this3.h[type],$bind(this,this.__onChangeEvent));
				}
			}
			break;
		case "click":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			var _this4 = this._eventMap;
			if((__map_reserved[type] != null ? _this4.existsReserved(type) : _this4.h.hasOwnProperty(type)) == false) {
				var _this5 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
				if((__map_reserved[type] != null ? _this5.getReserved(type) : _this5.h[type]) != null) {
					var _this6 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
					this.element.addEventListener(__map_reserved[type] != null ? _this6.getReserved(type) : _this6.h[type],$bind(this,this.__onMouseEvent));
				}
				var _this7 = this._eventMap;
				if(__map_reserved[type] != null) {
					_this7.setReserved(type,listener);
				} else {
					_this7.h[type] = listener;
				}
				var _this8 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				this.element.addEventListener(__map_reserved[type] != null ? _this8.getReserved(type) : _this8.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "mousewheel":
			var _this9 = this._eventMap;
			if(__map_reserved[type] != null) {
				_this9.setReserved(type,listener);
			} else {
				_this9.h[type] = listener;
			}
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.addEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.addEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "scrollchange":
			var _this10 = this._eventMap;
			if(__map_reserved[type] != null) {
				_this10.setReserved(type,listener);
			} else {
				_this10.h[type] = listener;
			}
			this.element.addEventListener("scroll",$bind(this,this.__onScrollEvent));
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		switch(type) {
		case "change":
			this._eventMap.remove(type);
			if((this instanceof haxe_ui_components_TextField)) {
				var _this = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				this.element.removeEventListener(__map_reserved["keyup"] != null ? _this.getReserved("keyup") : _this.h["keyup"],$bind(this,this.__onTextFieldChangeEvent));
			} else {
				var _this1 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				this.element.removeEventListener(__map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type],$bind(this,this.__onChangeEvent));
			}
			break;
		case "click":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			this._eventMap.remove(type);
			var _this2 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
			this.element.removeEventListener(__map_reserved[type] != null ? _this2.getReserved(type) : _this2.h[type],$bind(this,this.__onMouseEvent));
			var _this3 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
			if((__map_reserved[type] != null ? _this3.getReserved(type) : _this3.h[type]) != null) {
				var _this4 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
				this.element.removeEventListener(__map_reserved[type] != null ? _this4.getReserved(type) : _this4.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "mousewheel":
			this._eventMap.remove(type);
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.removeEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.removeEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		}
	}
	,__onChangeEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(type != null) {
			var _this1 = this._eventMap;
			var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_core_UIEvent(type);
				fn(uiEvent);
			}
		}
	}
	,__onTextFieldChangeEvent: function(event) {
		var _this = this._eventMap;
		var fn = __map_reserved["change"] != null ? _this.getReserved("change") : _this.h["change"];
		if(fn != null) {
			var uiEvent = new haxe_ui_core_UIEvent("change");
			fn(uiEvent);
		}
	}
	,__onMouseEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(type != null) {
			try {
				if(type != "mousedown") {
					var tmp = type == "mouseup";
				}
			} catch( e ) {
				haxe_CallStack.lastException = e;
				var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			}
			var _this1 = this._eventMap;
			var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_core_MouseEvent(type);
				mouseEvent._originalEvent = event;
				var touchEvent = false;
				try {
					touchEvent = (event instanceof TouchEvent);
				} catch( e2 ) {
					haxe_CallStack.lastException = e2;
					var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
				}
				if(touchEvent == true) {
					var te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = te.changedTouches[0].pageX / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = te.changedTouches[0].pageY / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if((event instanceof MouseEvent)) {
					var me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = me.pageX / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = me.pageY / haxe_ui_Toolkit.get_scaleY();
				}
				fn(mouseEvent);
			}
		}
	}
	,__onMouseWheelEvent: function(event) {
		var _this = this._eventMap;
		var fn = __map_reserved["mousewheel"] != null ? _this.getReserved("mousewheel") : _this.h["mousewheel"];
		if(fn == null) {
			return;
		}
		var delta = 0;
		if(Reflect.field(event,"wheelDelta") != null) {
			delta = Reflect.field(event,"wheelDelta");
		} else if((event instanceof WheelEvent)) {
			delta = (js_Boot.__cast(event , WheelEvent)).deltaY;
		} else {
			delta = -event.detail;
		}
		delta = Math.max(-1,Math.min(1,delta));
		var mouseEvent = new haxe_ui_core_MouseEvent("mousewheel");
		mouseEvent._originalEvent = event;
		mouseEvent.screenX = event.pageX;
		mouseEvent.screenY = event.pageY;
		mouseEvent.delta = delta;
		fn(mouseEvent);
	}
	,__onScrollEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		var _this1 = this._eventMap;
		var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
		if(fn != null) {
			var scrollEvent = new haxe_ui_core_ScrollEvent("scrollchange");
			fn(scrollEvent);
		}
	}
	,__class__: haxe_ui_backend_ComponentBase
};
var haxe_ui_core_IClonable = function() { };
$hxClasses["haxe.ui.core.IClonable"] = haxe_ui_core_IClonable;
haxe_ui_core_IClonable.__name__ = ["haxe","ui","core","IClonable"];
haxe_ui_core_IClonable.prototype = {
	__class__: haxe_ui_core_IClonable
};
var haxe_ui_validation_IValidating = function() { };
$hxClasses["haxe.ui.validation.IValidating"] = haxe_ui_validation_IValidating;
haxe_ui_validation_IValidating.__name__ = ["haxe","ui","validation","IValidating"];
haxe_ui_validation_IValidating.prototype = {
	__class__: haxe_ui_validation_IValidating
	,__properties__: {set_depth:"set_depth",get_depth:"get_depth"}
};
var haxe_ui_core_IComponentBase = function() { };
$hxClasses["haxe.ui.core.IComponentBase"] = haxe_ui_core_IComponentBase;
haxe_ui_core_IComponentBase.__name__ = ["haxe","ui","core","IComponentBase"];
haxe_ui_core_IComponentBase.prototype = {
	__class__: haxe_ui_core_IComponentBase
};
var haxe_ui_core_Component = function() {
	this._depth = -1;
	this._invalidateCount = 0;
	this._isDisposed = false;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._delayedInvalidationFlags = new haxe_ds_StringMap();
	this._invalidationFlags = new haxe_ds_StringMap();
	this.scriptAccess = true;
	this._top = 0;
	this._left = 0;
	this._ready = false;
	this._layoutLocked = false;
	this._includeInLayout = true;
	this.classes = [];
	this.customStyle = new haxe_ui_styles_Style();
	this._disabled = false;
	this._hidden = false;
	this.parentComponent = null;
	this._componentClipRect = null;
	this._text = null;
	this._id = null;
	this.userData = null;
	this._animatable = true;
	this._native = null;
	this._behaviourUpdateOrder = [];
	this._behaviours = new haxe_ds_StringMap();
	this._defaultBehaviours = new haxe_ds_StringMap();
	haxe_ui_backend_ComponentBase.call(this);
	this.addClass(haxe_ui_Backend.get_id(),false);
	var c = js_Boot.getClass(this);
	while(c != null) {
		var css = Type.getClassName(c);
		var className = css.split(".").pop().toLowerCase();
		this.addClass(className,false);
		if(className == "component") {
			break;
		}
		c = c.__super__;
	}
	var s = haxe_ui_Toolkit.styleSheet.applyClasses(this,false);
	if(s.native != null && this.get_hasNativeEntry() == true) {
		this.set_native(s.native);
	} else {
		this.create();
	}
};
$hxClasses["haxe.ui.core.Component"] = haxe_ui_core_Component;
haxe_ui_core_Component.__name__ = ["haxe","ui","core","Component"];
haxe_ui_core_Component.__interfaces__ = [haxe_ui_core_IClonable,haxe_ui_validation_IValidating,haxe_ui_core_IComponentBase];
haxe_ui_core_Component.addNamedComponentsFrom = function(parent,list) {
	if(parent == null) {
		return;
	}
	if(parent.get_id() != null) {
		list.push(parent);
	}
	var _g = 0;
	var _g1 = parent.get_childComponents();
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_core_Component.addNamedComponentsFrom(child,list);
	}
};
haxe_ui_core_Component.__super__ = haxe_ui_backend_ComponentBase;
haxe_ui_core_Component.prototype = $extend(haxe_ui_backend_ComponentBase.prototype,{
	create: function() {
		this.createDefaults();
		this.handleCreate(this.get_native());
		this.destroyChildren();
		this.set_layout(this.createLayout());
		if(this.get_native() == false || this.get_native() == null) {
			this.createChildren();
		}
	}
	,createDefaults: function() {
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_core_ComponentDefaultDisabledBehaviour(this);
		if(__map_reserved["disabled"] != null) {
			_g.setReserved("disabled",value);
		} else {
			_g.h["disabled"] = value;
		}
		this.defaultBehaviours(_g);
		this.set_layout(new haxe_ui_layouts_DefaultLayout());
	}
	,createChildren: function() {
	}
	,destroyChildren: function() {
	}
	,get_hasNativeEntry: function() {
		if(this._hasNativeEntry == null) {
			this._hasNativeEntry = this.getNativeConfigProperty(".@id") != null;
		}
		return this._hasNativeEntry;
	}
	,createLayout: function() {
		var l = null;
		if(this.get_native() == true) {
			var sizeProps = this.getNativeConfigProperties(".size");
			if(sizeProps != null && (__map_reserved["class"] != null ? sizeProps.existsReserved("class") : sizeProps.h.hasOwnProperty("class"))) {
				var name = __map_reserved["class"] != null ? sizeProps.getReserved("class") : sizeProps.h["class"];
				var size = Type.createInstance($hxClasses[name],[]);
				size.config = sizeProps;
				l = new haxe_ui_layouts_DelegateLayout(size);
			} else {
				var layoutProps = this.getNativeConfigProperties(".layout");
				if(layoutProps != null && (__map_reserved["class"] != null ? layoutProps.existsReserved("class") : layoutProps.h.hasOwnProperty("class"))) {
					var name1 = __map_reserved["class"] != null ? layoutProps.getReserved("class") : layoutProps.h["class"];
					l = Type.createInstance($hxClasses[name1],[]);
				}
			}
		}
		if(l == null) {
			l = this._defaultLayout;
		}
		if(l == null) {
			return this.get_layout();
		}
		return l;
	}
	,defaultBehaviour: function(name,behaviour) {
		var _this = this._defaultBehaviours;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,behaviour);
		} else {
			_this.h[name] = behaviour;
		}
	}
	,defaultBehaviours: function(behaviours) {
		var name = behaviours.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			this.defaultBehaviour(name1,__map_reserved[name1] != null ? behaviours.getReserved(name1) : behaviours.h[name1]);
		}
	}
	,getBehaviour: function(id) {
		var _this = this._behaviours;
		var b = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(b != null) {
			return b;
		}
		if(this.get_native() == true) {
			var nativeProps = this.getNativeConfigProperties(".behaviour[id=" + id + "]");
			if(nativeProps != null && (__map_reserved["class"] != null ? nativeProps.existsReserved("class") : nativeProps.h.hasOwnProperty("class"))) {
				var name = __map_reserved["class"] != null ? nativeProps.getReserved("class") : nativeProps.h["class"];
				b = Type.createInstance($hxClasses[name],[this]);
				b.config = nativeProps;
			}
		}
		if(b == null) {
			var _this1 = this._defaultBehaviours;
			b = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
		}
		var _this2 = this._behaviours;
		if(__map_reserved[id] != null) {
			_this2.setReserved(id,b);
		} else {
			_this2.h[id] = b;
		}
		return b;
	}
	,behaviourGet: function(id) {
		var b = this.getBehaviour(id);
		if(b != null) {
			return b.get();
		}
		return null;
	}
	,behaviourGetDynamic: function(id) {
		var b = this.getBehaviour(id);
		if(b != null) {
			return b.getDynamic();
		}
		return null;
	}
	,behaviourSet: function(id,value) {
		var b = this.getBehaviour(id);
		if(b != null) {
			b.set(value);
		}
	}
	,behaviourRun: function(id,param) {
		var b = this.getBehaviour(id);
		if(b != null) {
			b.run(param);
		}
	}
	,behavioursUpdate: function() {
		var order = this._behaviourUpdateOrder.slice();
		var key = this._behaviours.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			if(order.indexOf(key1) == -1) {
				order.push(key1);
			}
		}
		var _g = 0;
		while(_g < order.length) {
			var key2 = order[_g];
			++_g;
			var _this = this._behaviours;
			var b = __map_reserved[key2] != null ? _this.getReserved(key2) : _this.h[key2];
			if(b != null) {
				b.update();
			}
		}
	}
	,get_native: function() {
		if(this._native == null) {
			return false;
		}
		if(this.get_hasNativeEntry() == false) {
			return false;
		}
		return this._native;
	}
	,set_native: function(value) {
		if(this.get_hasNativeEntry() == false) {
			return value;
		}
		if(this._native == value) {
			return value;
		}
		var tmp = this._ready == false;
		this._native = value;
		if(this._native == true && this.get_hasNativeEntry()) {
			this.addClass(":native");
		} else {
			this.removeClass(":native");
		}
		this._behaviours = new haxe_ds_StringMap();
		this.create();
		return value;
	}
	,get_animatable: function() {
		return false;
	}
	,set_animatable: function(value) {
		this._animatable = value;
		return value;
	}
	,get_id: function() {
		return this._id;
	}
	,set_id: function(value) {
		if(this._id != value) {
			this._id = value;
		}
		return this._id;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(this._text != value) {
			this._text = value;
		}
		return this._text;
	}
	,get_value: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this.get_text());
	}
	,set_value: function(value) {
		this.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
		return value;
	}
	,get_screen: function() {
		return haxe_ui_Toolkit.get_screen();
	}
	,addBinding: function(target,transform,targetProperty,sourceProperty) {
		if(sourceProperty == null) {
			sourceProperty = "value";
		}
		if(targetProperty == null) {
			targetProperty = "value";
		}
		if(this._bindings == null) {
			this._bindings = new haxe_ds_StringMap();
		}
		var _this = this._bindings;
		var array = __map_reserved[sourceProperty] != null ? _this.getReserved(sourceProperty) : _this.h[sourceProperty];
		if(array == null) {
			array = [];
			var _this1 = this._bindings;
			if(__map_reserved[sourceProperty] != null) {
				_this1.setReserved(sourceProperty,array);
			} else {
				_this1.h[sourceProperty] = array;
			}
		}
		var info = new haxe_ui_core_BindingInfo();
		info.target = target;
		info.targetProperty = targetProperty;
		info.sourceProperty = sourceProperty;
		info.transform = transform;
		array.push(info);
	}
	,addDeferredBinding: function(targetId,sourceId,transform,targetProperty,sourceProperty) {
		if(sourceProperty == null) {
			sourceProperty = "value";
		}
		if(targetProperty == null) {
			targetProperty = "value";
		}
		if(this._deferredBindings == null) {
			this._deferredBindings = [];
		}
		var deferredBinding = new haxe_ui_core_DeferredBindingInfo();
		deferredBinding.targetId = targetId;
		deferredBinding.sourceId = sourceId;
		deferredBinding.transform = transform;
		deferredBinding.targetProperty = targetProperty;
		deferredBinding.sourceProperty = sourceProperty;
		this._deferredBindings.push(deferredBinding);
	}
	,getDefferedBindings: function() {
		var b = null;
		var c = this;
		while(b == null && c != null) {
			if(c._deferredBindings != null) {
				b = c._deferredBindings;
				break;
			}
			c = c.parentComponent;
		}
		return b;
	}
	,handleBindings: function(sourceProperties) {
		if(this._bindings == null) {
			return;
		}
		var _g = 0;
		while(_g < sourceProperties.length) {
			var sourceProperty = sourceProperties[_g];
			++_g;
			var v = this.getProperty(sourceProperty);
			if(v == null) {
				continue;
			}
			var _this = this._bindings;
			var array = __map_reserved[sourceProperty] != null ? _this.getReserved(sourceProperty) : _this.h[sourceProperty];
			if(array == null) {
				continue;
			}
			var _g1 = 0;
			while(_g1 < array.length) {
				var info = array[_g1];
				++_g1;
				if(info.target == null) {
					continue;
				}
				if(info.transform == null) {
					info.target.setProperty(info.targetProperty,v);
				} else if(info.transform.indexOf("${value}") != -1) {
					v = haxe_ui_util__$Variant_Variant_$Impl_$.fromString(StringTools.replace(info.transform,"${value}",haxe_ui_util__$Variant_Variant_$Impl_$.toString(v)));
					info.target.setProperty(info.targetProperty,v);
				} else if(info.transform.indexOf("${") != -1) {
					var s = HxOverrides.substr(info.transform,2,info.transform.length - 3);
					var scriptResult = null;
					try {
						var parser = new hscript_Parser();
						var program = parser.parseString(s);
						var interp = this.findScriptInterp();
						var _this1 = interp.variables;
						var value = Math;
						if(__map_reserved["Math"] != null) {
							_this1.setReserved("Math",value);
						} else {
							_this1.h["Math"] = value;
						}
						var _this2 = interp.variables;
						var value1 = haxe_ui_util__$Variant_Variant_$Impl_$.toDynamic(v);
						if(__map_reserved["value"] != null) {
							_this2.setReserved("value",value1);
						} else {
							_this2.h["value"] = value1;
						}
						scriptResult = haxe_ui_util__$Variant_Variant_$Impl_$.fromDynamic(interp.expr(program));
					} catch( e ) {
						haxe_CallStack.lastException = e;
						haxe_Log.trace("Problem executing binding script: " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e),{ fileName : "haxe/ui/core/Component.hx", lineNumber : 445, className : "haxe.ui.core.Component", methodName : "handleBindings"});
					}
					if(scriptResult != null) {
						info.target.setProperty(info.targetProperty,scriptResult);
					}
				}
			}
		}
	}
	,get_componentClipRect: function() {
		return this._componentClipRect;
	}
	,set_componentClipRect: function(value) {
		this._componentClipRect = value;
		this.handleClipRect(value);
		return value;
	}
	,get_rootComponent: function() {
		var r = this;
		while(r.parentComponent != null) r = r.parentComponent;
		return r;
	}
	,addComponent: function(child) {
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.push(child);
		var deferredBindings = this.getDefferedBindings();
		if(deferredBindings != null) {
			var itemsToRemove = [];
			var _g = 0;
			while(_g < deferredBindings.length) {
				var binding = deferredBindings[_g];
				++_g;
				var source = this.findComponent(binding.sourceId,null,true);
				var target = this.findComponent(binding.targetId,null,true);
				if(source != null && target != null) {
					source.addBinding(target,binding.transform,binding.targetProperty,binding.sourceProperty);
					itemsToRemove.push(binding);
				}
			}
			var _g1 = 0;
			while(_g1 < itemsToRemove.length) {
				var item = itemsToRemove[_g1];
				++_g1;
				HxOverrides.remove(deferredBindings,item);
			}
		}
		this.handleAddComponent(child);
		if(this._ready) {
			child.ready();
		}
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		if(this._disabled == true) {
			child.set_disabled(true);
		}
		return child;
	}
	,addComponentAt: function(child,index) {
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.splice(index,0,child);
		var deferredBindings = this.getDefferedBindings();
		if(deferredBindings != null) {
			var itemsToRemove = [];
			var _g = 0;
			while(_g < deferredBindings.length) {
				var binding = deferredBindings[_g];
				++_g;
				var source = this.findComponent(binding.sourceId,null,true);
				var target = this.findComponent(binding.targetId,null,true);
				if(source != null && target != null) {
					source.addBinding(target,binding.transform,binding.targetProperty,binding.sourceProperty);
					itemsToRemove.push(binding);
				}
			}
			var _g1 = 0;
			while(_g1 < itemsToRemove.length) {
				var item = itemsToRemove[_g1];
				++_g1;
				HxOverrides.remove(deferredBindings,item);
			}
		}
		this.handleAddComponentAt(child,index);
		if(this._ready) {
			child.ready();
		}
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		if(this._disabled == true) {
			child.set_disabled(true);
		}
		return child;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child == null) {
			return null;
		}
		this.handleRemoveComponent(child,dispose);
		if(this._children != null) {
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			if(invalidate == true) {
				if(!(this._layout == null || this._layoutLocked == true)) {
					this.invalidateComponent("layout");
				}
			}
			if(dispose == true) {
				child._isDisposed = true;
				child.onDestroy();
			}
		}
		return child;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(this._children == null) {
			return null;
		}
		if(index < 0 || index > this._children.length - 1) {
			return null;
		}
		this.handleRemoveComponentAt(index,dispose);
		var child = this._children[index];
		if(this._children != null) {
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			if(invalidate == true) {
				if(!(this._layout == null || this._layoutLocked == true)) {
					this.invalidateComponent("layout");
				}
			}
			if(dispose == true) {
				child._isDisposed = true;
				child.onDestroy();
			}
		}
		return child;
	}
	,onDestroy: function() {
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this._children != null) {
			while(this._children.length > 0) {
				this._children[0].removeAllComponents(dispose);
				this.removeComponent(this._children[0],dispose,false);
			}
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
	}
	,get_childComponents: function() {
		if(this._children == null) {
			return [];
		}
		return this._children;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(recursive == null && criteria != null && searchType == "id") {
			recursive = true;
		}
		var match = null;
		var _g = 0;
		var _g1 = this.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(criteria != null) {
				if(searchType == "id" && child.get_id() == criteria) {
					match = child;
					break;
				} else if(searchType == "css" && child.hasClass(criteria) == true) {
					match = child;
					break;
				}
			} else if(type != null) {
				if(js_Boot.__instanceof(child,type) == true) {
					match = child;
					break;
				}
			}
		}
		if(match == null && recursive == true) {
			var _g2 = 0;
			var _g11 = this.get_childComponents();
			while(_g2 < _g11.length) {
				var child1 = _g11[_g2];
				++_g2;
				var temp = child1.findComponent(criteria,type,recursive,searchType);
				if(temp != null) {
					match = temp;
					break;
				}
			}
		}
		return match;
	}
	,findAncestor: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		var match = null;
		var p = this.parentComponent;
		while(p != null) {
			if(criteria != null) {
				if(searchType == "id" && p.get_id() == criteria) {
					match = p;
					break;
				} else if(searchType == "css" && p.hasClass(criteria) == true) {
					match = p;
					break;
				}
			} else if(type != null) {
				if(js_Boot.__instanceof(p,type) == true) {
					match = p;
					break;
				}
			}
			p = p.parentComponent;
		}
		return match;
	}
	,findComponentsUnderPoint: function(screenX,screenY) {
		var c = [];
		if(screenX >= this.get_screenLeft() && screenX <= this.get_screenLeft() + this.get_width() && screenY >= this.get_screenTop() && screenY <= this.get_screenTop() + this.get_height()) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(screenX >= child.get_screenLeft() && screenX <= child.get_screenLeft() + child.get_width() && screenY >= child.get_screenTop() && screenY <= child.get_screenTop() + child.get_height()) {
					c.push(child);
				}
				c = c.concat(child.findComponentsUnderPoint(screenX,screenY));
			}
		}
		return c;
	}
	,getComponentIndex: function(child) {
		var index = -1;
		if(this._children != null && child != null) {
			index = this._children.indexOf(child);
		}
		return index;
	}
	,setComponentIndex: function(child,index) {
		if(index >= 0 && index <= this._children.length && child.parentComponent == this) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this._children,child);
			this._children.splice(index,0,child);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
	}
	,getComponentAt: function(index) {
		if(this._children == null) {
			return null;
		}
		return this._children[index];
	}
	,hide: function() {
		if(this._hidden == false) {
			this.handleVisibility(false);
			this._hidden = true;
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
		}
	}
	,show: function() {
		if(this._hidden == true) {
			this.handleVisibility(true);
			this._hidden = false;
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
		}
	}
	,get_hidden: function() {
		if(this._hidden == true) {
			return true;
		}
		if(this.parentComponent != null) {
			return this.parentComponent.get_hidden();
		}
		return false;
	}
	,set_hidden: function(value) {
		if(value == this._hidden) {
			return value;
		}
		if(value == true) {
			this.hide();
		} else {
			this.show();
		}
		return value;
	}
	,get_disabled: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviourGet("disabled"));
	}
	,set_disabled: function(value) {
		this.behaviourSet("disabled",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		this._disabled = value;
		return value;
	}
	,addClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) == -1) {
			this.classes.push(name);
			if(invalidate == true) {
				this.invalidateComponent("style");
			}
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(name,invalidate,recursive);
			}
		}
	}
	,removeClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) != -1) {
			HxOverrides.remove(this.classes,name);
			if(invalidate == true) {
				this.invalidateComponent("style");
			}
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(name,invalidate,recursive);
			}
		}
	}
	,hasClass: function(name) {
		return this.classes.indexOf(name) != -1;
	}
	,get_styleNames: function() {
		return this.classes.join(" ");
	}
	,set_styleNames: function(value) {
		if(value == null) {
			return value;
		}
		var _g = 0;
		var _g1 = value.split(" ");
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			this.addClass(x);
		}
		return value;
	}
	,get_styleString: function() {
		return this._styleString;
	}
	,set_styleString: function(value) {
		if(value == null) {
			return value;
		}
		var cssString = StringTools.trim(value);
		if(cssString.length == 0) {
			return value;
		}
		if(StringTools.endsWith(cssString,";") == false) {
			cssString += ";";
		}
		cssString = "_ { " + cssString + "}";
		var s = new haxe_ui_styles_Parser().parseRules(cssString)[0].s;
		this.customStyle.apply(s);
		this._styleString = value;
		return value;
	}
	,get_style: function() {
		return this._style;
	}
	,set_style: function(value) {
		this._style = value;
		return value;
	}
	,registerEvent: function(type,listener) {
		if(this._disabled == true && this.isInteractiveEvent(type) == true) {
			haxe_Log.trace("its disabled",{ fileName : "haxe/ui/core/Component.hx", lineNumber : 1026, className : "haxe.ui.core.Component", methodName : "registerEvent"});
			if(this._disabledEvents == null) {
				this._disabledEvents = new haxe_ui_util_EventMap();
			}
			haxe_Log.trace("adding to disabled: " + type,{ fileName : "haxe/ui/core/Component.hx", lineNumber : 1030, className : "haxe.ui.core.Component", methodName : "registerEvent"});
			this._disabledEvents.add(type,listener);
			return;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		if(this.__events.add(type,listener) == true) {
			this.mapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,unregisterEvent: function(type,listener) {
		if(this._disabledEvents != null && this._disabled == false) {
			this._disabledEvents.remove(type,listener);
		}
		if(this.__events != null) {
			if(this.__events.remove(type,listener) == true) {
				this.unmapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,dispatch: function(event) {
		if(this.__events != null) {
			this.__events.invoke(event.type,event,this);
		}
	}
	,_onMappedEvent: function(event) {
		this.dispatch(event);
	}
	,isInteractiveEvent: function(type) {
		return haxe_ui_core_Component.INTERACTIVE_EVENTS.indexOf(type) != -1;
	}
	,disableInteractivity: function(disable,styleName) {
		if(disable == this._disabled) {
			return;
		}
		this._disabled = disable;
		if(styleName != null) {
			if(disable == true) {
				this.addClass(styleName);
			} else {
				this.removeClass(styleName);
			}
		}
		if(disable == true) {
			if(this.__events != null) {
				var eventType = this.__events.keys();
				while(eventType.hasNext()) {
					var eventType1 = eventType.next();
					var listeners = this.__events.listeners(eventType1);
					if(listeners != null) {
						var listener = listeners.copy().iterator();
						while(listener.hasNext()) {
							var listener1 = listener.next();
							if(this._disabledEvents == null) {
								this._disabledEvents = new haxe_ui_util_EventMap();
							}
							this._disabledEvents.add(eventType1,listener1);
							this.unregisterEvent(eventType1,listener1);
						}
					}
				}
			}
		} else if(this._disabledEvents != null) {
			var eventType2 = this._disabledEvents.keys();
			while(eventType2.hasNext()) {
				var eventType3 = eventType2.next();
				var listeners1 = this._disabledEvents.listeners(eventType3);
				if(listeners1 != null) {
					var listener2 = listeners1.copy().iterator();
					while(listener2.hasNext()) {
						var listener3 = listener2.next();
						this.registerEvent(eventType3,listener3);
					}
				}
			}
			this._disabledEvents = null;
		}
		var _g = 0;
		var _g1 = this.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.disableInteractivity(disable,styleName);
		}
	}
	,get_includeInLayout: function() {
		if(this._hidden == true) {
			return false;
		}
		return this._includeInLayout;
	}
	,set_includeInLayout: function(value) {
		this._includeInLayout = value;
		return value;
	}
	,get_layout: function() {
		return this._layout;
	}
	,set_layout: function(value) {
		if(value == null) {
			return value;
		}
		var tmp;
		if(this._layout != null) {
			var tmp1 = Type.getClassName(value == null ? null : js_Boot.getClass(value));
			var o = this._layout;
			tmp = tmp1 == Type.getClassName(o == null ? null : js_Boot.getClass(o));
		} else {
			tmp = false;
		}
		if(tmp) {
			return value;
		}
		this._layout = value;
		this._layout.set_component(this);
		return value;
	}
	,lockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == true) {
			return;
		}
		this._layoutLocked = true;
		if(recursive == true) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.lockLayout(recursive);
			}
		}
	}
	,unlockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == false) {
			return;
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.unlockLayout(recursive);
			}
		}
		this._layoutLocked = false;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
	}
	,get_isReady: function() {
		return this._ready;
	}
	,ready: function() {
		this.set_depth(haxe_ui_util_ComponentUtil.getDepth(this));
		if(this._ready == false) {
			this._ready = true;
			this.handleReady();
			this.initScript();
			if(this.get_childComponents() != null) {
				var _g = 0;
				var _g1 = this.get_childComponents();
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.ready();
				}
			}
			this.invalidateComponent();
			this.onReady();
			this.dispatch(new haxe_ui_core_UIEvent("ready"));
		}
	}
	,onReady: function() {
		this.behavioursUpdate();
		this.handleBindings(["text","value","width","height"]);
	}
	,onResized: function() {
	}
	,onMoved: function() {
	}
	,get_autoWidth: function() {
		if(this._percentWidth != null || this._width != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoWidth == null) {
			return false;
		}
		return this.get_style().autoWidth;
	}
	,get_autoHeight: function() {
		if(this._percentHeight != null || this._height != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoHeight == null) {
			return false;
		}
		return this.get_style().autoHeight;
	}
	,resizeComponent: function(width,height) {
		var invalidate = false;
		if(width != null && this._componentWidth != width) {
			this._componentWidth = width;
			invalidate = true;
		}
		if(height != null && this._componentHeight != height) {
			this._componentHeight = height;
			invalidate = true;
		}
		if(invalidate == true && this.isInvalid("layout") == false) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
	}
	,autoSize: function() {
		if(this._ready == false || this._layout == null) {
			return false;
		}
		return this.get_layout().autoSize();
	}
	,get_percentWidth: function() {
		return this._percentWidth;
	}
	,set_percentWidth: function(value) {
		if(this._percentWidth == value) {
			return value;
		}
		this._percentWidth = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,get_percentHeight: function() {
		return this._percentHeight;
	}
	,set_percentHeight: function(value) {
		if(this._percentHeight == value) {
			return value;
		}
		this._percentHeight = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,hitTest: function(left,top) {
		var b = false;
		var sx = this.get_screenLeft();
		var sy = this.get_screenTop();
		var cx = 0;
		if(this.get_componentWidth() != null) {
			cx = this.get_componentWidth();
		}
		var cy = 0;
		if(this.get_componentHeight() != null) {
			cy = this.get_componentHeight();
		}
		if(cx <= 0 || cy <= 0) {
			return false;
		}
		if(left >= sx && left < sx + cx && top >= sy && top < sy + cy) {
			b = true;
		}
		return b;
	}
	,get_componentWidth: function() {
		if(this._componentWidth == null) {
			return 0;
		}
		return this._componentWidth;
	}
	,set_componentWidth: function(value) {
		this.resizeComponent(value,null);
		return value;
	}
	,get_componentHeight: function() {
		if(this._componentHeight == null) {
			return 0;
		}
		return this._componentHeight;
	}
	,set_componentHeight: function(value) {
		this.resizeComponent(null,value);
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.set_componentWidth(value);
		return value;
	}
	,get_width: function() {
		var f = this.get_componentWidth();
		return f;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.set_componentHeight(value);
		return value;
	}
	,get_height: function() {
		var f = this.get_componentHeight();
		return f;
	}
	,moveComponent: function(left,top) {
		var invalidate = false;
		if(left != null && this._left != left) {
			this._left = left;
			invalidate = true;
		}
		if(top != null && this._top != top) {
			this._top = top;
			invalidate = true;
		}
		if(invalidate == true && this.isInvalid("position") == false) {
			this.invalidateComponent("position");
		}
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		this.moveComponent(value,null);
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		this.moveComponent(null,value);
		return value;
	}
	,get_screenLeft: function() {
		var c = this;
		var xpos = 0;
		while(c != null) {
			xpos += c.get_left();
			if(c.get_componentClipRect() != null) {
				xpos -= c.get_componentClipRect().left;
			}
			c = c.parentComponent;
		}
		return xpos;
	}
	,get_screenTop: function() {
		var c = this;
		var ypos = 0;
		while(c != null) {
			ypos += c.get_top();
			if(c.get_componentClipRect() != null) {
				ypos -= c.get_componentClipRect().top;
			}
			c = c.parentComponent;
		}
		return ypos;
	}
	,set_script: function(value) {
		this._script = value;
		return value;
	}
	,executeScriptCall: function(expr) {
		var parser = new hscript_Parser();
		var line = parser.parseString(expr);
		var interp = this.findScriptInterp();
		var _this = interp.variables;
		if(__map_reserved["this"] != null) {
			_this.setReserved("this",this);
		} else {
			_this.h["this"] = this;
		}
		interp.expr(line);
		interp.variables.remove("this");
	}
	,findScriptInterp: function(refreshNamedComponents) {
		if(refreshNamedComponents == null) {
			refreshNamedComponents = true;
		}
		var interp = null;
		var c = this;
		while(c != null && interp == null) {
			if(c._interp != null) {
				interp = c._interp;
				break;
			}
			c = c.parentComponent;
		}
		if(interp == null) {
			c = this.get_rootComponent();
			c._interp = new haxe_ui_scripting_ScriptInterp();
			interp = c._interp;
		}
		if(refreshNamedComponents == true && c != null) {
			var comps = c.get_namedComponents();
			var _g = 0;
			while(_g < comps.length) {
				var comp = comps[_g];
				++_g;
				var safeId = haxe_ui_util_StringUtil.capitalizeHyphens(comp.get_id());
				var _this = interp.variables;
				if(__map_reserved[safeId] != null) {
					_this.setReserved(safeId,comp);
				} else {
					_this.h[safeId] = comp;
				}
			}
		}
		return interp;
	}
	,initScript: function() {
		if(this._script != null) {
			try {
				var parser = new hscript_Parser();
				var program = parser.parseString(this._script);
				this._interp = new haxe_ui_scripting_ScriptInterp();
				var comps = this.get_namedComponents();
				var _g = 0;
				while(_g < comps.length) {
					var comp = comps[_g];
					++_g;
					if(comp.scriptAccess == true) {
						var safeId = haxe_ui_util_StringUtil.capitalizeHyphens(comp.get_id());
						var _this = this._interp.variables;
						if(__map_reserved[safeId] != null) {
							_this.setReserved(safeId,comp);
						} else {
							_this.h[safeId] = comp;
						}
					}
				}
				this._interp.execute(program);
			} catch( e ) {
				haxe_CallStack.lastException = e;
				haxe_Log.trace("Problem initializing script: " + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e),{ fileName : "haxe/ui/core/Component.hx", lineNumber : 1798, className : "haxe.ui.core.Component", methodName : "initScript"});
				haxe_ui_util_CallStackHelper.traceExceptionStack();
			}
		}
	}
	,addScriptEvent: function(event,script) {
		event = event.toLowerCase();
		var eventName = StringTools.startsWith(event,"on") ? event.substring(2,event.length) : event;
		if(this._scriptEvents == null) {
			this._scriptEvents = new haxe_ds_StringMap();
		}
		var _this = this._scriptEvents;
		if(__map_reserved[event] != null) {
			_this.setReserved(event,script);
		} else {
			_this.h[event] = script;
		}
		var f = $bind(this,this._onScriptEvent);
		var eventId = event;
		this.registerEvent(eventName,function(event1) {
			f(eventId,event1);
		});
	}
	,_onScriptEvent: function(eventId,event) {
		if(this._scriptEvents != null) {
			var _this = this._scriptEvents;
			var script = __map_reserved[eventId] != null ? _this.getReserved(eventId) : _this.h[eventId];
			if(script != null) {
				event.cancel();
				this.executeScriptCall(script);
			}
		}
	}
	,get_namedComponents: function() {
		var list = [];
		haxe_ui_core_Component.addNamedComponentsFrom(this,list);
		return list;
	}
	,set_onClick: function(value) {
		if(this.__onClick != null) {
			this.unregisterEvent("click",this.__onClick);
			this.__onClick = null;
		}
		this.registerEvent("click",value);
		this.__onClick = value;
		return value;
	}
	,set_onChange: function(value) {
		if(this.__onChange != null) {
			this.unregisterEvent("change",this.__onChange);
			this.__onChange = null;
		}
		this.registerEvent("change",value);
		this.__onChange = value;
		return value;
	}
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,syncValidation: function() {
		var count = 0;
		while(this.isInvalid()) {
			this.validate();
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.syncValidation();
			}
			if(++count >= 10) {
				throw new js__$Boot_HaxeError("The syncValidation returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
		}
	}
	,validate: function() {
		if(this._ready == false || this._isDisposed == true || this._isValidating == true || this.isInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateInternal();
		var flag = this._invalidationFlags.keys();
		while(flag.hasNext()) {
			var flag1 = flag.next();
			this._invalidationFlags.remove(flag1);
		}
		this._isAllInvalid = false;
		var flag2 = this._delayedInvalidationFlags.keys();
		while(flag2.hasNext()) {
			var flag3 = flag2.next();
			if(flag3 == "all") {
				this._isAllInvalid = true;
			} else {
				var _this = this._invalidationFlags;
				if(__map_reserved[flag3] != null) {
					_this.setReserved(flag3,true);
				} else {
					_this.h[flag3] = true;
				}
			}
			this._delayedInvalidationFlags.remove(flag3);
		}
		this._isValidating = false;
	}
	,validateInternal: function() {
		var dataInvalid = this.isInvalid("data");
		var styleInvalid = this.isInvalid("style");
		var positionInvalid = this.isInvalid("position");
		var displayInvalid = this.isInvalid("display");
		var layoutInvalid = this.isInvalid("layout") && this._layoutLocked == false;
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			this.validateStyle();
		}
		if(this.hasTextDisplay()) {
			this.getTextDisplay().validate();
		}
		if(this.hasTextInput()) {
			this.getTextInput().validate();
		}
		if(this.hasImageDisplay()) {
			this.getImageDisplay().validate();
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(layoutInvalid) {
			displayInvalid = this.validateLayout() || displayInvalid;
		}
		if(displayInvalid || styleInvalid) {
			haxe_ui_validation_ValidationManager.get_instance().addDisplay(this);
		}
	}
	,validateData: function() {
	}
	,validateLayout: function() {
		this.get_layout().refresh();
		while(this.validateAutoSize()) this.get_layout().refresh();
		if(this._componentWidth != this._actualWidth || this._componentHeight != this._actualHeight) {
			this._actualWidth = this._componentWidth;
			this._actualHeight = this._componentHeight;
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
			this.onResized();
			this.dispatch(new haxe_ui_core_UIEvent("resize"));
			return true;
		} else {
			return false;
		}
	}
	,validateStyle: function() {
		var s = haxe_ui_Toolkit.styleSheet.applyClasses(this,false);
		if(this._ready == false || this._style == null || this._style.equalTo(s) == false) {
			this._style = s;
			this.applyStyle(this._style);
		}
	}
	,validatePosition: function() {
		this.handlePosition(this._left,this._top,this._style);
		this.onMoved();
		this.dispatch(new haxe_ui_core_UIEvent("move"));
	}
	,updateDisplay: function() {
		if(this.get_componentWidth() == null || this.get_componentHeight() == null || this.get_componentWidth() <= 0 || this.get_componentHeight() <= 0) {
			return;
		}
		this.handleSize(this.get_componentWidth(),this.get_componentHeight(),this._style);
		if(this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			this.handleClipRect(new haxe_ui_util_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight()));
		}
	}
	,validateAutoSize: function() {
		var invalidate = false;
		if(this.get_autoWidth() == true || this.get_autoHeight() == true) {
			var s = this.get_layout().calcAutoSize();
			if(this.get_autoWidth() == true) {
				if(s.width != this._componentWidth) {
					this._componentWidth = s.width;
					invalidate = true;
				}
			}
			if(this.get_autoHeight() == true) {
				if(s.height != this._componentHeight) {
					this._componentHeight = s.height;
					invalidate = true;
				}
			}
		}
		return invalidate;
	}
	,isInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var _this = this._invalidationFlags;
			var value = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(value.hasNext()) {
				var value1 = value.next();
				return true;
			}
			return false;
		}
		var _this1 = this._invalidationFlags;
		if(__map_reserved[flag] != null) {
			return _this1.existsReserved(flag);
		} else {
			return _this1.h.hasOwnProperty(flag);
		}
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._ready == false) {
			return;
		}
		var isAlreadyInvalid = this.isInvalid();
		var isAlreadyDelayedInvalid = false;
		if(this._isValidating == true) {
			var _this = this._delayedInvalidationFlags;
			var value = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(value.hasNext()) {
				var value1 = value.next();
				isAlreadyDelayedInvalid = true;
				break;
			}
		}
		if(flag == "all") {
			if(this._isValidating == true) {
				var _this1 = this._delayedInvalidationFlags;
				var key = "all";
				if(__map_reserved[key] != null) {
					_this1.setReserved(key,true);
				} else {
					_this1.h[key] = true;
				}
			} else {
				this._isAllInvalid = true;
			}
		} else if(this._isValidating == true) {
			var _this2 = this._delayedInvalidationFlags;
			if(__map_reserved[flag] != null) {
				_this2.setReserved(flag,true);
			} else {
				_this2.h[flag] = true;
			}
		} else {
			var tmp;
			if(flag != "all") {
				var _this3 = this._invalidationFlags;
				tmp = !(__map_reserved[flag] != null ? _this3.existsReserved(flag) : _this3.h.hasOwnProperty(flag));
			} else {
				tmp = false;
			}
			if(tmp) {
				var _this4 = this._invalidationFlags;
				if(__map_reserved[flag] != null) {
					_this4.setReserved(flag,true);
				} else {
					_this4.h[flag] = true;
				}
			}
		}
		if(this._isValidating == true) {
			if(isAlreadyDelayedInvalid == true) {
				return;
			}
			this._invalidateCount++;
			if(this._invalidateCount >= 10) {
				throw new js__$Boot_HaxeError("The validation queue returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
			haxe_ui_validation_ValidationManager.get_instance().add(this);
			return;
		} else if(isAlreadyInvalid == true) {
			return;
		}
		this._invalidateCount = 0;
		haxe_ui_validation_ValidationManager.get_instance().add(this);
	}
	,invalidateComponentData: function() {
		this.invalidateComponent("data");
	}
	,invalidateComponentLayout: function() {
		if(this._layout == null || this._layoutLocked == true) {
			return;
		}
		this.invalidateComponent("layout");
	}
	,invalidateComponentPosition: function() {
		this.invalidateComponent("position");
	}
	,invalidateComponentDisplay: function() {
		this.invalidateComponent("display");
	}
	,invalidateComponentStyle: function() {
		this.invalidateComponent("style");
	}
	,applyStyle: function(style) {
		haxe_ui_backend_ComponentBase.prototype.applyStyle.call(this,style);
		if(style.percentWidth != null) {
			this.set_percentWidth(style.percentWidth);
		}
		if(style.percentHeight != null) {
			this.set_percentHeight(style.percentHeight);
		}
		if(style.width != null) {
			this.set_width(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.width));
		}
		if(style.height != null) {
			this.set_height(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.height));
		}
		if(style.native != null) {
			this.set_native(style.native);
		}
		if(style.hidden != null) {
			this.set_hidden(style.hidden);
		}
	}
	,cloneComponent: function() {
		var c = this.self();
		if(this.get_id() != null) {
			c.set_id(this.get_id());
		}
		if(this.get_text() != null) {
			c.set_text(this.get_text());
		}
		c.set_value(this.get_value());
		if(this.get_styleNames() != null) {
			c.set_styleNames(this.get_styleNames());
		}
		if(this.get_styleString() != null) {
			c.set_styleString(this.get_styleString());
		}
		if(this.get_percentWidth() != null) {
			c.set_percentWidth(this.get_percentWidth());
		}
		if(this.get_percentHeight() != null) {
			c.set_percentHeight(this.get_percentHeight());
		}
		if(this.get_componentWidth() != null) {
			c.set_componentWidth(this.get_componentWidth());
		}
		if(this.get_componentHeight() != null) {
			c.set_componentHeight(this.get_componentHeight());
		}
		if(this.get_color() != null) {
			c.set_color(this.get_color());
		}
		if(this.get_backgroundColor() != null) {
			c.set_backgroundColor(this.get_backgroundColor());
		}
		if(this.get_borderColor() != null) {
			c.set_borderColor(this.get_borderColor());
		}
		if(this.get_borderSize() != null) {
			c.set_borderSize(this.get_borderSize());
		}
		if(this.get_borderRadius() != null) {
			c.set_borderRadius(this.get_borderRadius());
		}
		if(this.padding != null) {
			c.set_padding(this.padding);
		}
		if(this.get_paddingLeft() != null) {
			c.set_paddingLeft(this.get_paddingLeft());
		}
		if(this.get_paddingRight() != null) {
			c.set_paddingRight(this.get_paddingRight());
		}
		if(this.get_paddingTop() != null) {
			c.set_paddingTop(this.get_paddingTop());
		}
		if(this.get_paddingBottom() != null) {
			c.set_paddingBottom(this.get_paddingBottom());
		}
		if(this.get_marginLeft() != null) {
			c.set_marginLeft(this.get_marginLeft());
		}
		if(this.get_marginRight() != null) {
			c.set_marginRight(this.get_marginRight());
		}
		if(this.get_marginTop() != null) {
			c.set_marginTop(this.get_marginTop());
		}
		if(this.get_marginBottom() != null) {
			c.set_marginBottom(this.get_marginBottom());
		}
		if(this.get_clip() != null) {
			c.set_clip(this.get_clip());
		}
		if(this.get_opacity() != null) {
			c.set_opacity(this.get_opacity());
		}
		if(this.get_horizontalAlign() != null) {
			c.set_horizontalAlign(this.get_horizontalAlign());
		}
		if(this.get_verticalAlign() != null) {
			c.set_verticalAlign(this.get_verticalAlign());
		}
		if(this.get_childComponents().length != c.get_childComponents().length) {
			var _g = 0;
			var _g1 = this.get_childComponents();
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		var tmp = this._ready == false;
		if(this.get_autoWidth() == false && this.get_width() > 0) {
			c.set_width(this.get_width());
		}
		if(this.get_autoHeight() == false && this.get_height() > 0) {
			c.set_height(this.get_height());
		}
		if(this._scriptEvents != null) {
			var k = this._scriptEvents.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				var _this = this._scriptEvents;
				c.addScriptEvent(k1,__map_reserved[k1] != null ? _this.getReserved(k1) : _this.h[k1]);
			}
		}
		return c;
	}
	,getProperty: function(name) {
		switch(name) {
		case "height":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_height());
		case "value":
			return this.get_value();
		case "width":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_width());
		}
		return null;
	}
	,setProperty: function(name,value) {
		switch(name) {
		case "height":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_height(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value)));
		case "value":
			return this.set_value(value);
		case "width":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_width(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value)));
		}
		return null;
	}
	,getClassProperty: function(name) {
		var v = null;
		if(this._classProperties != null) {
			var _this = this._classProperties;
			v = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		}
		if(v == null) {
			var c = Type.getClassName(js_Boot.getClass(this)).toLowerCase() + "." + name;
			var _this1 = haxe_ui_Toolkit.properties;
			v = __map_reserved[c] != null ? _this1.getReserved(c) : _this1.h[c];
		}
		return v;
	}
	,setClassProperty: function(name,value) {
		if(this._classProperties == null) {
			this._classProperties = new haxe_ds_StringMap();
		}
		var _this = this._classProperties;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,getNativeConfigProperty: function(query,defaultValue) {
		query = "component[id=" + this.get_className() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.query(query,defaultValue,this);
	}
	,getNativeConfigPropertyBool: function(query,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		query = "component[id=" + this.get_className() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryBool(query,defaultValue,this);
	}
	,getNativeConfigProperties: function(query) {
		if(query == null) {
			query = "";
		}
		query = "component[id=" + this.get_className() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryValues(query,this);
	}
	,get_className: function() {
		return Type.getClassName(js_Boot.getClass(this));
	}
	,get_color: function() {
		if(this.get_style() == null || this.get_style().color == null) {
			return null;
		}
		return this.get_style().color;
	}
	,set_color: function(value) {
		if(this.customStyle.color == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.color = haxe_ui_util__$Color_Color_$Impl_$.toInt(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_backgroundColor: function() {
		if(this.get_style() == null || this.get_style().backgroundColor == null) {
			return null;
		}
		return this.get_style().backgroundColor;
	}
	,set_backgroundColor: function(value) {
		if(this.customStyle.backgroundColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.backgroundColor = haxe_ui_util__$Color_Color_$Impl_$.toInt(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_borderColor: function() {
		if(this.get_style() == null || this.get_style().borderColor == null) {
			return null;
		}
		return this.get_style().borderColor;
	}
	,set_borderColor: function(value) {
		if(this.customStyle.borderColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.borderColor = haxe_ui_util__$Color_Color_$Impl_$.toInt(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_borderSize: function() {
		if(this.get_style() == null || this.get_style().borderSize == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().borderSize);
	}
	,set_borderSize: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.borderSize) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.borderSize = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_borderRadius: function() {
		if(this.get_style() == null || this.get_style().borderRadius == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().borderRadius);
	}
	,set_borderRadius: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.borderRadius) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.borderRadius = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		return value;
	}
	,set_padding: function(value) {
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.set_padding(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		this.invalidateComponent("style");
		return value;
	}
	,get_paddingLeft: function() {
		if(this.get_style() == null || this.get_style().paddingLeft == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().paddingLeft);
	}
	,set_paddingLeft: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.paddingLeft) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.paddingLeft = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_paddingRight: function() {
		if(this.get_style() == null || this.get_style().paddingRight == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().paddingRight);
	}
	,set_paddingRight: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.paddingRight) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.paddingRight = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_paddingTop: function() {
		if(this.get_style() == null || this.get_style().paddingTop == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().paddingTop);
	}
	,set_paddingTop: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.paddingTop) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.paddingTop = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_paddingBottom: function() {
		if(this.get_style() == null || this.get_style().paddingBottom == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().paddingBottom);
	}
	,set_paddingBottom: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.paddingBottom) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.paddingBottom = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_marginLeft: function() {
		if(this.get_style() == null || this.get_style().marginLeft == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().marginLeft);
	}
	,set_marginLeft: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.marginLeft) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.marginLeft = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_marginRight: function() {
		if(this.get_style() == null || this.get_style().marginRight == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().marginRight);
	}
	,set_marginRight: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.marginRight) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.marginRight = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_marginTop: function() {
		if(this.get_style() == null || this.get_style().marginTop == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().marginTop);
	}
	,set_marginTop: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.marginTop) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.marginTop = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_marginBottom: function() {
		if(this.get_style() == null || this.get_style().marginBottom == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().marginBottom);
	}
	,set_marginBottom: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.marginBottom) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.marginBottom = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		return value;
	}
	,get_clip: function() {
		if(this.get_style() == null || this.get_style().clip == null) {
			return null;
		}
		return this.get_style().clip;
	}
	,set_clip: function(value) {
		if(this.customStyle.clip == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.clip = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_opacity: function() {
		if(this.get_style() == null || this.get_style().opacity == null) {
			return null;
		}
		return this.get_style().opacity;
	}
	,set_opacity: function(value) {
		if(this.customStyle.opacity == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.opacity = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_horizontalAlign: function() {
		if(this.get_style() == null || this.get_style().horizontalAlign == null) {
			return null;
		}
		return this.get_style().horizontalAlign;
	}
	,set_horizontalAlign: function(value) {
		if(this.customStyle.horizontalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.horizontalAlign = value;
		this.invalidateComponent("style");
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,get_verticalAlign: function() {
		if(this.get_style() == null || this.get_style().verticalAlign == null) {
			return null;
		}
		return this.get_style().verticalAlign;
	}
	,set_verticalAlign: function(value) {
		if(this.customStyle.verticalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.verticalAlign = value;
		this.invalidateComponent("style");
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,self: function() {
		return new haxe_ui_core_Component();
	}
	,__class__: haxe_ui_core_Component
	,__properties__: {set_verticalAlign:"set_verticalAlign",get_verticalAlign:"get_verticalAlign",set_horizontalAlign:"set_horizontalAlign",get_horizontalAlign:"get_horizontalAlign",set_opacity:"set_opacity",get_opacity:"get_opacity",set_clip:"set_clip",get_clip:"get_clip",set_marginBottom:"set_marginBottom",get_marginBottom:"get_marginBottom",set_marginTop:"set_marginTop",get_marginTop:"get_marginTop",set_marginRight:"set_marginRight",get_marginRight:"get_marginRight",set_marginLeft:"set_marginLeft",get_marginLeft:"get_marginLeft",set_paddingBottom:"set_paddingBottom",get_paddingBottom:"get_paddingBottom",set_paddingTop:"set_paddingTop",get_paddingTop:"get_paddingTop",set_paddingRight:"set_paddingRight",get_paddingRight:"get_paddingRight",set_paddingLeft:"set_paddingLeft",get_paddingLeft:"get_paddingLeft",set_padding:"set_padding",set_borderRadius:"set_borderRadius",get_borderRadius:"get_borderRadius",set_borderSize:"set_borderSize",get_borderSize:"get_borderSize",set_borderColor:"set_borderColor",get_borderColor:"get_borderColor",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_color:"set_color",get_color:"get_color",get_className:"get_className",set_depth:"set_depth",get_depth:"get_depth",set_onChange:"set_onChange",set_onClick:"set_onClick",get_namedComponents:"get_namedComponents",set_script:"set_script",get_screenTop:"get_screenTop",get_screenLeft:"get_screenLeft",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_componentHeight:"set_componentHeight",get_componentHeight:"get_componentHeight",set_componentWidth:"set_componentWidth",get_componentWidth:"get_componentWidth",set_percentHeight:"set_percentHeight",get_percentHeight:"get_percentHeight",set_percentWidth:"set_percentWidth",get_percentWidth:"get_percentWidth",get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth",get_isReady:"get_isReady",set_layout:"set_layout",get_layout:"get_layout",set_includeInLayout:"set_includeInLayout",get_includeInLayout:"get_includeInLayout",set_style:"set_style",get_style:"get_style",set_styleString:"set_styleString",get_styleString:"get_styleString",set_styleNames:"set_styleNames",get_styleNames:"get_styleNames",set_disabled:"set_disabled",get_disabled:"get_disabled",set_hidden:"set_hidden",get_hidden:"get_hidden",get_childComponents:"get_childComponents",get_rootComponent:"get_rootComponent",set_componentClipRect:"set_componentClipRect",get_componentClipRect:"get_componentClipRect",get_screen:"get_screen",set_value:"set_value",get_value:"get_value",set_text:"set_text",get_text:"get_text",set_id:"set_id",get_id:"get_id",set_animatable:"set_animatable",get_animatable:"get_animatable",set_native:"set_native",get_native:"get_native",get_hasNativeEntry:"get_hasNativeEntry"}
});
var MainView = function() {
	this._dragOffsetY = -1;
	this._dragOffsetX = -1;
	this._resizeConstrants = new haxe_ds_ObjectMap();
	var _gthis = this;
	haxe_ui_core_Component.call(this);
	haxe_ui_Toolkit.styleSheet.addRules("\n#main {\n    padding: 10px;\n}\n\n.button, .label, .textarea, .textfield {\n    font-name: \"Roboto\";\n    font-size: 13px;\n}\n\n.box {\n    background-color: #404040;\n}\n\n.label {\n    color: #AAAAAA;\n    background-opacity: 0;\n}\n\n.textfield {\n    color: white;\n    background-color: none;\n    border: none;\n    filter: none !important;\n    border-bottom-width: 2px;\n    border-bottom-color: #e2e2e2;\n    border-radius: 0;\n}\n\n.textfield:active {\n    border: none;\n    border-bottom-width: 2px;\n    border-bottom-color: #e2e2e2;\n    border-radius: 0;\n}\n\n.textfield:empty {\n    color: #AAAAAA;\n}\n\n\n.button, .button:down {\n    background-color: #D0D0D0;\n    color: black;\n    border: none;\n    padding-left: 12px;\n    padding-right: 12px;\n    border-radius: 3px;\n    color: #282828;\n    filter: drop-shadow(1, 45, #000000, 0.3, 1, 1, 1, 1, false);\n}\n\n.button:hover {\n    background-color: #DDDDDD;\n}\n\n.button:down {\n    background-color: #4e6a97;\n    color: white;\n}\n\n.tabbar {\n    background-color: #404040;\n    __border-bottom-color: #666666;\n    border-bottom-width: 0 !important;\n    border-bottom-color: none;\n}\n\n.tabbar .tabbar-contents {\n    margin-top: 2px;\n    border: none;\n    border-bottom-width: 0;\n    border-bottom-color: none;\n}\n\n.tabbar-button, .tabbar-button:hover {\n    __background-color: #1E1E1E;\n    background-color: #535353;\n    color: #e2e2e2;\n    __border-color: #666666;\n    border: none;\n    border-radius: 3px;\n    padding: 6px;\n    padding-left: 10px;\n    padding-right: 10px;\n    padding-bottom: 9px;\n    border-top-color: #535353;\n    border-top-width: 2px;\n\n}\n\n.tabbar-button:hover {\n    __color: white;\n    background-color: #595959;\n}\n\n.tabbar-button-selected, .tabbar-button-selected:hover, .tabbar-button-selected:down {\n    __border-bottom-color: #1E1E1E;\n    background-color: #666666;\n    color: white;\n\n    border-top-color: #6697E6;\n    border-top-width: 2px;\n}\n\n.tabbar-scroll-left {\n    padding: 5px 6px;\n}\n\n.tabbar-scroll-right {\n    padding: 5px 6px;\n}\n\n\n\n.tabview .tabview-content {\n    background-color: #666666;\n    __border: 1px solid #666666;\n    border: none;\n    border-radius: 3px;\n    filter: drop-shadow(1, 45, #000000, 0.2, 2, 2, 1, 3, false);\n}\n\n.editor {\n    background-color: #666666;\n    border-radius: 3px;\n}\n\n.container {\n    background-color: #666666;\n    padding: 5px;\n    __border: 1px solid #666666;\n    border: none;\n    border-radius: 3px;\n    filter: drop-shadow(1, 45, #000000, 0.2, 2, 2, 1, 3, false);\n}\n\n.container .box {\n    background-color: #666666;\n}\n\n.scrollview {\n    border: none;\n    __padding: 0;\n    background-color: #1E1E1E;\n    border-radius: 3px;\n}\n\n.scrollview .scrollview-contents {\n    background-color: #1E1E1E;\n    __padding: 0;\n}\n\n.scrollview .scrollview-contents .hbox {\n    background-color: #1E1E1E;\n}\n\n.scrollview .scrollview-contents .hbox .label {\n    color: #CCCCCC;\n}\n\n#log .scrollview-contents .hbox .label {\n    color: #899fc2;\n}\n\n#log .scrollview-contents .hbox .label.error {\n    color: #CC2222;\n}\n\n.vscroll .button.deinc, .vscroll .button.inc {\n    hidden: true;\n}\n\n.vscroll {\n    width: 8px;\n    background-color: #1E1E1E;\n}\n\n.vscroll .button.thumb {\n    width: 6px;\n    background-color: #444444;\n    border-radius: 4px;\n}\n\n.vscroll .button.thumb:hover {\n    background-color: #666666;\n}\n\n.dialog {\n    border-color: #666666;\n    border: none;\n    filter: drop-shadow(3, 45, #222222, 0.2, 20, 2, 1, 3, false);\n}\n\n.dialog-title-bar {\n    border-color: #666666;\n    background-color: grey !important;\n}    \n\n.dialog-title {\n    color: white;\n}\n\n.dialog, .dialog .box {\n    background-color: #666666;\n}\n\n.dialog-close-button {\n    filter: none;\n}\n\n.listview {\n    background-color: #1E1E1E;\n    __border: 1px solid #666666;\n    border: none;\n    border-radius: 3px;\n  \n}\n\n.listview .itemrenderer .box {\n    background-color: none;\n}\n\n.listview .itemrenderer.even {\n    background-color: #1E1E1E;\n    cursor: pointer;\n    border-radius: 3px;\n}\n\n.listview .itemrenderer.odd {\n    background-color: #333333;\n    cursor: pointer;\n    border-radius: 3px;\n}\n\n.listview .itemrenderer.even:hover, .listview .itemrenderer.odd:hover {\n    background-color: #444444;\n}\n\n.listview .itemrenderer:selected {\n    background-color: #4e6a97;\n    color: white;\n}\n\n.dropdown {\n    background-color: #444;\n    color: #E6E6E6;\n    border: none;\n    icon: \"img/up_down_arrows_white.png\";\n}\n\n.dropdown:hover {\n    background-color: #515151;\n    color: #E6E6E6;\n}\n\n.dialog .label {\n    color: white;\n}\n\n.checkbox {\n    width: auto;\n    height: auto;\n    horizontal-spacing: 4px;\n    cursor: pointer;\n    color: #CCCCCC;\n}\n\n.checkbox-value {\n    border: 1px solid #ABABAB;\n    background-color: #1e1e1e;\n    width: 16px;\n    height: 16px;\n    vertical-align: center;\n    border-radius: 2px;\n    icon: none;\n    filter: drop-shadow(1, 45, #888888, 0.2, 2, 2, 1, 3, true);\n    cursor: pointer;\n}\n\n\nTreeView {\n    __background-color: red;\n}\n\nTreeView .scrollview-contents {\n    padding-top: 4px;\n    padding-bottom: 4px;\n}\n\nTreeViewNode {\n    background-color: white;\n    height: auto;\n    width: auto;\n}\n\n#node {\n    padding: 4px;\n}\n\n#node:hover {\n    background-color: #444444;\n    border-radius: 3px;\n    __border: 1px solid blue;\n}    \n\n#node:selected {\n    background-color: #4e6a97;\n    border-radius: 3px;\n    __border: 1px solid blue;\n}    \n");
	haxe_ui_Toolkit.styleSheet.addRules("\n        #buttonInject {\n            icon: \"img/play-button_grey.png\";\n        }\n        #buttonInject:down {\n            icon: \"img/play-button.png\";\n        }\n\n        #buttonRestart {\n            icon: \"img/repeat_grey.png\";\n        }\n        #buttonRestart:down {\n            icon: \"img/repeat.png\";\n        }\n\n        #buttonDownload {\n            icon: \"img/attachment_grey.png\";\n        }\n        #buttonDownload:down {\n            icon: \"img/attachment.png\";\n        }\n\n        #addResourceButton {\n            icon: \"img/plus_grey.png\";\n        }\n        #addResourceButton:down {\n            icon: \"img/plus.png\";\n        }\n\n    ");
	var c0 = new haxe_ui_containers_VBox();
	var c1 = new haxe_ui_containers_HBox();
	var c2 = new haxe_ui_components_Button();
	c2.set_id("buttonInject");
	c2.set_text("Compile & Inject");
	c1.addComponent(c2);
	var c21 = new haxe_ui_components_Button();
	c21.set_id("buttonRestart");
	c21.set_text("Compile & Restart");
	c1.addComponent(c21);
	var c22 = new haxe_ui_components_Button();
	c22.set_id("buttonDownload");
	c22.set_text("Download Project");
	c1.addComponent(c22);
	c1.set_percentWidth(100.);
	c1.set_styleString("padding-top:4px;");
	c0.addComponent(c1);
	var c11 = new haxe_ui_containers_HBox();
	var c23 = new haxe_ui_containers_VBox();
	var c3 = new panels_Khanvas();
	c3.set_id("khanvasPanel");
	c3.set_percentWidth(100.);
	c3.set_percentHeight(70.);
	c23.addComponent(c3);
	var c31 = new haxe_ui_components_Image();
	c31.set_id("sizer1");
	c31.set_width(33.);
	c31.set_height(8.);
	c31.set_styleString("cursor:row-resize;");
	c31.set_resource("img/hsizegrip.png");
	c31.set_horizontalAlign("center");
	c23.addComponent(c31);
	var c32 = new panels_Log();
	c32.set_id("log");
	c32.set_percentWidth(100.);
	c32.set_percentHeight(30.);
	c23.addComponent(c32);
	c23.set_id("box1");
	c23.set_percentWidth(50.);
	c23.set_percentHeight(100.);
	c23.set_styleString("spacing: 5px;padding-top:4px; padding-bottom:1px;");
	c11.addComponent(c23);
	var c24 = new haxe_ui_components_Image();
	c24.set_id("sizer2");
	c24.set_width(8.);
	c24.set_height(33.);
	c24.set_styleString("cursor:col-resize;");
	c24.set_resource("img/vsizegrip.png");
	c24.set_verticalAlign("center");
	c11.addComponent(c24);
	var c25 = new haxe_ui_containers_VBox();
	var c33 = new panels_Tabs();
	c33.set_id("tabs");
	c33.set_percentWidth(100.);
	c33.set_percentHeight(100.);
	c25.addComponent(c33);
	c25.set_id("box2");
	c25.set_percentWidth(50.);
	c25.set_percentHeight(100.);
	c25.set_styleString("padding-top: 2px;");
	c11.addComponent(c25);
	var c26 = new haxe_ui_components_Image();
	c26.set_id("sizer3");
	c26.set_width(8.);
	c26.set_height(33.);
	c26.set_styleString("cursor:col-resize;");
	c26.set_resource("img/vsizegrip.png");
	c26.set_verticalAlign("center");
	c11.addComponent(c26);
	var c27 = new haxe_ui_containers_VBox();
	var c34 = new haxe_ui_components_Button();
	c34.set_id("addResourceButton");
	c34.set_text("Add Resource");
	c34.set_iconPosition("right");
	c34.set_horizontalAlign("right");
	c34.set_icon("img/plus_grey.png");
	c27.addComponent(c34);
	var c35 = new panels_ResourceManager();
	c35.set_id("resourceManager");
	c35.set_percentWidth(100.);
	c35.set_percentHeight(100.);
	c27.addComponent(c35);
	c27.set_id("box3");
	c27.set_width(250.);
	c27.set_percentHeight(100.);
	c27.set_styleString("padding-top: 2px; padding-bottom:1px;");
	c11.addComponent(c27);
	c11.set_percentWidth(100.);
	c11.set_percentHeight(100.);
	c11.set_styleString("spacing: 5px;");
	c0.addComponent(c11);
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleString("padding:10px;spacing: 10px;");
	c0.set_script("");
	this.addComponent(c0);
	this.addClass("mainview-container");
	this.addClass("custom-component");
	this.sizer2 = this.findComponent("sizer2",haxe_ui_components_Image,true);
	this.buttonDownload = this.findComponent("buttonDownload",haxe_ui_components_Button,true);
	this.box2 = this.findComponent("box2",haxe_ui_containers_VBox,true);
	this.box1 = this.findComponent("box1",haxe_ui_containers_VBox,true);
	this.addResourceButton = this.findComponent("addResourceButton",haxe_ui_components_Button,true);
	this.sizer3 = this.findComponent("sizer3",haxe_ui_components_Image,true);
	this.buttonRestart = this.findComponent("buttonRestart",haxe_ui_components_Button,true);
	this.buttonInject = this.findComponent("buttonInject",haxe_ui_components_Button,true);
	this.tabs = this.findComponent("tabs",panels_Tabs,true);
	this.khanvasPanel = this.findComponent("khanvasPanel",panels_Khanvas,true);
	this.log = this.findComponent("log",panels_Log,true);
	this.box3 = this.findComponent("box3",haxe_ui_containers_VBox,true);
	this.resourceManager = this.findComponent("resourceManager",panels_ResourceManager,true);
	this.sizer1 = this.findComponent("sizer1",haxe_ui_components_Image,true);
	this.set_percentWidth(this.set_percentHeight(100));
	project_Project.get_instance().registerListener(this.resourceManager);
	project_Project.get_instance().registerListener(this.tabs);
	Server.log = ($_=this.log,$bind($_,$_.logMessage));
	if(window.location.hash.length > 1) {
		MainView.sha = HxOverrides.substr(window.location.hash,1,null);
	}
	window.onhashchange = function() {
		var newSha = HxOverrides.substr(window.location.hash,1,null);
		if(newSha != MainView.sha) {
			window.location.reload();
		}
	};
	window.addEventListener("keydown",function(e) {
		var key = null;
		var possible = [e.key,e.keyIdentifier,e.keyCode,e.which];
		while(key == null && possible.length > 0) key = possible.pop();
		if(key != null && (key == "115" || key == "83") && (e.ctrlKey || e.metaKey) && !e.altKey) {
			e.preventDefault();
			project_Project.get_instance().saveAll();
			return false;
		}
		return true;
	});
	var scriptElement = window.document.createElement("script");
	scriptElement.onload = function(e1) {
		haxe_Log.trace("kha.js loaded",{ fileName : "src/MainView.hx", lineNumber : 60, className : "MainView", methodName : "new"});
		WorkerKha.instance.load("/projects/" + MainView.sha + "/khaworker.js");
		project_Project.get_instance().refresh(MainView.sha,function() {
		});
		_gthis.log.logMessage("Kode Garden ready",false);
	};
	scriptElement.src = "kha.js";
	window.document.body.appendChild(scriptElement);
	this.buttonInject.set_onClick(function(e2) {
		project_Project.get_instance().inject();
	});
	this.buttonRestart.set_onClick(function(e3) {
		project_Project.get_instance().build();
	});
	this.buttonDownload.set_onClick(function(e4) {
		project_Project.get_instance().download();
	});
	this.addResourceButton.set_onClick(function(e5) {
		_gthis.startAddResource();
	});
	new haxe_ui_util_Timer(60000,function() {
		project_Project.get_instance().saveAll(null,true);
	});
	this.registerResizeConstraint(this.sizer1,{ component1 : this.khanvasPanel, component2 : this.log, component1Min : 200, component2Min : 200, direction : "vertical"});
	this.registerResizeConstraint(this.sizer2,{ component1 : this.box1, component2 : this.box2, component1Min : 200, component2Min : 200, direction : "horizontal"});
	this.registerResizeConstraint(this.sizer3,{ component1 : this.box2, component2 : this.box3, component1Min : 200, component2Min : 200, direction : "horizontal"});
};
$hxClasses["MainView"] = MainView;
MainView.__name__ = ["MainView"];
MainView.updateSha = function(newSha) {
	MainView.sha = newSha;
	project_Project.get_instance().sha = newSha;
	window.history.pushState("","","#" + MainView.sha);
};
MainView.__super__ = haxe_ui_core_Component;
MainView.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerResizeConstraint: function(sizer,details) {
		this._resizeConstrants.set(sizer,details);
		sizer.registerEvent("mousedown",$bind(this,this.onSizerMouseDown));
	}
	,onSizerMouseDown: function(event) {
		this._dragSizer = event.target;
		this._dragOffsetX = event.screenX;
		this._dragOffsetY = event.screenY;
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		var details = this._resizeConstrants.h[this._dragSizer.__id__];
		if(details.direction == "horizontal") {
			window.document.body.style.cursor = "col-resize";
		} else if(details.direction == "vertical") {
			window.document.body.style.cursor = "row-resize";
		}
	}
	,onScreenMouseMove: function(event) {
		if(this._dragSizer != null) {
			var details = this._resizeConstrants.h[this._dragSizer.__id__];
			var c1 = details.component1;
			var c2 = details.component2;
			var min1 = details.component1Min;
			var min2 = details.component2Min;
			if(details.direction == "horizontal") {
				var delta = event.screenX - this._dragOffsetX;
				var n1 = c1.get_width() + delta;
				var n2 = c2.get_width() - delta;
				if(n1 < min1 || n2 < min2) {
					return;
				}
				this._dragOffsetX = event.screenX;
				haxe_Log.trace(c1.get_percentWidth() + ", " + c1.get_width() + ", " + n1,{ fileName : "src/MainView.hx", lineNumber : 156, className : "MainView", methodName : "onScreenMouseMove"});
				haxe_Log.trace(c2.get_percentWidth() + ", " + c2.get_width() + ", " + n2,{ fileName : "src/MainView.hx", lineNumber : 157, className : "MainView", methodName : "onScreenMouseMove"});
				if(c2 == this.box3) {
					c2.set_width(n2);
				} else {
					c1.set_percentWidth(n1 / c1.get_width() * c1.get_percentWidth());
					c2.set_percentWidth(n2 / c2.get_width() * c2.get_percentWidth());
				}
			} else if(details.direction == "vertical") {
				var delta1 = event.screenY - this._dragOffsetY;
				var n11 = c1.get_height() + delta1;
				var n21 = c2.get_height() - delta1;
				if(n11 < min1 || n21 < min2) {
					return;
				}
				this._dragOffsetY = event.screenY;
				c1.set_percentHeight(n11 / c1.get_height() * c1.get_percentHeight());
				c2.set_percentHeight(n21 / c2.get_height() * c2.get_percentHeight());
			}
		}
	}
	,onScreenMouseUp: function(event) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		window.document.body.style.cursor = null;
		this._dragSizer = null;
		this._dragOffsetX = -1;
		this._dragOffsetY = -1;
	}
	,startAddResource: function() {
		var _gthis = this;
		var dialog = new dialogs_AddResourceDialog();
		var contextPath = "";
		if(Navigation.get_instance().selectedResource != null) {
			var r = Navigation.get_instance().selectedResource;
			if(r.type == 2) {
				r = r.parent;
			}
			if(r.type == 1) {
				contextPath = r.get_fullName();
			}
			contextPath = StringTools.replace(contextPath,"Sources","");
			contextPath = StringTools.replace(contextPath,"Shaders","");
			contextPath = StringTools.replace(contextPath,"Assets","");
			if(StringTools.startsWith(contextPath,"/")) {
				contextPath = contextPath.substring(1);
			}
		}
		dialog.set_contextPath(contextPath);
		var options = { title : "Add Resource", buttons : []};
		var dialogContainer = null;
		haxe_ui_core_Screen.get_instance().showDialog(dialog,options,function(b) {
			if(b.id == "confirm") {
				var _g = dialog.get_resourceType();
				switch(_g) {
				case "Asset":
					var reader = new FileReader();
					reader.onload = function(upload) {
						project_Project.get_instance().set_activeResource(project_Project.get_instance().addResource(4,dialog.assetFile.get_file().name));
						var buffer = upload.target.result;
						haxe_Log.trace(dialog.assetFile.get_text(),{ fileName : "src/MainView.hx", lineNumber : 251, className : "MainView", methodName : "startAddResource"});
						Server.addAsset(MainView.sha,dialog.assetFile.get_text(),buffer).handle(function(newSha) {
							MainView.updateSha(newSha);
						});
					};
					reader.readAsArrayBuffer(dialog.assetFile.get_file());
					break;
				case "Shader":
					var shaderFile = dialog.shaderFile.get_text() + dialog.shaderType.get_text();
					var content = "shaders/" + dialog.shaderTemplate.get_text() + dialog.shaderType.get_text() + ".template";
					var content1 = _gthis.applyResourceTemplate(content,shaderFile);
					project_Project.get_instance().set_activeResource(project_Project.get_instance().addResource(3,shaderFile,content1));
					Server.addShader(MainView.sha,shaderFile).handle(function(newSha1) {
						Server.setShader(newSha1,shaderFile,content1).handle(function(newSha2) {
							MainView.updateSha(newSha2);
						});
					});
					break;
				case "Source":
					var sourceFile = dialog.sourceFile.get_text();
					if(StringTools.endsWith(sourceFile,".hx") == false) {
						sourceFile += ".hx";
					}
					var content2 = "sources/" + dialog.get_sourceType() + ".template";
					var content3 = _gthis.applyResourceTemplate(content2,sourceFile);
					project_Project.get_instance().set_activeResource(project_Project.get_instance().addResource(2,sourceFile,content3));
					Server.addSource(MainView.sha,sourceFile).handle(function(newSha3) {
						Server.setSource(newSha3,sourceFile,content3).handle(function(newSha4) {
							MainView.updateSha(newSha4);
						});
					});
					break;
				}
			}
		});
	}
	,applyResourceTemplate: function(templateName,resource) {
		var full = "templates/" + templateName;
		var content = haxe_ui_ToolkitAssets.get_instance().getText(full);
		var parts = resource.split("/");
		var name = parts.pop();
		name = StringTools.replace(name,".hx","");
		var pckg = "";
		if(parts.length > 0) {
			pckg = parts.join(".");
		}
		content = StringTools.replace(content,"$package",pckg);
		content = StringTools.replace(content,"$name",name);
		return content;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new MainView();
	}
	,__class__: MainView
});
Math.__name__ = ["Math"];
var Navigation = function() {
	EventDispatcher.get_instance().registerListener(this);
};
$hxClasses["Navigation"] = Navigation;
Navigation.__name__ = ["Navigation"];
Navigation.__interfaces__ = [IListener];
Navigation.__properties__ = {get_instance:"get_instance"};
Navigation.get_instance = function() {
	if(Navigation._instance == null) {
		Navigation._instance = new Navigation();
	}
	return Navigation._instance;
};
Navigation.prototype = {
	onEvent: function(event,data) {
		if(event == 0) {
			this.selectedResource = data;
			var tmp = this.selectedResource.get_fullName();
			window.document.cookie = "lastFile=" + tmp;
		}
	}
	,__class__: Navigation
};
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,__class__: haxe_ds_IntMap
};
var Server = function() { };
$hxClasses["Server"] = Server;
Server.__name__ = ["Server"];
Server.start = function() {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		if(Server._connected == true) {
			cb(true);
			return;
		}
		Server._socket = io();
		Server._socket.on("connect",function(e) {
			Server._connected = true;
			cb(true);
		});
		Server._socket.on("callback",function(msg) {
			if(msg.callid) {
				Server._calls.h[Std.parseInt("" + (msg.callid == null ? "null" : "" + msg.callid))](msg.ret);
				Server._calls.remove(Std.parseInt("" + (msg.callid == null ? "null" : "" + msg.callid)));
			}
		});
		Server._socket.on("compilation-message",function(msg1) {
			Server.log(msg1.message,false);
		});
		Server._socket.on("compilation-error",function(msg2) {
			Server.log(msg2.message,true);
		});
	});
};
Server.call = function(id,func,args) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		args.callid = ++Server._lastId;
		args.func = func;
		args.id = id;
		Server.start().handle(function(b) {
			Server._calls.h[Server._lastId] = cb;
			Server._socket.emit("project",args);
		});
	});
};
Server.sources = function(id) {
	return Server.call(id,"sources",{ });
};
Server.source = function(id,file) {
	return Server.call(id,"source",{ file : file});
};
Server.setSource = function(id,file,content) {
	return Server.call(id,"setSource",{ file : file, content : content});
};
Server.addSource = function(id,file) {
	return Server.call(id,"addSource",{ file : file});
};
Server.shaders = function(id) {
	return Server.call(id,"shaders",{ });
};
Server.shader = function(id,file) {
	return Server.call(id,"shader",{ file : file});
};
Server.setShader = function(id,file,content) {
	return Server.call(id,"setShader",{ file : file, content : content});
};
Server.addShader = function(id,file) {
	return Server.call(id,"addShader",{ file : file});
};
Server.assets = function(id) {
	return Server.call(id,"assets",{ });
};
Server.download = function(id) {
	return Server.call(id,"download",{ });
};
Server.compile = function(id) {
	return Server.call(id,"compile",{ });
};
Server.addAsset = function(id,filename,buffer) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var callid = ++Server._lastId;
		Server.start().handle(function(b) {
			Server._calls.h[Server._lastId] = cb;
			Server._socket.emit("uploadAsset",{ callid : callid, id : id, filename : filename, buffer : buffer});
		});
	});
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.is = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.instance = function(value,c) {
	if((value instanceof c)) {
		return value;
	} else {
		return null;
	}
};
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.int = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
};
StringTools.urlDecode = function(s) {
	return decodeURIComponent(s.split("+").join(" "));
};
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) {
		return s.split("\"").join("&quot;").split("'").join("&#039;");
	} else {
		return s;
	}
};
StringTools.htmlUnescape = function(s) {
	return s.split("&gt;").join(">").split("&lt;").join("<").split("&quot;").join("\"").split("&#039;").join("'").split("&amp;").join("&");
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s = c + s;
	return s;
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	while(s.length < l) s += c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
StringTools.isEof = function(c) {
	return c != c;
};
StringTools.quoteUnixArg = function(argument) {
	if(argument == "") {
		return "''";
	}
	if(!new EReg("[^a-zA-Z0-9_@%+=:,./-]","").match(argument)) {
		return argument;
	}
	return "'" + StringTools.replace(argument,"'","'\"'\"'") + "'";
};
StringTools.quoteWinArg = function(argument,escapeMetaCharacters) {
	if(!new EReg("^[^ \t\\\\\"]+$","").match(argument)) {
		var result_b = "";
		var needquote = argument.indexOf(" ") != -1 || argument.indexOf("\t") != -1 || argument == "";
		if(needquote) {
			result_b += "\"";
		}
		var bs_buf = new StringBuf();
		var _g1 = 0;
		var _g = argument.length;
		while(_g1 < _g) {
			var i = _g1++;
			var _g2 = HxOverrides.cca(argument,i);
			if(_g2 == null) {
				var c = _g2;
				if(bs_buf.b.length > 0) {
					result_b += Std.string(bs_buf.b);
					bs_buf = new StringBuf();
				}
				result_b += String.fromCharCode(c);
			} else {
				switch(_g2) {
				case 34:
					var bs = bs_buf.b;
					result_b += bs == null ? "null" : "" + bs;
					result_b += bs == null ? "null" : "" + bs;
					bs_buf = new StringBuf();
					result_b += "\\\"";
					break;
				case 92:
					bs_buf.b += "\\";
					break;
				default:
					var c1 = _g2;
					if(bs_buf.b.length > 0) {
						result_b += Std.string(bs_buf.b);
						bs_buf = new StringBuf();
					}
					result_b += String.fromCharCode(c1);
				}
			}
		}
		result_b += Std.string(bs_buf.b);
		if(needquote) {
			result_b += Std.string(bs_buf.b);
			result_b += "\"";
		}
		argument = result_b;
	}
	if(escapeMetaCharacters) {
		var result_b1 = "";
		var _g11 = 0;
		var _g3 = argument.length;
		while(_g11 < _g3) {
			var i1 = _g11++;
			var c2 = HxOverrides.cca(argument,i1);
			if(StringTools.winMetaCharacters.indexOf(c2) >= 0) {
				result_b1 += "^";
			}
			result_b1 += String.fromCharCode(c2);
		}
		return result_b1;
	} else {
		return argument;
	}
};
var ValueType = $hxEnums["ValueType"] = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"]
	,TNull: {_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_index:8,__enum__:"ValueType",toString:$estr}
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.createInstance = function(cl,args) {
	return new (Function.prototype.bind.apply(cl,[null].concat(args)));
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var _g = 0;
		var _g1 = Reflect.fields(a);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
		var e = a.__enum__;
		if(e != b.__enum__ || e == null) {
			return false;
		}
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
		var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.getReserved(att);
		} else {
			return _this.h[att];
		}
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			_this.setReserved(att,value);
		} else {
			_this.h[att] = value;
		}
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		var _this = this.attributeMap;
		if(__map_reserved[att] != null) {
			return _this.existsReserved(att);
		} else {
			return _this.h.hasOwnProperty(att);
		}
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		}
		return this.attributeMap.keys();
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		var ret = _g;
		return HxOverrides.iter(ret);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		var ret = _g;
		return HxOverrides.iter(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var custom_Canvas = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["custom.Canvas"] = custom_Canvas;
custom_Canvas.__name__ = ["custom","Canvas"];
custom_Canvas.__super__ = haxe_ui_core_Component;
custom_Canvas.prototype = $extend(haxe_ui_core_Component.prototype,{
	fullscreen: function() {
		if(Reflect.getProperty(this._el,"webkitRequestFullScreen") != null) {
			var o = this._el;
			Reflect.getProperty(this._el,"webkitRequestFullScreen").apply(o,[]);
		} else if(Reflect.getProperty(this._el,"mozRequestFullScreen") != null) {
			var o1 = this._el;
			Reflect.getProperty(this._el,"mozRequestFullScreen").apply(o1,[]);
		}
	}
	,onReady: function() {
		haxe_ui_core_Component.prototype.onReady.call(this);
		this._el = window.document.createElement("canvas");
		this._el.style.outline = "none";
		this._el.id = "khanvas";
		this.element.appendChild(this._el);
		this.onResized();
	}
	,validateLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateLayout.call(this);
		if(this._el != null && this.get_width() > 0 && this.get_height() > 0) {
			var tmp = "" + this.get_width();
			this._el.style.width = tmp + "px";
			var tmp1 = "" + this.get_height();
			this._el.style.height = tmp1 + "px";
		}
		return b;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new custom_Canvas();
	}
	,__class__: custom_Canvas
});
var haxe_ui_containers_Box = function() {
	haxe_ui_core_Component.call(this);
	this.set_layout(new haxe_ui_layouts_DefaultLayout());
};
$hxClasses["haxe.ui.containers.Box"] = haxe_ui_containers_Box;
haxe_ui_containers_Box.__name__ = ["haxe","ui","containers","Box"];
haxe_ui_containers_Box.__super__ = haxe_ui_core_Component;
haxe_ui_containers_Box.prototype = $extend(haxe_ui_core_Component.prototype,{
	get_layoutName: function() {
		return this._layoutName;
	}
	,set_layoutName: function(value) {
		if(this._layoutName == value) {
			return value;
		}
		this._layoutName = value;
		this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this.get_layoutName()));
		return value;
	}
	,get_icon: function() {
		return this._icon;
	}
	,set_icon: function(value) {
		this._icon = value;
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_layoutName() != null) {
			c.set_layoutName(this.get_layoutName());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Box();
	}
	,__class__: haxe_ui_containers_Box
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_icon:"set_icon",get_icon:"get_icon",set_layoutName:"set_layoutName",get_layoutName:"get_layoutName"})
});
var haxe_ui_containers_HBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_HorizontalLayout());
};
$hxClasses["haxe.ui.containers.HBox"] = haxe_ui_containers_HBox;
haxe_ui_containers_HBox.__name__ = ["haxe","ui","containers","HBox"];
haxe_ui_containers_HBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_HBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	get_continuous: function() {
		return (this._layout instanceof haxe_ui_layouts_HorizontalContinuousLayout);
	}
	,set_continuous: function(value) {
		if(value == true) {
			this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
		} else {
			this.set_layout(new haxe_ui_layouts_HorizontalLayout());
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_continuous(this.get_continuous());
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_HBox();
	}
	,__class__: haxe_ui_containers_HBox
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_continuous:"set_continuous",get_continuous:"get_continuous"})
});
var custom_FileSelector = function() {
	var _gthis = this;
	haxe_ui_containers_HBox.call(this);
	var textfield = new haxe_ui_components_TextField();
	textfield.set_percentWidth(100);
	this.addComponent(textfield);
	var button = new haxe_ui_components_Button();
	button.set_text("Select");
	this.addComponent(button);
	button.set_onClick(function(e) {
		_gthis._fileInput.click();
	});
};
$hxClasses["custom.FileSelector"] = custom_FileSelector;
custom_FileSelector.__name__ = ["custom","FileSelector"];
custom_FileSelector.__super__ = haxe_ui_containers_HBox;
custom_FileSelector.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	onReady: function() {
		var _gthis = this;
		haxe_ui_containers_HBox.prototype.onReady.call(this);
		this._fileInput = window.document.createElement("input");
		this._fileInput.type = "file";
		this._fileInput.style.display = "none";
		this.element.appendChild(this._fileInput);
		this._fileInput.onchange = function(e) {
			_gthis.findComponent(null,haxe_ui_components_TextField).set_text(_gthis._fileInput.files[0].name);
			_gthis.dispatch(new haxe_ui_core_UIEvent("change"));
		};
	}
	,get_text: function() {
		return this.findComponent(null,haxe_ui_components_TextField).get_text();
	}
	,get_file: function() {
		return this._fileInput.files[0];
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new custom_FileSelector();
	}
	,__class__: custom_FileSelector
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{get_file:"get_file"})
});
var custom_MonacoEditor = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["custom.MonacoEditor"] = custom_MonacoEditor;
custom_MonacoEditor.__name__ = ["custom","MonacoEditor"];
custom_MonacoEditor.__super__ = haxe_ui_core_Component;
custom_MonacoEditor.prototype = $extend(haxe_ui_core_Component.prototype,{
	onReady: function() {
		var _gthis = this;
		haxe_ui_core_Component.prototype.onReady.call(this);
		if(custom_MonacoEditor._loaded == false) {
			var scriptElement = window.document.createElement("script");
			scriptElement.onload = function(e) {
				require.config({ paths : { "vs" : "monaco-editor-0.13.1/min/vs"}});
				custom_MonacoEditor._loaded = true;
				_gthis.createEditor();
			};
			scriptElement.src = "monaco-editor-0.13.1/min/vs/loader.js";
			window.document.body.appendChild(scriptElement);
		} else {
			this.createEditor();
		}
	}
	,createEditor: function() {
		var _gthis = this;
		require(["vs/editor/editor.main"], function() {
			monaco.languages.register({ id : "haxe"});
			monaco.languages.setMonarchTokensProvider("haxe",custom_Syntax.haxe());
			monaco.languages.register({ id : "glsl"});
			monaco.languages.setMonarchTokensProvider("glsl",custom_Syntax.glsl());
			_gthis._editor = monaco.editor.create(_gthis.element,{ language : "haxe", theme : "vs-dark"});
			_gthis._editor.getModel().updateOptions({ insertSpaces : false, tabSize : 4});
			_gthis._editor.setValue(_gthis._text);
			_gthis._editor.getModel().onDidChangeContent(function(e) {
				_gthis.dispatch(new haxe_ui_core_UIEvent("change"));
				_gthis._dirty = true;
			});
		});
	}
	,get_dirty: function() {
		return this._dirty;
	}
	,set_dirty: function(value) {
		this._dirty = value;
		return value;
	}
	,get_text: function() {
		if(this._editor != null) {
			return this._editor.getValue();
		}
		return this._text;
	}
	,set_text: function(value) {
		this._text = value;
		if(this._editor != null) {
			this._editor.setValue(value);
		}
		return value;
	}
	,get_language: function() {
		return this._language;
	}
	,set_language: function(value) {
		return value;
	}
	,validateLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateLayout.call(this);
		if(this.get_width() > 0 && this.get_height() > 0 && this._editor != null) {
			this._editor.layout({ width : this.get_width(), height : this.get_height()});
		}
		return b;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new custom_MonacoEditor();
	}
	,__class__: custom_MonacoEditor
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_language:"set_language",get_language:"get_language",set_dirty:"set_dirty",get_dirty:"get_dirty"})
});
var custom_Syntax = function() { };
$hxClasses["custom.Syntax"] = custom_Syntax;
custom_Syntax.__name__ = ["custom","Syntax"];
custom_Syntax.haxe = function() {
	var tmp = new RegExp("[=><!~?:&|+\\-*\\/\\^%]+");
	var tmp1 = new RegExp("\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})");
	var tmp2 = [new RegExp("[a-z_$][\\w$]*"),{ cases : { "@typeKeywords" : "keyword", "@keywords" : "keyword", "@default" : "identifier"}}];
	var tmp3 = [new RegExp("[A-Z][\\w\\$]*"),"type.identifier"];
	var tmp4 = [new RegExp("[{}()\\[\\]]"),"@brackets"];
	var tmp5 = [new RegExp("[<>](?!@symbols)"),"@brackets"];
	var tmp6 = [new RegExp("@symbols"),{ cases : { "@operators" : "operator", "@default" : ""}}];
	var tmp7 = [new RegExp("@\\s*[a-zA-Z_\\$][\\w\\$]*"),{ token : "annotation", log : "annotation token: $0"}];
	var tmp8 = [new RegExp("\\d*\\.\\d+([eE][\\-+]?\\d+)?"),"number.float"];
	var tmp9 = [new RegExp("0[xX][0-9a-fA-F]+"),"number.hex"];
	var tmp10 = [new RegExp("\\d+"),"number"];
	var tmp11 = [new RegExp("[;,.]"),"delimiter"];
	var tmp12 = [new RegExp("\"([^\"\\\\]|\\\\.)*$"),"string.invalid"];
	var tmp13 = [new RegExp("'([^'\\\\]|\\\\.)*$"),"string.invalid"];
	var tmp14 = [new RegExp("\""),"string","@string.\""];
	var tmp15 = [new RegExp("'"),"string","@string.'"];
	var tmp16 = [new RegExp("[^\\\\']'"),"string"];
	var tmp17 = [new RegExp("(')(@escapes)(')"),["string","string.escape","string"]];
	return { keywords : ["try","catch","throw","if","return","while","for","return","break","case","default","continue","do","while","for","switch","if","else","...","cast","untyped","trace","this","super","new","var","function","abstract","class","enum","interface","typedef","from","to","default","get","set","dynamic","never","null","public","private","static","dynamic","inline","macro","extern","override","import","package"], typeKeywords : ["Bool","Float","Int"], operators : ["=",">","<","!","~","?",":","==","<=",">=","!=","&&","||","++","--","+","-","*","/","&","|","^","%","<<",">>",">>>","+=","-=","*=","/=","&=","|=","^=","%=","<<=",">>=",">>>="], symbols : tmp, escapes : tmp1, tokenizer : { root : [tmp2,tmp3,{ include : "@whitespace"},tmp4,tmp5,tmp6,tmp7,tmp8,tmp9,tmp10,tmp11,tmp12,tmp13,tmp14,tmp15,tmp16,tmp17,[new RegExp("'"),"string.invalid"]], comment : [[new RegExp("[^\\/*]+"),"comment"],[new RegExp("\\/\\*"),"comment.invalid"],["\\*/","comment","@pop"],[new RegExp("[\\/*]"),"comment"]], string : [[new RegExp("[^\\\\\"']+"),"string"],[new RegExp("@escapes"),"string.escape"],[new RegExp("\\\\."),"string.escape.invalid"],[new RegExp("[\"']"),{ cases : { "$#==$S2" : { token : "string", next : "@pop"}, "@default" : "string"}}]], whitespace : [[new RegExp("[ \\t\\r\\n]+"),"white"],[new RegExp("\\/\\*"),"comment","@comment"],[new RegExp("\\/\\/.*$"),"comment"]]}};
};
custom_Syntax.glsl = function() {
	var tmp = new RegExp("[=><!~?:&|+\\-*\\/\\^%]+");
	var tmp1 = new RegExp("\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})");
	var tmp2 = [new RegExp("[a-z_$][\\w$]*"),{ cases : { "@typeKeywords" : "keyword", "@keywords" : "keyword", "@default" : "identifier"}}];
	var tmp3 = [new RegExp("[A-Z][\\w\\$]*"),"type.identifier"];
	var tmp4 = [new RegExp("[{}()\\[\\]]"),"@brackets"];
	var tmp5 = [new RegExp("[<>](?!@symbols)"),"@brackets"];
	var tmp6 = [new RegExp("@symbols"),{ cases : { "@operators" : "operator", "@default" : ""}}];
	var tmp7 = [new RegExp("@\\s*[a-zA-Z_\\$][\\w\\$]*"),{ token : "annotation", log : "annotation token: $0"}];
	var tmp8 = [new RegExp("\\d*\\.\\d+([eE][\\-+]?\\d+)?"),"number.float"];
	var tmp9 = [new RegExp("0[xX][0-9a-fA-F]+"),"number.hex"];
	var tmp10 = [new RegExp("\\d+"),"number"];
	var tmp11 = [new RegExp("[;,.]"),"delimiter"];
	var tmp12 = [new RegExp("\"([^\"\\\\]|\\\\.)*$"),"string.invalid"];
	var tmp13 = [new RegExp("'([^'\\\\]|\\\\.)*$"),"string.invalid"];
	var tmp14 = [new RegExp("\""),"string","@string.\""];
	var tmp15 = [new RegExp("'"),"string","@string.'"];
	var tmp16 = [new RegExp("[^\\\\']'"),"string"];
	var tmp17 = [new RegExp("(')(@escapes)(')"),["string","string.escape","string"]];
	return { keywords : ["try","catch","throw","if","return","while","for","return","break","case","default","continue","do","while","for","switch","if","else","...","cast","untyped","trace","this","super","new","var","function","abstract","class","enum","interface","typedef","from","to","default","get","set","dynamic","never","null","public","private","static","dynamic","inline","macro","extern","override","import","package"], typeKeywords : ["Bool","Float","Int"], operators : ["=",">","<","!","~","?",":","==","<=",">=","!=","&&","||","++","--","+","-","*","/","&","|","^","%","<<",">>",">>>","+=","-=","*=","/=","&=","|=","^=","%=","<<=",">>=",">>>="], symbols : tmp, escapes : tmp1, tokenizer : { root : [tmp2,tmp3,{ include : "@whitespace"},tmp4,tmp5,tmp6,tmp7,tmp8,tmp9,tmp10,tmp11,tmp12,tmp13,tmp14,tmp15,tmp16,tmp17,[new RegExp("'"),"string.invalid"]], comment : [[new RegExp("[^\\/*]+"),"comment"],[new RegExp("\\/\\*"),"comment","@push"],[new RegExp("\"\\\\*/\""),"comment","@pop"],[new RegExp("[\\/*]"),"comment"]], string : [[new RegExp("[^\\\\\"']+"),"string"],[new RegExp("@escapes"),"string.escape"],[new RegExp("\\\\."),"string.escape.invalid"],[new RegExp("[\"']"),{ cases : { "$#==$S2" : { token : "string", next : "@pop"}, "@default" : "string"}}]], whitespace : [[new RegExp("[ \\t\\r\\n]+"),"white"],[new RegExp("\\/\\*"),"comment","@comment"],[new RegExp("\\/\\/.*$"),"comment"]]}};
};
var haxe_ui_containers_ScrollView = function() {
	this._inertialTargetY = 0;
	this._inertialAmplitudeY = 0;
	this._offsetY = 0;
	this._inertialTargetX = 0;
	this._inertialAmplitudeX = 0;
	this._offsetX = 0;
	this._scrollMode = "drag";
	this._hscrollPos = 0;
	this._vscrollPos = 0;
	this._layoutName = "vertical";
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.ScrollView"] = haxe_ui_containers_ScrollView;
haxe_ui_containers_ScrollView.__name__ = ["haxe","ui","containers","ScrollView"];
haxe_ui_containers_ScrollView.__super__ = haxe_ui_core_Component;
haxe_ui_containers_ScrollView.prototype = $extend(haxe_ui_core_Component.prototype,{
	createLayout: function() {
		return new haxe_ui_containers_ScrollViewLayout();
	}
	,createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_containers_DefaultVScrollPosBehaviour(this);
		if(__map_reserved["vscrollPos"] != null) {
			_g.setReserved("vscrollPos",value);
		} else {
			_g.h["vscrollPos"] = value;
		}
		var value1 = new haxe_ui_containers_DefaultHScrollPosBehaviour(this);
		if(__map_reserved["hscrollPos"] != null) {
			_g.setReserved("hscrollPos",value1);
		} else {
			_g.h["hscrollPos"] = value1;
		}
		this.defaultBehaviours(_g);
		this._defaultLayout = new haxe_ui_containers_ScrollViewLayout();
	}
	,get_layoutName: function() {
		return this._layoutName;
	}
	,set_layoutName: function(value) {
		if(this._layoutName == value) {
			return value;
		}
		this._layoutName = value;
		if(this._contents != null) {
			this._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this.get_layoutName()));
		}
		return value;
	}
	,createChildren: function() {
		haxe_ui_core_Component.prototype.createChildren.call(this);
		this.registerEvent("mousewheel",$bind(this,this._onMouseWheel));
		if(this._scrollMode == "drag" || this._scrollMode == "inertial") {
			this.registerEvent("mousedown",$bind(this,this._onMouseDown));
		}
		this.createContentContainer();
	}
	,createContentContainer: function() {
		if(this._contents == null) {
			this._contents = new haxe_ui_containers_Box();
			this._contents.addClass("scrollview-contents");
			this._contents.registerEvent("resize",$bind(this,this._onContentsResized));
			this._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this.get_layoutName()));
			this.addComponent(this._contents);
		}
	}
	,destroyChildren: function() {
		if(this._hscroll != null) {
			this.removeComponent(this._hscroll);
			this._hscroll = null;
		}
		if(this._vscroll != null) {
			this.removeComponent(this._vscroll);
			this._vscroll = null;
		}
	}
	,get_vscrollPos: function() {
		return this._vscrollPos;
	}
	,set_vscrollPos: function(value) {
		if(this._vscrollPos == value) {
			return value;
		}
		this.invalidateComponent("scroll");
		this._vscrollPos = value;
		return value;
	}
	,get_vscrollMax: function() {
		if(this._vscroll == null) {
			return 0;
		}
		return this._vscroll.get_max();
	}
	,get_hscrollPos: function() {
		return this._hscrollPos;
	}
	,set_hscrollPos: function(value) {
		if(this._hscrollPos == value) {
			return value;
		}
		this.invalidateComponent("scroll");
		this._hscrollPos = value;
		return value;
	}
	,get_hscrollMax: function() {
		if(this._hscroll == null) {
			return 0;
		}
		return this._hscroll.get_max();
	}
	,get_contentWidth: function() {
		if(this._contents == null) {
			return 0;
		}
		return this._contents.get_width();
	}
	,set_contentWidth: function(value) {
		if(this._contents == null) {
			return value;
		}
		return this._contents.set_width(value);
	}
	,get_contentHeight: function() {
		if(this._contents == null) {
			return 0;
		}
		return this._contents.get_height();
	}
	,set_contentHeight: function(value) {
		if(this._contents == null) {
			return value;
		}
		return this._contents.set_height(value);
	}
	,get_percentContentWidth: function() {
		if(this._contents == null) {
			return 0;
		}
		return this._contents.get_percentWidth();
	}
	,set_percentContentWidth: function(value) {
		if(this._contents == null) {
			return value;
		}
		return this._contents.set_percentWidth(value);
	}
	,get_percentContentHeight: function() {
		if(this._contents == null) {
			return 0;
		}
		return this._contents.get_percentHeight();
	}
	,set_percentContentHeight: function(value) {
		if(this._contents == null) {
			return value;
		}
		return this._contents.set_percentHeight(value);
	}
	,addComponent: function(child) {
		var v = null;
		if((child instanceof haxe_ui_components_HScroll) || (child instanceof haxe_ui_components_VScroll) || child == this._contents) {
			v = haxe_ui_core_Component.prototype.addComponent.call(this,child);
		} else {
			this.createContentContainer();
			v = this._contents.addComponent(child);
		}
		return v;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		var v = null;
		if((child instanceof haxe_ui_components_HScroll) || (child instanceof haxe_ui_components_VScroll) || child == this._contents) {
			v = haxe_ui_core_Component.prototype.removeComponent.call(this,child,dispose,invalidate);
		} else if(this._contents != null) {
			v = this._contents.removeComponent(child,dispose,invalidate);
		}
		return v;
	}
	,clearContents: function() {
		this._contents.removeAllComponents();
	}
	,addComponentToSuper: function(child) {
		return haxe_ui_core_Component.prototype.addComponent.call(this,child);
	}
	,get_contents: function() {
		return this._contents;
	}
	,get_horizontalConstraint: function() {
		return this._contents;
	}
	,get_verticalConstraint: function() {
		return this._contents;
	}
	,get_scrollMode: function() {
		return this._scrollMode;
	}
	,set_scrollMode: function(value) {
		if(value == this._scrollMode) {
			return value;
		}
		this._scrollMode = value;
		if(this._scrollMode == "drag" || this._scrollMode == "inertial") {
			this.registerEvent("mousedown",$bind(this,this._onMouseDown));
		} else {
			this.unregisterEvent("mousedown",$bind(this,this._onMouseDown));
		}
		return value;
	}
	,set_onScrollChange: function(value) {
		if(this.__onScrollChange != null) {
			this.unregisterEvent("scrollchange",this.__onScrollChange);
			this.__onScrollChange = null;
		}
		this.registerEvent("scrollchange",value);
		this.__onScrollChange = value;
		return value;
	}
	,invalidateComponentScroll: function() {
		this.invalidateComponent("scroll");
	}
	,validateInternal: function() {
		var scrollInvalid = this.isInvalid("scroll");
		var layoutInvalid = this.isInvalid("layout");
		haxe_ui_core_Component.prototype.validateInternal.call(this);
		if(scrollInvalid || layoutInvalid) {
			this.validateScroll();
		}
	}
	,validateScroll: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("hscrollPos")) != this._hscrollPos) {
			this.behaviourSet("hscrollPos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._hscrollPos));
			this.handleBindings(["hscrollPos"]);
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("vscrollPos")) != this._vscrollPos) {
			this.behaviourSet("vscrollPos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._vscrollPos));
			this.handleBindings(["vscrollPos"]);
		}
		this.checkScrolls();
		this.updateScrollRect();
	}
	,_onMouseWheel: function(event) {
		if(this._vscroll != null) {
			event.cancel();
			if(event.delta > 0) {
				var _g = this._vscroll;
				_g.set_pos(_g.get_pos() - 50);
			} else if(event.delta < 0) {
				var _g1 = this._vscroll;
				_g1.set_pos(_g1.get_pos() + 50);
			}
			this.dispatch(new haxe_ui_core_ScrollEvent("scrollchange"));
		}
	}
	,_onMouseDown: function(event) {
		if(this._hscroll == null && this._vscroll == null) {
			return;
		}
		event.cancel();
		if(this._hscroll != null && this._hscroll.hitTest(event.screenX,event.screenY) == true) {
			return;
		}
		if(this._vscroll != null && this._vscroll.hitTest(event.screenX,event.screenY) == true) {
			return;
		}
		this._offsetX = this.get_hscrollPos() + event.screenX;
		this._offsetY = this.get_vscrollPos() + event.screenY;
		if(this._scrollMode == "inertial") {
			this._inertialTargetX = this.get_hscrollPos();
			this._inertialTargetY = this.get_vscrollPos();
			this._inertialAmplitudeX = 0;
			this._inertialAmplitudeY = 0;
			this._screenOffsetX = event.screenX;
			this._screenOffsetY = event.screenY;
			this._inertialTimestamp = new Date().getTime() / 1000;
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this._onMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this._onMouseUp));
		this.dispatch(new haxe_ui_core_ScrollEvent("scrollstart"));
	}
	,_onMouseMove: function(event) {
		this.set_hscrollPos(this._offsetX - event.screenX);
		this.set_vscrollPos(this._offsetY - event.screenY);
		this.dispatch(new haxe_ui_core_ScrollEvent("scrollchange"));
	}
	,_onMouseUp: function(event) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this._onMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this._onMouseUp));
		if(this._scrollMode == "inertial") {
			var now = new Date().getTime() / 1000;
			var elapsed = (now - this._inertialTimestamp) * 1000;
			var deltaX = Math.abs(this._screenOffsetX - event.screenX);
			var deltaY = Math.abs(this._screenOffsetY - event.screenY);
			this._inertiaDirectionX = this._screenOffsetX - event.screenX < 0 ? 0 : 1;
			var velocityX = deltaX / elapsed;
			var v = 1000 * deltaX / (1 + elapsed);
			velocityX = 0.8 * v + 0.2 * velocityX;
			this._inertiaDirectionY = this._screenOffsetY - event.screenY < 0 ? 0 : 1;
			var velocityY = deltaY / elapsed;
			var v1 = 1000 * deltaY / (1 + elapsed);
			velocityY = 0.8 * v1 + 0.2 * velocityY;
			if(velocityX <= 75 && velocityY <= 75) {
				return;
			}
			this._inertialTimestamp = new Date().getTime() / 1000;
			if(this._hscroll != null) {
				this._inertialAmplitudeX = 0.8 * velocityX;
			}
			if(this._inertiaDirectionX == 0) {
				this._inertialTargetX = Math.round(this.get_hscrollPos() - this._inertialAmplitudeX);
			} else {
				this._inertialTargetX = Math.round(this.get_hscrollPos() + this._inertialAmplitudeX);
			}
			if(this._vscroll != null) {
				this._inertialAmplitudeY = 0.8 * velocityY;
			}
			if(this._inertiaDirectionY == 0) {
				this._inertialTargetY = Math.round(this.get_vscrollPos() - this._inertialAmplitudeY);
			} else {
				this._inertialTargetY = Math.round(this.get_vscrollPos() + this._inertialAmplitudeY);
			}
			if(this.get_hscrollPos() == this._inertialTargetX && this.get_vscrollPos() == this._inertialTargetY) {
				return;
			}
			if(this.get_hscrollPos() == this._inertialTargetX) {
				this._inertialAmplitudeX = 0;
			}
			if(this.get_vscrollPos() == this._inertialTargetY) {
				this._inertialAmplitudeY = 0;
			}
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		} else {
			this.dispatch(new haxe_ui_core_ScrollEvent("scrollstop"));
		}
	}
	,inertialScroll: function() {
		var elapsed = (new Date().getTime() / 1000 - this._inertialTimestamp) * 1000;
		var finishedX = false;
		if(this._inertialAmplitudeX != 0) {
			var deltaX = -this._inertialAmplitudeX * Math.exp(-elapsed / 325);
			if(deltaX > 0.5 || deltaX < -0.5) {
				var oldPos = this.get_hscrollPos();
				var newPos = 0;
				if(this._inertiaDirectionX == 0) {
					newPos = this._inertialTargetX - deltaX;
				} else {
					newPos = this._inertialTargetX + deltaX;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this.get_hscrollMax()) {
					newPos = this.get_hscrollMax();
				}
				this.set_hscrollPos(newPos);
				finishedX = this.get_hscrollPos() == oldPos || newPos == 0 || newPos == this.get_hscrollMax();
			} else {
				finishedX = true;
			}
		} else {
			finishedX = true;
		}
		var finishedY = false;
		if(this._inertialAmplitudeY != 0) {
			var deltaY = -this._inertialAmplitudeY * Math.exp(-elapsed / 325);
			if(deltaY > 0.5 || deltaY < -0.5) {
				var oldPos1 = this.get_vscrollPos();
				var newPos1 = 0;
				if(this._inertiaDirectionY == 0) {
					newPos1 = this._inertialTargetY - deltaY;
				} else {
					newPos1 = this._inertialTargetY + deltaY;
				}
				if(newPos1 < 0) {
					newPos1 = 0;
				} else if(newPos1 > this.get_vscrollMax()) {
					newPos1 = this.get_vscrollMax();
				}
				this.set_vscrollPos(newPos1);
				finishedY = this.get_vscrollPos() == oldPos1 || newPos1 == 0 || newPos1 == this.get_vscrollMax();
			} else {
				finishedY = true;
			}
		} else {
			finishedY = true;
		}
		if(finishedX == true && finishedY == true) {
			this.dispatch(new haxe_ui_core_ScrollEvent("scrollstop"));
		} else {
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		}
	}
	,_onContentsResized: function(event) {
		this.invalidateComponent("scroll");
	}
	,get_hscrollOffset: function() {
		return 0;
	}
	,checkScrolls: function() {
		if(this.get_isReady() == false || this.get_horizontalConstraint() == null || this.get_horizontalConstraint().get_childComponents().length == 0 || this.get_verticalConstraint() == null || this.get_verticalConstraint().get_childComponents().length == 0 || this.get_native() == true) {
			return;
		}
		var usableSize = this.get_layout().get_usableSize();
		if(this.get_horizontalConstraint().get_componentWidth() > usableSize.width) {
			if(this._hscroll == null) {
				this._hscroll = new haxe_ui_components_HScroll();
				this._hscroll.set_percentWidth(100);
				this._hscroll.set_id("scrollview-hscroll");
				this._hscroll.registerEvent("change",$bind(this,this._onHScroll));
				this.addComponent(this._hscroll);
			}
			this._hscroll.set_max(this.get_horizontalConstraint().get_componentWidth() - usableSize.width - this.get_hscrollOffset());
			this._hscroll.set_pageSize(usableSize.width / this.get_horizontalConstraint().get_componentWidth() * this._hscroll.get_max());
			this._hscroll.syncValidation();
		} else if(this._hscroll != null) {
			this._hscroll.unregisterEvent("change",$bind(this,this._onHScroll));
			this.removeComponent(this._hscroll);
			this._hscroll = null;
		}
		if(this.get_verticalConstraint().get_componentHeight() > usableSize.height) {
			if(this._vscroll == null) {
				this._vscroll = new haxe_ui_components_VScroll();
				this._vscroll.set_percentHeight(100);
				this._vscroll.set_id("scrollview-vscroll");
				this._vscroll.registerEvent("change",$bind(this,this._onVScroll));
				this.addComponent(this._vscroll);
			}
			this._vscroll.set_max(this.get_verticalConstraint().get_componentHeight() - usableSize.height);
			this._vscroll.set_pageSize(usableSize.height / this.get_verticalConstraint().get_componentHeight() * this._vscroll.get_max());
			this._vscroll.syncValidation();
		} else if(this._vscroll != null) {
			this._vscroll.unregisterEvent("change",$bind(this,this._onVScroll));
			this.removeComponent(this._vscroll);
			this._vscroll = null;
		}
	}
	,_onHScroll: function(event) {
		this.set_hscrollPos(this._hscroll.get_pos());
	}
	,_onVScroll: function(event) {
		this.set_vscrollPos(this._vscroll.get_pos());
	}
	,updateScrollRect: function() {
		if(this._contents == null) {
			return;
		}
		var usableSize = this.get_layout().get_usableSize();
		var clipCX = usableSize.width;
		if(clipCX > this._contents.get_componentWidth()) {
			clipCX = this._contents.get_componentWidth();
		}
		var clipCY = usableSize.height;
		if(clipCY > this._contents.get_componentHeight()) {
			clipCY = this._contents.get_componentHeight();
		}
		var xpos = 0;
		if(this._hscroll != null) {
			xpos = this._hscroll.get_pos();
		}
		var ypos = 0;
		if(this._vscroll != null) {
			ypos = this._vscroll.get_pos();
		}
		var rc = new haxe_ui_util_Rectangle(xpos | 0,ypos | 0,clipCX,clipCY);
		this._contents.set_componentClipRect(rc);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ScrollView();
	}
	,getProperty: function(name) {
		switch(name) {
		case "hscrollPos":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_hscrollPos());
		case "vscrollPos":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_vscrollPos());
		}
		return haxe_ui_core_Component.prototype.getProperty.call(this,name);
	}
	,setProperty: function(name,v) {
		switch(name) {
		case "hscrollPos":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_hscrollPos(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "vscrollPos":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_vscrollPos(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		}
		return haxe_ui_core_Component.prototype.setProperty.call(this,name,v);
	}
	,__class__: haxe_ui_containers_ScrollView
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{get_hscrollOffset:"get_hscrollOffset",set_onScrollChange:"set_onScrollChange",set_scrollMode:"set_scrollMode",get_scrollMode:"get_scrollMode",get_verticalConstraint:"get_verticalConstraint",get_horizontalConstraint:"get_horizontalConstraint",get_contents:"get_contents",set_percentContentHeight:"set_percentContentHeight",get_percentContentHeight:"get_percentContentHeight",set_percentContentWidth:"set_percentContentWidth",get_percentContentWidth:"get_percentContentWidth",set_contentHeight:"set_contentHeight",get_contentHeight:"get_contentHeight",set_contentWidth:"set_contentWidth",get_contentWidth:"get_contentWidth",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_layoutName:"set_layoutName",get_layoutName:"get_layoutName"})
});
var custom_TreeView = function() {
	this.selectedNode = null;
	haxe_ui_containers_ScrollView.call(this);
	this.set_styleString("padding: 1px;border: 0px solid #ABABAB;border-radius: 1px;");
};
$hxClasses["custom.TreeView"] = custom_TreeView;
custom_TreeView.__name__ = ["custom","TreeView"];
custom_TreeView.__super__ = haxe_ui_containers_ScrollView;
custom_TreeView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	addNode: function(text,icon) {
		var node = null;
		if(text.indexOf("/") == -1) {
			node = new custom_TreeViewNode(this);
			node.set_text(text);
			node.set_icon(icon);
			this.addComponent(node);
		} else {
			var parts = text.split("/");
			text = parts.pop();
			var first = parts.shift();
			var ref = this.findNode(first);
			if(ref == null) {
				ref = new custom_TreeViewNode(this);
				ref.set_text(first);
				this.addComponent(ref);
			}
			ref.set_icon("img/folder.png");
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				var temp = ref.findNode(p);
				if(temp == null) {
					ref = ref.addNode(p,"img/folder.png");
				} else {
					ref = temp;
					ref.set_icon("img/folder.png");
				}
			}
			node = ref.addNode(text,icon);
		}
		return node;
	}
	,clear: function() {
		this.selectedNode = null;
		this.clearContents();
	}
	,findNode: function(path) {
		var parts = path.split("/");
		var first = parts.shift();
		var node = null;
		var _g = 0;
		var _g1 = this._contents.get_childComponents();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var label = c.findComponent(null,haxe_ui_components_Label,true);
			if(label != null && label.get_text() == first) {
				node = js_Boot.__cast(c , custom_TreeViewNode);
				break;
			}
		}
		if(parts.length > 0 && node != null) {
			node = node.findNode(parts.join("/"));
		}
		return node;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new custom_TreeView();
	}
	,__class__: custom_TreeView
});
var haxe_ui_containers_VBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_VerticalLayout());
};
$hxClasses["haxe.ui.containers.VBox"] = haxe_ui_containers_VBox;
haxe_ui_containers_VBox.__name__ = ["haxe","ui","containers","VBox"];
haxe_ui_containers_VBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_VBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_VBox();
	}
	,__class__: haxe_ui_containers_VBox
});
var custom_TreeViewNode = function(tv) {
	this._tv = null;
	this.parentNode = null;
	this._expanded = false;
	var _gthis = this;
	haxe_ui_containers_VBox.call(this);
	this._tv = tv;
	this.set_styleString("spacing: 2;background-color:#1e1e1e");
	this._hbox = new haxe_ui_containers_HBox();
	this._hbox.set_styleString("spacing: 0;background-color:#1e1e1e");
	this._nodeExpander = new haxe_ui_components_Image();
	this._nodeExpander.set_resource("img/blank.png");
	this._nodeExpander.set_styleString("vertical-align: center;cursor:pointer;");
	this._nodeExpander.set_onClick(function(e) {
		if(_gthis._expanded == false) {
			_gthis._nodeExpander.set_resource("img/control-270-small.png");
			_gthis._expanded = true;
		} else {
			_gthis._nodeExpander.set_resource("img/control-000-small.png");
			_gthis._expanded = false;
		}
		var _g = 0;
		var _g1 = _gthis.get_childComponents();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c == _gthis._hbox) {
				continue;
			}
			if(_gthis._expanded == false) {
				c.hide();
			} else {
				c.show();
			}
		}
	});
	this._hbox.addComponent(this._nodeExpander);
	var hbox = new haxe_ui_containers_HBox();
	hbox.set_id("node");
	hbox.set_styleString("spacing: 4;cursor:pointer;");
	this._nodeIcon = new haxe_ui_components_Image();
	hbox.addComponent(this._nodeIcon);
	var spacer = new haxe_ui_components_Spacer();
	spacer.set_width(5);
	this._label = new haxe_ui_components_Label();
	this._label.set_verticalAlign("center");
	hbox.addComponent(this._label);
	hbox.registerEvent("mouseover",function(e1) {
		_gthis._hbox.findComponent("node").addClass(":hover");
	});
	hbox.registerEvent("mouseout",function(e2) {
		_gthis._hbox.findComponent("node").removeClass(":hover");
	});
	hbox.registerEvent("click",function(e3) {
		_gthis.select();
	});
	this._hbox.addComponent(hbox);
	this.addComponent(this._hbox);
};
$hxClasses["custom.TreeViewNode"] = custom_TreeViewNode;
custom_TreeViewNode.__name__ = ["custom","TreeViewNode"];
custom_TreeViewNode.__super__ = haxe_ui_containers_VBox;
custom_TreeViewNode.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	select: function() {
		if(this._tv.selectedNode == this) {
			return;
		}
		if(this._tv.selectedNode != null && this._tv.selectedNode.findComponent("node") != null) {
			this._tv.selectedNode.findComponent("node").removeClass(":selected");
			this._tv.selectedNode = null;
		}
		this._hbox.findComponent("node").addClass(":selected");
		this._tv.selectedNode = this;
		var delta = this._tv.selectedNode.get_screenTop() - this._tv.get_screenTop() + this._tv.get_vscrollPos();
		if(delta < this._tv.get_vscrollPos() || delta > this._tv.get_height() - 10) {
			delta -= this._tv.selectedNode.get_height() + 10;
			if(delta > this._tv.get_vscrollMax()) {
				delta = this._tv.get_vscrollMax();
			}
			this._tv.set_vscrollPos(delta);
		}
		this._tv.dispatch(new haxe_ui_core_UIEvent("change"));
	}
	,get_path: function() {
		var ref = this;
		var parts = [];
		while(ref != null) {
			parts.push(ref._label.get_text());
			ref = ref.parentNode;
		}
		parts.reverse();
		return parts.join("/");
	}
	,get_text: function() {
		return this._label.get_text();
	}
	,set_text: function(value) {
		haxe_ui_containers_VBox.prototype.set_text.call(this,value);
		this._label.set_text(value);
		return value;
	}
	,get_icon: function() {
		return this._nodeIcon.get_resource();
	}
	,set_icon: function(value) {
		haxe_ui_containers_VBox.prototype.set_icon.call(this,value);
		this._nodeIcon.set_resource(value);
		return value;
	}
	,get_isFolder: function() {
		return this.get_icon() == "img/folder.png";
	}
	,addNode: function(text,icon) {
		this._nodeExpander.set_resource("img/control-000-small.png");
		this._nodeExpander.set_resource("img/control-270-small.png");
		this._hbox.set_styleString("spacing: 0");
		this._expanded = true;
		var node = new custom_TreeViewNode(this._tv);
		node.set_marginLeft(16);
		node.set_text(text);
		node.set_icon(icon);
		node.parentNode = this;
		this.addComponent(node);
		return node;
	}
	,findNode: function(path) {
		var parts = path.split("/");
		var first = parts.shift();
		var node = null;
		var _g = 0;
		var _g1 = this.get_childComponents();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var label = c.findComponent(null,haxe_ui_components_Label,true);
			if(label != null && label.get_text() == first) {
				node = js_Boot.__cast(c , custom_TreeViewNode);
				break;
			}
		}
		if(parts.length > 0) {
			node = node.findNode(parts.join("/"));
		}
		return node;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new custom_TreeViewNode();
	}
	,__class__: custom_TreeViewNode
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{get_isFolder:"get_isFolder",get_path:"get_path"})
});
var dialogs_AddResourceDialog = function() {
	var _gthis = this;
	haxe_ui_core_Component.call(this);
	var c0 = new haxe_ui_containers_VBox();
	var c1 = new haxe_ui_containers_VBox();
	var c2 = new haxe_ui_containers_HBox();
	var c3 = new haxe_ui_components_Image();
	c3.set_resource("img/warning.png");
	c3.set_verticalAlign("center");
	c2.addComponent(c3);
	var c31 = new haxe_ui_components_Label();
	c31.set_id("error");
	c31.set_styleString("color: #c8c8c8;");
	c31.set_verticalAlign("center");
	c2.addComponent(c31);
	c2.set_percentWidth(100.);
	c2.set_styleNames("container");
	c2.set_styleString("background-color: #404040;");
	c1.addComponent(c2);
	var c21 = new haxe_ui_components_Spacer();
	c21.set_height(5.);
	c1.addComponent(c21);
	c1.set_id("errorContainer");
	c1.set_percentWidth(100.);
	c1.set_hidden(true);
	c0.addComponent(c1);
	var c11 = new haxe_ui_containers_HBox();
	var c22 = new haxe_ui_components_Label();
	c22.set_width(50.);
	c22.set_text("Type");
	c22.set_verticalAlign("center");
	c11.addComponent(c22);
	var c23 = new haxe_ui_components_DropDown();
	c23.set_id("resourceTypeSelector");
	c23.set_percentWidth(100.);
	c23.set_text("Source");
	c23.set_requireSelection(true);
	c23.set_dataSource(new haxe_ui_data_DataSourceFactory().fromString("<data>\n                <item value='Source' icon='img/file_grey.png'/>\n                <item value='Shader' icon='img/layers_grey.png'/>\n                <item value='Asset' icon='img/picture_grey.png'/>\n            </data>",haxe_ui_data_ArrayDataSource));
	c11.addComponent(c23);
	c11.set_percentWidth(100.);
	c0.addComponent(c11);
	var c12 = new haxe_ui_containers_VBox();
	var c24 = new haxe_ui_containers_HBox();
	var c32 = new haxe_ui_components_Label();
	c32.set_width(50.);
	c32.set_text("Item");
	c32.set_verticalAlign("center");
	c24.addComponent(c32);
	var c33 = new haxe_ui_components_DropDown();
	c33.set_id("sourceTypeSelector");
	c33.set_percentWidth(100.);
	c33.set_text("Class");
	c33.set_requireSelection(true);
	c33.set_dataSource(new haxe_ui_data_DataSourceFactory().fromString("<data>\n                    <item value='Class'/>\n                    <item value='Interface'/>\n                    <item value='TypeDef'/>\n                </data>",haxe_ui_data_ArrayDataSource));
	c24.addComponent(c33);
	c24.set_percentWidth(100.);
	c12.addComponent(c24);
	var c25 = new haxe_ui_containers_HBox();
	var c34 = new haxe_ui_components_Label();
	c34.set_width(50.);
	c34.set_text("Name");
	c34.set_verticalAlign("center");
	c25.addComponent(c34);
	var c35 = new haxe_ui_components_TextField();
	c35.set_id("sourceFile");
	c35.set_percentWidth(100.);
	c35.set_placeholder("Enter source filename");
	c25.addComponent(c35);
	c25.set_percentWidth(100.);
	c12.addComponent(c25);
	c12.set_id("sourceGroup");
	c12.set_percentWidth(100.);
	c0.addComponent(c12);
	var c13 = new haxe_ui_containers_VBox();
	var c26 = new haxe_ui_containers_HBox();
	var c36 = new haxe_ui_components_Label();
	c36.set_width(50.);
	c36.set_text("Template");
	c36.set_verticalAlign("center");
	c26.addComponent(c36);
	var c37 = new haxe_ui_components_DropDown();
	c37.set_id("shaderTemplate");
	c37.set_percentWidth(100.);
	c37.set_text("Empty");
	c37.set_requireSelection(true);
	c37.set_dataSource(new haxe_ui_data_DataSourceFactory().fromString("<data>\n                    <item value='Empty'/>\n                    <item value='Basic'/>\n                </data>",haxe_ui_data_ArrayDataSource));
	c26.addComponent(c37);
	c26.set_percentWidth(100.);
	c13.addComponent(c26);
	var c27 = new haxe_ui_containers_HBox();
	var c38 = new haxe_ui_components_Label();
	c38.set_width(50.);
	c38.set_text("Name");
	c38.set_verticalAlign("center");
	c27.addComponent(c38);
	var c39 = new haxe_ui_components_TextField();
	c39.set_id("shaderFile");
	c39.set_percentWidth(100.);
	c39.set_placeholder("Enter shader filename");
	c27.addComponent(c39);
	var c310 = new haxe_ui_components_DropDown();
	c310.set_id("shaderType");
	c310.set_text(".frag.glsl");
	c310.set_dataSource(new haxe_ui_data_DataSourceFactory().fromString("<data>\n                    <item value='.frag.glsl'/>\n                    <item value='.vert.glsl'/>\n                </data>",haxe_ui_data_ArrayDataSource));
	c27.addComponent(c310);
	c27.set_percentWidth(100.);
	c13.addComponent(c27);
	c13.set_id("shaderGroup");
	c13.set_percentWidth(100.);
	c13.set_hidden(true);
	c0.addComponent(c13);
	var c14 = new haxe_ui_containers_HBox();
	var c28 = new haxe_ui_components_Label();
	c28.set_width(50.);
	c28.set_text("File");
	c28.set_verticalAlign("center");
	c14.addComponent(c28);
	var c29 = new custom_FileSelector();
	c29.set_id("assetFile");
	c29.set_percentWidth(100.);
	c14.addComponent(c29);
	c14.set_id("assetGroup");
	c14.set_percentWidth(100.);
	c14.set_hidden(true);
	c0.addComponent(c14);
	var c15 = new haxe_ui_containers_HBox();
	var c210 = new haxe_ui_components_Button();
	c210.set_id("cancelButton");
	c210.set_text("Cancel");
	c15.addComponent(c210);
	var c211 = new haxe_ui_components_Button();
	c211.set_id("confirmButton");
	c211.set_text("Confirm");
	c15.addComponent(c211);
	c15.set_horizontalAlign("right");
	c15.set_paddingTop(10);
	c0.addComponent(c15);
	c0.set_percentWidth(100.);
	c0.set_script("");
	this.addComponent(c0);
	this.addClass("addresourcedialog-container");
	this.addClass("custom-component");
	this.errorContainer = this.findComponent("errorContainer",haxe_ui_containers_VBox,true);
	this.cancelButton = this.findComponent("cancelButton",haxe_ui_components_Button,true);
	this.sourceTypeSelector = this.findComponent("sourceTypeSelector",haxe_ui_components_DropDown,true);
	this.shaderGroup = this.findComponent("shaderGroup",haxe_ui_containers_VBox,true);
	this.assetGroup = this.findComponent("assetGroup",haxe_ui_containers_HBox,true);
	this.resourceTypeSelector = this.findComponent("resourceTypeSelector",haxe_ui_components_DropDown,true);
	this.sourceFile = this.findComponent("sourceFile",haxe_ui_components_TextField,true);
	this.assetFile = this.findComponent("assetFile",custom_FileSelector,true);
	this.shaderType = this.findComponent("shaderType",haxe_ui_components_DropDown,true);
	this.shaderTemplate = this.findComponent("shaderTemplate",haxe_ui_components_DropDown,true);
	this.confirmButton = this.findComponent("confirmButton",haxe_ui_components_Button,true);
	this.shaderFile = this.findComponent("shaderFile",haxe_ui_components_TextField,true);
	this.error = this.findComponent("error",haxe_ui_components_Label,true);
	this.sourceGroup = this.findComponent("sourceGroup",haxe_ui_containers_VBox,true);
	this.set_percentWidth(100);
	this.resourceTypeSelector.set_onChange(function(e) {
		_gthis.updateUI();
	});
	this.cancelButton.set_onClick(function(e1) {
		_gthis.findAncestor(null,haxe_ui_containers_dialogs_Dialog).close("cancel");
	});
	this.confirmButton.set_onClick(function(e2) {
		_gthis.errorContainer.hide();
		var _g = _gthis.get_resourceType();
		switch(_g) {
		case "Asset":
			if(_gthis.assetFile.get_file() == null || _gthis.assetFile.get_file().name == null || StringTools.trim(_gthis.assetFile.get_file().name).length == 0) {
				_gthis.error.set_text("Please select an asset.");
				_gthis.errorContainer.show();
			} else if(project_Project.get_instance().hasResource(4,_gthis.assetFile.get_file().name)) {
				_gthis.error.set_text("Asset already exists.");
				_gthis.errorContainer.show();
			}
			break;
		case "Shader":
			var name = _gthis.shaderFile.get_text() + _gthis.shaderType.get_text();
			if(_gthis.shaderFile.get_text() == null || StringTools.trim(_gthis.shaderFile.get_text()).length == 0) {
				_gthis.error.set_text("Please name your shader.");
				_gthis.errorContainer.show();
			} else if(_gthis.shaderFile.get_text().length >= 44) {
				_gthis.error.set_text("Please use a shorter shader name.");
				_gthis.errorContainer.show();
			} else if(project_Project.get_instance().hasResource(3,name)) {
				_gthis.error.set_text("Shader already exists.");
				_gthis.errorContainer.show();
			}
			break;
		case "Source":
			if(_gthis.sourceFile.get_text() == null || StringTools.trim(_gthis.sourceFile.get_text()).length == 0) {
				_gthis.error.set_text("Please name your source.");
				_gthis.errorContainer.show();
			} else if(_gthis.sourceFile.get_text().length >= 44) {
				_gthis.error.set_text("Please use a shorter source name.");
				_gthis.errorContainer.show();
			} else if(project_Project.get_instance().hasResource(2,_gthis.sourceFile.get_text()) || project_Project.get_instance().hasResource(2,_gthis.sourceFile.get_text() + ".hx")) {
				_gthis.error.set_text("Source already exists.");
				_gthis.errorContainer.show();
			}
			break;
		}
		if(_gthis.errorContainer.get_hidden() == true) {
			_gthis.findAncestor(null,haxe_ui_containers_dialogs_Dialog).close("confirm");
		}
	});
};
$hxClasses["dialogs.AddResourceDialog"] = dialogs_AddResourceDialog;
dialogs_AddResourceDialog.__name__ = ["dialogs","AddResourceDialog"];
dialogs_AddResourceDialog.__super__ = haxe_ui_core_Component;
dialogs_AddResourceDialog.prototype = $extend(haxe_ui_core_Component.prototype,{
	updateUI: function() {
		if(this.resourceTypeSelector.get_selectedItem() == null) {
			return;
		}
		this.errorContainer.hide();
		var _g = this.resourceTypeSelector.get_selectedItem().value;
		switch(_g) {
		case "Asset":
			this.sourceGroup.hide();
			this.shaderGroup.hide();
			this.assetGroup.show();
			break;
		case "Shader":
			this.sourceGroup.hide();
			this.shaderGroup.show();
			this.assetGroup.hide();
			break;
		case "Source":
			this.sourceGroup.show();
			this.shaderGroup.hide();
			this.assetGroup.hide();
			break;
		}
	}
	,get_resourceType: function() {
		return this.resourceTypeSelector.get_text();
	}
	,get_sourceType: function() {
		return this.sourceTypeSelector.get_text();
	}
	,set_resourceType: function(value) {
		this.resourceTypeSelector.set_text(value);
		var _g1 = 0;
		var _g = this.resourceTypeSelector.get_dataSource().get_size();
		while(_g1 < _g) {
			var i = _g1++;
			var item = this.resourceTypeSelector.get_dataSource().get(i);
			if(item.value == value) {
				this.resourceTypeSelector.set_selectedIndex(i);
				break;
			}
		}
		this.updateUI();
		return value;
	}
	,set_contextPath: function(value) {
		this.sourceFile.set_text(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new dialogs_AddResourceDialog();
	}
	,__class__: dialogs_AddResourceDialog
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_contextPath:"set_contextPath",get_sourceType:"get_sourceType",set_resourceType:"set_resourceType",get_resourceType:"get_resourceType"})
});
var editors_AssetEditor = function(resource,tabs) {
	haxe_ui_containers_Box.call(this);
	var c0 = new haxe_ui_containers_Box();
	var c1 = new haxe_ui_components_Label();
	c1.set_text("No preview avilable.");
	c0.addComponent(c1);
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleNames("editor");
	c0.set_styleString("padding: 5px;");
	c0.set_script("");
	this.addComponent(c0);
	this.addClass("asseteditor-container");
	this.addClass("custom-component");
	this._resource = resource;
};
$hxClasses["editors.AssetEditor"] = editors_AssetEditor;
editors_AssetEditor.__name__ = ["editors","AssetEditor"];
editors_AssetEditor.__super__ = haxe_ui_containers_Box;
editors_AssetEditor.prototype = $extend(haxe_ui_containers_Box.prototype,{
	cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new editors_AssetEditor();
	}
	,__class__: editors_AssetEditor
});
var project_IResourceListener = function() { };
$hxClasses["project.IResourceListener"] = project_IResourceListener;
project_IResourceListener.__name__ = ["project","IResourceListener"];
project_IResourceListener.prototype = {
	__class__: project_IResourceListener
};
var editors_TextEditor = function(resource,tabs) {
	var _gthis = this;
	haxe_ui_containers_Box.call(this);
	var c0 = new haxe_ui_containers_Box();
	var c1 = new custom_MonacoEditor();
	c1.set_id("editor");
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c0.addComponent(c1);
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleNames("editor");
	c0.set_script("");
	this.addComponent(c0);
	this.addClass("texteditor-container");
	this.addClass("custom-component");
	this.editor = this.findComponent("editor",custom_MonacoEditor,true);
	this._resource = resource;
	this._tabs = tabs;
	this.set_content(resource.content);
	this._resource.addListener(this);
	this.editor.set_onChange(function(e) {
		_gthis._resource.content = _gthis.get_content();
		_gthis._resource.set_dirty(true);
	});
};
$hxClasses["editors.TextEditor"] = editors_TextEditor;
editors_TextEditor.__name__ = ["editors","TextEditor"];
editors_TextEditor.__interfaces__ = [project_IResourceListener];
editors_TextEditor.__super__ = haxe_ui_containers_Box;
editors_TextEditor.prototype = $extend(haxe_ui_containers_Box.prototype,{
	onDirtyChanged: function() {
		var index = this.userData.index;
		if(index >= 0) {
			var tabContainer = this._tabs.findComponent("tabbar-contents");
			var button = tabContainer.getComponentAt(index);
			if(this._resource.get_dirty() == true && StringTools.endsWith(button.get_text(),"*") == false) {
				var _g = button;
				_g.set_text(_g.get_text() + "*");
			} else if(this._resource.get_dirty() == false && StringTools.endsWith(button.get_text(),"*") == true) {
				button.set_text(HxOverrides.substr(button.get_text(),0,button.get_text().length - 1));
			}
		}
	}
	,get_content: function() {
		return this.editor.get_text();
	}
	,set_content: function(value) {
		this.editor.set_text(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new editors_TextEditor();
	}
	,__class__: editors_TextEditor
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_content:"set_content",get_content:"get_content"})
});
var editors_ShaderEditor = function(resource,tabs) {
	editors_TextEditor.call(this,resource,tabs);
	this.editor.set_language("glsl");
};
$hxClasses["editors.ShaderEditor"] = editors_ShaderEditor;
editors_ShaderEditor.__name__ = ["editors","ShaderEditor"];
editors_ShaderEditor.__super__ = editors_TextEditor;
editors_ShaderEditor.prototype = $extend(editors_TextEditor.prototype,{
	cloneComponent: function() {
		var c = editors_TextEditor.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new editors_ShaderEditor();
	}
	,__class__: editors_ShaderEditor
});
var editors_SourceEditor = function(resource,tabs) {
	editors_TextEditor.call(this,resource,tabs);
	this.editor.set_language("haxe");
};
$hxClasses["editors.SourceEditor"] = editors_SourceEditor;
editors_SourceEditor.__name__ = ["editors","SourceEditor"];
editors_SourceEditor.__super__ = editors_TextEditor;
editors_SourceEditor.prototype = $extend(editors_TextEditor.prototype,{
	cloneComponent: function() {
		var c = editors_TextEditor.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new editors_SourceEditor();
	}
	,__class__: editors_SourceEditor
});
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"]
	,CFunction: {_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_CallStack = function() { };
$hxClasses["haxe.CallStack"] = haxe_CallStack;
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			var fileName = site.getFileName();
			var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
			if(haxe_CallStack.wrapCallSite != null && fileAddr > 0) {
				fileName = HxOverrides.substr(fileName,fileAddr + 6,null);
			}
			stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s.m;
		b.b += "module ";
		b.b += m == null ? "null" : "" + m;
		break;
	case 2:
		var col = s.column;
		var line = s.line;
		var file = s.file;
		var s1 = s.s;
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null ? "null" : "" + file;
		b.b += " line ";
		b.b += line == null ? "null" : "" + line;
		if(col != null) {
			b.b += " column ";
			b.b += col == null ? "null" : "" + col;
		}
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s.method;
		var cname = s.classname;
		b.b += cname == null ? "null" : "" + cname;
		b.b += ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s.v;
		b.b += "local function #";
		b.b += n == null ? "null" : "" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				var column = Std.parseInt(rie10.matched(4));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos != null && infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = ["haxe","Resource"];
haxe_Resource.listNames = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = haxe_Resource.content;
	while(_g1 < _g2.length) {
		var x = _g2[_g1];
		++_g1;
		_g.push(x.name);
	}
	return _g;
};
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		var _g = bytes.length % 3;
		switch(_g) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask] & 255;
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask] & 255;
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255 & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			tmp = _this2 == null ? 0 : _this2._height;
		} else {
			var _this3 = this.right;
			tmp = _this3 == null ? 0 : _this3._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_Either = $hxEnums["haxe.ds.Either"] = { __ename__ : true, __constructs__ : ["Left","Right"]
	,Left: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_.__params__ = ["v"],$_)
	,Right: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ds.Either",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
$hxClasses["haxe.ds.GenericCell"] = haxe_ds_GenericCell;
haxe_ds_GenericCell.__name__ = ["haxe","ds","GenericCell"];
haxe_ds_GenericCell.prototype = {
	__class__: haxe_ds_GenericCell
};
var haxe_ds_GenericStack = function() {
};
$hxClasses["haxe.ds.GenericStack"] = haxe_ds_GenericStack;
haxe_ds_GenericStack.__name__ = ["haxe","ds","GenericStack"];
haxe_ds_GenericStack.prototype = {
	__class__: haxe_ds_GenericStack
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__ : true, __constructs__ : ["Some","None"]
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_.__params__ = ["v"],$_)
	,None: {_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe_io_BytesBuffer.prototype = {
	addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = ["haxe","io","Input"];
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			haxe_CallStack.lastException = eof;
			var eof1 = (eof instanceof js__$Boot_HaxeError) ? eof.val : eof;
			if((eof1 instanceof haxe_io_Eof)) {
				var eof2 = eof1;
			} else {
				throw eof;
			}
		}
		return len - k;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,readString: function(len) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = ["haxe","io","Output"];
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = ["haxe","io","BytesOutput"];
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.addByte(c);
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
var haxe_io_Path = function() { };
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = ["haxe","io","Path"];
haxe_io_Path.normalize = function(path) {
	var slash = "/";
	path = path.split("\\").join(slash);
	if(path == slash) {
		return slash;
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split(slash);
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join(slash);
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g11 = 0;
	var _g2 = tmp.length;
	while(_g11 < _g2) {
		var i = _g11++;
		var _g21 = tmp.charCodeAt(i);
		switch(_g21) {
		case 47:
			if(!colon) {
				slashes = true;
			} else {
				var i1 = _g21;
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += String.fromCharCode(i1);
			}
			break;
		case 58:
			acc_b += ":";
			colon = true;
			break;
		default:
			var i2 = _g21;
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += String.fromCharCode(i2);
		}
	}
	return acc_b;
};
var haxe_io_StringInput = function(s) {
	haxe_io_BytesInput.call(this,haxe_io_Bytes.ofString(s));
};
$hxClasses["haxe.io.StringInput"] = haxe_io_StringInput;
haxe_io_StringInput.__name__ = ["haxe","io","StringInput"];
haxe_io_StringInput.__super__ = haxe_io_BytesInput;
haxe_io_StringInput.prototype = $extend(haxe_io_BytesInput.prototype,{
	__class__: haxe_io_StringInput
});
var haxe_ui_backend_BackendBase = function() { };
$hxClasses["haxe.ui.backend.BackendBase"] = haxe_ui_backend_BackendBase;
haxe_ui_backend_BackendBase.__name__ = ["haxe","ui","backend","BackendBase"];
var haxe_ui_Backend = function() { };
$hxClasses["haxe.ui.Backend"] = haxe_ui_Backend;
haxe_ui_Backend.__name__ = ["haxe","ui","Backend"];
haxe_ui_Backend.__properties__ = {get_id:"get_id"};
haxe_ui_Backend.get_id = function() {
	return haxe_ui_backend_BackendBase.id;
};
haxe_ui_Backend.__super__ = haxe_ui_backend_BackendBase;
haxe_ui_Backend.prototype = $extend(haxe_ui_backend_BackendBase.prototype,{
	__class__: haxe_ui_Backend
});
var haxe_ui_backend_CallLaterBase = function(fn) {
	window.requestAnimationFrame(function(timestamp) {
		fn();
	});
};
$hxClasses["haxe.ui.backend.CallLaterBase"] = haxe_ui_backend_CallLaterBase;
haxe_ui_backend_CallLaterBase.__name__ = ["haxe","ui","backend","CallLaterBase"];
haxe_ui_backend_CallLaterBase.prototype = {
	__class__: haxe_ui_backend_CallLaterBase
};
var haxe_ui_CallLater = function(fn) {
	haxe_ui_backend_CallLaterBase.call(this,fn);
};
$hxClasses["haxe.ui.CallLater"] = haxe_ui_CallLater;
haxe_ui_CallLater.__name__ = ["haxe","ui","CallLater"];
haxe_ui_CallLater.__super__ = haxe_ui_backend_CallLaterBase;
haxe_ui_CallLater.prototype = $extend(haxe_ui_backend_CallLaterBase.prototype,{
	__class__: haxe_ui_CallLater
});
var haxe_ui_backend_AppBase = function() {
};
$hxClasses["haxe.ui.backend.AppBase"] = haxe_ui_backend_AppBase;
haxe_ui_backend_AppBase.__name__ = ["haxe","ui","backend","AppBase"];
haxe_ui_backend_AppBase.prototype = {
	build: function() {
	}
	,init: function(onReady,onEnd) {
		if(window.document.readyState == "complete") {
			onReady();
		} else {
			window.document.body.onload = function(e) {
				onReady();
			};
		}
	}
	,getToolkitInit: function() {
		return { container : this.findContainer(haxe_ui_Toolkit.backendProperties.getProp("haxe.ui.html5.container"))};
	}
	,start: function() {
	}
	,buildPreloadList: function() {
		return [];
	}
	,findContainer: function(id) {
		var el = null;
		if(id == "body") {
			el = window.document.body;
		}
		if(el == null) {
			el = window.document.body;
		}
		el.style.overflow = "hidden";
		return el;
	}
	,__class__: haxe_ui_backend_AppBase
};
var haxe_ui_HaxeUIApp = function() {
	haxe_ui_backend_AppBase.call(this);
	haxe_ui_Toolkit.build();
	this.build();
};
$hxClasses["haxe.ui.HaxeUIApp"] = haxe_ui_HaxeUIApp;
haxe_ui_HaxeUIApp.__name__ = ["haxe","ui","HaxeUIApp"];
haxe_ui_HaxeUIApp.__super__ = haxe_ui_backend_AppBase;
haxe_ui_HaxeUIApp.prototype = $extend(haxe_ui_backend_AppBase.prototype,{
	ready: function(onReady,onEnd) {
		this.init(onReady,onEnd);
	}
	,init: function(onReady,onEnd) {
		if(haxe_ui_Toolkit.backendProperties.getProp("haxe.ui.theme") != null && haxe_ui_Toolkit.theme == "default") {
			haxe_ui_Toolkit.theme = haxe_ui_Toolkit.backendProperties.getProp("haxe.ui.theme");
		}
		haxe_ui_Toolkit.init(this.getToolkitInit());
		var preloadList = null;
		var preloader = null;
		preloadList = this.buildPreloadList();
		if(preloadList != null && preloadList.length > 0) {
			preloader = new haxe_ui_Preloader();
			preloader.progress(0,preloadList.length);
			this.addComponent(preloader);
			preloader.validate();
		}
		this.handlePreload(preloadList,onReady,onEnd,preloader);
	}
	,handlePreload: function(list,onReady,onEnd,preloader) {
		var _gthis = this;
		if(list == null || list.length == 0) {
			if(preloader != null) {
				preloader.complete();
			}
			haxe_ui_backend_AppBase.prototype.init.call(this,onReady,onEnd);
			return;
		}
		var item = list.shift();
		var _g = item.type;
		switch(_g) {
		case "font":
			haxe_ui_ToolkitAssets.get_instance().getFont(item.resourceId,function(f) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onReady,onEnd,preloader);
			});
			break;
		case "image":
			haxe_ui_ToolkitAssets.get_instance().getImage(item.resourceId,function(i) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onReady,onEnd,preloader);
			});
			break;
		default:
			haxe_Log.trace("WARNING: unknown type to preload \"" + item.type + "\", continuing",{ fileName : "haxe/ui/HaxeUIApp.hx", lineNumber : 72, className : "haxe.ui.HaxeUIApp", methodName : "handlePreload"});
			if(preloader != null) {
				preloader.increment();
			}
			this.handlePreload(list,onReady,onEnd,preloader);
		}
	}
	,addComponent: function(component) {
		haxe_ui_core_Screen.get_instance().addComponent(component);
	}
	,removeComponent: function(component) {
		haxe_ui_core_Screen.get_instance().removeComponent(component);
	}
	,setComponentIndex: function(child,index) {
		haxe_ui_core_Screen.get_instance().setComponentIndex(child,index);
	}
	,buildPreloadList: function() {
		var list = haxe_ui_backend_AppBase.prototype.buildPreloadList.call(this);
		if(list == null) {
			list = [];
		}
		list = list.concat(haxe_ui_ToolkitAssets.get_instance().preloadList);
		return list;
	}
	,__class__: haxe_ui_HaxeUIApp
});
var haxe_ui_Preloader = function() {
	haxe_ui_core_Component.call(this);
	this.set_id("preloader");
	this.set_styleString("width:auto;height:auto;");
};
$hxClasses["haxe.ui.Preloader"] = haxe_ui_Preloader;
haxe_ui_Preloader.__name__ = ["haxe","ui","Preloader"];
haxe_ui_Preloader.__super__ = haxe_ui_core_Component;
haxe_ui_Preloader.prototype = $extend(haxe_ui_core_Component.prototype,{
	createChildren: function() {
		var label = new haxe_ui_components_Label();
		label.set_text("Loading");
		this.addComponent(label);
	}
	,validateLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateLayout.call(this);
		if(this.get_width() > 0 && this.get_height() > 0) {
			this.set_left(haxe_ui_core_Screen.get_instance().get_width() / 2 - this.get_width() / 2);
			this.set_top(haxe_ui_core_Screen.get_instance().get_height() / 2 - this.get_height() / 2);
		}
		return b;
	}
	,progress: function(current,max) {
		this._current = current;
		this._max = max;
		if(current > 0) {
			var label = this.findComponent(null,haxe_ui_components_Label);
			var text = label.get_text() + ".";
			if(StringTools.endsWith(text,"....")) {
				text = "Loading";
			}
			label.set_text(text);
		}
	}
	,increment: function() {
		this.progress(this._current + 1,this._max);
	}
	,complete: function() {
		haxe_ui_core_Screen.get_instance().removeComponent(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_Preloader();
	}
	,__class__: haxe_ui_Preloader
});
var haxe_ui_util_Properties = function() {
	this._props = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.Properties"] = haxe_ui_util_Properties;
haxe_ui_util_Properties.__name__ = ["haxe","ui","util","Properties"];
haxe_ui_util_Properties.prototype = {
	getProp: function(name,defaultValue) {
		var v = defaultValue;
		var _this = this._props;
		if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
			var _this1 = this._props;
			v = __map_reserved[name] != null ? _this1.getReserved(name) : _this1.h[name];
		}
		return v;
	}
	,getPropInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = Std.parseInt(stringValue);
		}
		return v;
	}
	,getPropBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = stringValue == "true";
		}
		return v;
	}
	,getPropCol: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			var s = stringValue;
			if(StringTools.startsWith(s,"#")) {
				s = s.substring(1,s.length);
			} else if(StringTools.startsWith(s,"0x")) {
				s = s.substring(2,s.length);
			}
			v = Std.parseInt("0xFF" + s);
		}
		return v;
	}
	,setProp: function(name,value) {
		var _this = this._props;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,names: function() {
		return this._props.keys();
	}
	,addAll: function(p) {
		var name = p.names();
		while(name.hasNext()) {
			var name1 = name.next();
			var this1 = this._props;
			var value = p.getProp(name1);
			var _this = this1;
			if(__map_reserved[name1] != null) {
				_this.setReserved(name1,value);
			} else {
				_this.h[name1] = value;
			}
		}
	}
	,__class__: haxe_ui_util_Properties
};
var haxe_ui_util_GenericConfig = function() {
	this.values = new haxe_ds_StringMap();
	this.sections = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.GenericConfig"] = haxe_ui_util_GenericConfig;
haxe_ui_util_GenericConfig.__name__ = ["haxe","ui","util","GenericConfig"];
haxe_ui_util_GenericConfig.prototype = {
	addSection: function(name) {
		var config = new haxe_ui_util_GenericConfig();
		var _this = this.sections;
		var array = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(array == null) {
			array = [];
			var _this1 = this.sections;
			if(__map_reserved[name] != null) {
				_this1.setReserved(name,array);
			} else {
				_this1.h[name] = array;
			}
		}
		array.push(config);
		return config;
	}
	,findBy: function(section,field,value) {
		var _this = this.sections;
		var array = __map_reserved[section] != null ? _this.getReserved(section) : _this.h[section];
		if(array == null) {
			return null;
		}
		if(field == null && value == null) {
			return array[0];
		}
		var r = null;
		var _g = 0;
		while(_g < array.length) {
			var item = array[_g];
			++_g;
			var key = item.values.keys();
			while(key.hasNext()) {
				var key1 = key.next();
				var tmp;
				if(key1 == field) {
					var _this1 = item.values;
					tmp = (__map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1]) == value;
				} else {
					tmp = false;
				}
				if(tmp) {
					r = item;
					break;
				}
			}
			if(r != null) {
				break;
			}
		}
		return r;
	}
	,queryBool: function(q,defaultValue,conditionRef) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var r = this.query(q,null,conditionRef);
		if(r == null) {
			return defaultValue;
		}
		return r == "true";
	}
	,query: function(q,defaultValue,conditionRef) {
		var _this = haxe_ui_util_GenericConfig.cache;
		if(__map_reserved[q] != null ? _this.existsReserved(q) : _this.h.hasOwnProperty(q)) {
			var _this1 = haxe_ui_util_GenericConfig.cache;
			if(__map_reserved[q] != null) {
				return _this1.getReserved(q);
			} else {
				return _this1.h[q];
			}
		}
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var value = null;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			} else if(f.indexOf("@") != -1) {
				var v = HxOverrides.substr(f,1,f.length);
				var _this2 = ref.values;
				value = __map_reserved[v] != null ? _this2.getReserved(v) : _this2.h[v];
				break;
			}
			if(ref == null) {
				var _this3 = haxe_ui_util_GenericConfig.cache;
				if(__map_reserved[q] != null) {
					_this3.setReserved(q,defaultValue);
				} else {
					_this3.h[q] = defaultValue;
				}
				return defaultValue;
			}
		}
		if(conditionRef != null) {
			var n = q.indexOf("]");
			var nq = q.substring(0,n + 1) + ".@condition";
			var condition = this.query(nq,null,null);
			if(condition != null) {
				var interp = new haxe_ui_scripting_ScriptInterp();
				var parser = new hscript_Parser();
				var line = parser.parseString(condition);
				var _this4 = interp.variables;
				var value1 = conditionRef;
				if(__map_reserved["this"] != null) {
					_this4.setReserved("this",value1);
				} else {
					_this4.h["this"] = value1;
				}
				var r = interp.expr(line);
				if(r == false) {
					return defaultValue;
				}
			}
		}
		if(value == null) {
			value = defaultValue;
		}
		return value;
	}
	,queryValues: function(q,conditionRef) {
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			}
			if(ref == null) {
				return null;
			}
		}
		if(conditionRef != null) {
			var n = q.indexOf("]");
			var nq = q.substring(0,n + 1) + ".@condition";
			var condition = this.query(nq,null,null);
			if(condition != null) {
				var interp = new haxe_ui_scripting_ScriptInterp();
				var parser = new hscript_Parser();
				var line = parser.parseString(condition);
				var _this = interp.variables;
				var value = conditionRef;
				if(__map_reserved["this"] != null) {
					_this.setReserved("this",value);
				} else {
					_this.h["this"] = value;
				}
				var r = interp.expr(line);
				if(r == false) {
					return null;
				}
			}
		}
		return ref.values;
	}
	,__class__: haxe_ui_util_GenericConfig
};
var haxe_ui_styles_Engine = function() {
	this.rules = [];
};
$hxClasses["haxe.ui.styles.Engine"] = haxe_ui_styles_Engine;
haxe_ui_styles_Engine.__name__ = ["haxe","ui","styles","Engine"];
haxe_ui_styles_Engine.ruleMatch = function(c,d) {
	if(c.pseudoClass != null) {
		var pc = ":" + c.pseudoClass;
		var found = false;
		var _g = 0;
		var _g1 = d.classes;
		while(_g < _g1.length) {
			var cc = _g1[_g];
			++_g;
			if(cc == pc) {
				found = true;
				break;
			}
		}
		if(!found) {
			return false;
		}
	}
	if(c.className != null) {
		if(d.classes == null) {
			return false;
		}
		var found1 = false;
		var _g2 = 0;
		var _g11 = d.classes;
		while(_g2 < _g11.length) {
			var cc1 = _g11[_g2];
			++_g2;
			if(cc1 == c.className) {
				found1 = true;
				break;
			}
		}
		if(!found1) {
			return false;
		}
	}
	if(c.node != null) {
		var className = Type.getClassName(d == null ? null : js_Boot.getClass(d)).split(".").pop();
		if(c.node.toLowerCase() != className.toLowerCase()) {
			return false;
		}
	}
	if(c.id != null && c.id != d.get_id()) {
		return false;
	}
	if(c.parent != null) {
		var p = d.parentComponent;
		while(p != null) {
			if(haxe_ui_styles_Engine.ruleMatch(c.parent,p)) {
				break;
			}
			p = p.parentComponent;
		}
		if(p == null) {
			return false;
		}
	}
	return true;
};
haxe_ui_styles_Engine.prototype = {
	applyClasses: function(c,set) {
		if(set == null) {
			set = true;
		}
		var s = new haxe_ui_styles_Style();
		if(set == true) {
			c.set_style(s);
		}
		var rules = [];
		var _g = 0;
		var _g1 = this.rules;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(!haxe_ui_styles_Engine.ruleMatch(r.c,c)) {
				continue;
			}
			rules.push(r);
		}
		rules.sort($bind(this,this.sortByPriority));
		var _g2 = 0;
		while(_g2 < rules.length) {
			var r1 = rules[_g2];
			++_g2;
			s.apply(r1.s);
		}
		if(c.customStyle != null) {
			s.apply(c.customStyle);
		}
		return s;
	}
	,sortByPriority: function(r1,r2) {
		var dp = r1.priority - r2.priority;
		if(dp == 0) {
			return r1.id - r2.id;
		} else {
			return dp;
		}
	}
	,addRules: function(text) {
		var _g = 0;
		var _g1 = new haxe_ui_styles_Parser().parseRules(text);
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			var c = r.c;
			var imp = r.imp ? 1 : 0;
			var nids = 0;
			var nothers = 0;
			var nnodes = 0;
			while(c != null) {
				if(c.id != null) {
					++nids;
				}
				if(c.node != null) {
					++nnodes;
				}
				if(c.pseudoClass != null) {
					++nothers;
				}
				if(c.className != null) {
					++nothers;
				}
				c = c.parent;
			}
			var rule = new haxe_ui_styles_Rule();
			rule.id = this.rules.length;
			rule.c = r.c;
			rule.s = r.s;
			rule.priority = imp << 24 | nids << 16 | nothers << 8 | nnodes;
			this.rules.push(rule);
		}
	}
	,__class__: haxe_ui_styles_Engine
};
var haxe_ui_Toolkit = function() { };
$hxClasses["haxe.ui.Toolkit"] = haxe_ui_Toolkit;
haxe_ui_Toolkit.__name__ = ["haxe","ui","Toolkit"];
haxe_ui_Toolkit.__properties__ = {set_scale:"set_scale",get_scale:"get_scale",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",set_pixelsPerRem:"set_pixelsPerRem",get_screen:"get_screen",get_assets:"get_assets"};
haxe_ui_Toolkit.build = function() {
	if(haxe_ui_Toolkit._built == true) {
		return;
	}
	haxe_ui_Toolkit.backendProperties.setProp("haxe.ui.html5.container","body");
	haxe_ui_Toolkit.backendProperties.setProp("haxe.ui.theme","default");
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","styles/native/main.css");
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","styles/main.css");
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","styles/default/main.css");
	haxe_ui_scripting_ScriptInterp.addClassAlias("BindingInfo","haxe.ui.core.Component.BindingInfo");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DeferredBindingInfo","haxe.ui.core.Component.DeferredBindingInfo");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Component","haxe.ui.core.Component");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ComponentDefaultDisabledBehaviour","haxe.ui.core.Component.ComponentDefaultDisabledBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Button","haxe.ui.components.Button");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ButtonDefaultTextBehaviour","haxe.ui.components.Button.ButtonDefaultTextBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ButtonDefaultIconBehaviour","haxe.ui.components.Button.ButtonDefaultIconBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ButtonLayout","haxe.ui.components.Button.ButtonLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("CheckBox","haxe.ui.components.CheckBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("CheckBoxDefaultTextBehaviour","haxe.ui.components.CheckBox.CheckBoxDefaultTextBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("CheckBoxDefaultSelectedBehaviour","haxe.ui.components.CheckBox.CheckBoxDefaultSelectedBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("CheckBoxValue","haxe.ui.components.CheckBox.CheckBoxValue");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Column","haxe.ui.components.Column");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DropDown","haxe.ui.components.DropDown");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DropDownDefaultDataSourceBehaviour","haxe.ui.components.DropDown.DropDownDefaultDataSourceBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DropDownDefaultSelectedItemBehaviour","haxe.ui.components.DropDown.DropDownDefaultSelectedItemBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HGrid","haxe.ui.components.HGrid");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HProgress","haxe.ui.components.HProgress");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HProgressLayout","haxe.ui.components.HProgress.HProgressLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HScroll","haxe.ui.components.HScroll");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HScrollLayout","haxe.ui.components.HScroll.HScrollLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HSlider","haxe.ui.components.HSlider");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HSliderLayout","haxe.ui.components.HSlider.HSliderLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Image","haxe.ui.components.Image");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ImageLayout","haxe.ui.components.Image.ImageLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ImageDefaultResourceBehaviour","haxe.ui.components.Image.ImageDefaultResourceBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Label","haxe.ui.components.Label");
	haxe_ui_scripting_ScriptInterp.addClassAlias("LabelLayout","haxe.ui.components.Label.LabelLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("LabelDefaultTextBehaviour","haxe.ui.components.Label.LabelDefaultTextBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("OptionBox","haxe.ui.components.OptionBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("OptionBoxDefaultTextBehaviour","haxe.ui.components.OptionBox.OptionBoxDefaultTextBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("OptionBoxDefaultSelectedBehaviour","haxe.ui.components.OptionBox.OptionBoxDefaultSelectedBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("OptionBoxValue","haxe.ui.components.OptionBox.OptionBoxValue");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Progress","haxe.ui.components.Progress");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ProgressDefaultMinBehaviour","haxe.ui.components.Progress.ProgressDefaultMinBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ProgressDefaultMaxBehaviour","haxe.ui.components.Progress.ProgressDefaultMaxBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ProgressDefaultPosBehaviour","haxe.ui.components.Progress.ProgressDefaultPosBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ProgressDefaultRangeStartBehaviour","haxe.ui.components.Progress.ProgressDefaultRangeStartBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ProgressDefaultRangeEndBehaviour","haxe.ui.components.Progress.ProgressDefaultRangeEndBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ProgressDefaultIndeterminateBehaviour","haxe.ui.components.Progress.ProgressDefaultIndeterminateBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Scroll","haxe.ui.components.Scroll");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ScrollDefaultMinBehaviour","haxe.ui.components.Scroll.ScrollDefaultMinBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ScrollDefaultMaxBehaviour","haxe.ui.components.Scroll.ScrollDefaultMaxBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ScrollDefaultPosBehaviour","haxe.ui.components.Scroll.ScrollDefaultPosBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ScrollDefaultPageSizeBehaviour","haxe.ui.components.Scroll.ScrollDefaultPageSizeBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Slider","haxe.ui.components.Slider");
	haxe_ui_scripting_ScriptInterp.addClassAlias("SliderDefaultMinBehaviour","haxe.ui.components.Slider.SliderDefaultMinBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("SliderDefaultMaxBehaviour","haxe.ui.components.Slider.SliderDefaultMaxBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("SliderDefaultPosBehaviour","haxe.ui.components.Slider.SliderDefaultPosBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("SliderDefaultRangeStartBehaviour","haxe.ui.components.Slider.SliderDefaultRangeStartBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("SliderDefaultRangeEndBehaviour","haxe.ui.components.Slider.SliderDefaultRangeEndBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Spacer","haxe.ui.components.Spacer");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Switch","haxe.ui.components.Switch");
	haxe_ui_scripting_ScriptInterp.addClassAlias("SwitchLayout","haxe.ui.components.Switch.SwitchLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TabBar","haxe.ui.components.TabBar");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TabBarLayout","haxe.ui.components.TabBar.TabBarLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextArea","haxe.ui.components.TextArea");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextAreaDefaultTextBehaviour","haxe.ui.components.TextArea.TextAreaDefaultTextBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextAreaDefaultPlaceholderBehaviour","haxe.ui.components.TextArea.TextAreaDefaultPlaceholderBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextAreaDefaultWrapBehaviour","haxe.ui.components.TextArea.TextAreaDefaultWrapBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextAreaLayout","haxe.ui.components.TextArea.TextAreaLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextField","haxe.ui.components.TextField");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextFieldDefaultTextBehaviour","haxe.ui.components.TextField.TextFieldDefaultTextBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextFieldDefaultIconBehaviour","haxe.ui.components.TextField.TextFieldDefaultIconBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextFieldDefaultPasswordBehaviour","haxe.ui.components.TextField.TextFieldDefaultPasswordBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextFieldDefaultPlaceholderBehaviour","haxe.ui.components.TextField.TextFieldDefaultPlaceholderBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TextFieldLayout","haxe.ui.components.TextField.TextFieldLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VGrid","haxe.ui.components.VGrid");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VProgress","haxe.ui.components.VProgress");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VProgressLayout","haxe.ui.components.VProgress.VProgressLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VScroll","haxe.ui.components.VScroll");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VScrollLayout","haxe.ui.components.VScroll.VScrollLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VSlider","haxe.ui.components.VSlider");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VSliderLayout","haxe.ui.components.VSlider.VSliderLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Absolute","haxe.ui.containers.Absolute");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Box","haxe.ui.containers.Box");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ContinuousHBox","haxe.ui.containers.ContinuousHBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Grid","haxe.ui.containers.Grid");
	haxe_ui_scripting_ScriptInterp.addClassAlias("HBox","haxe.ui.containers.HBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Header","haxe.ui.containers.Header");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ListView","haxe.ui.containers.ListView");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ListViewDefaultDataSourceBehaviour","haxe.ui.containers.ListView.ListViewDefaultDataSourceBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DefaultSelectedIndexBehaviour","haxe.ui.containers.ListView.DefaultSelectedIndexBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ScrollView","haxe.ui.containers.ScrollView");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DefaultVScrollPosBehaviour","haxe.ui.containers.ScrollView.DefaultVScrollPosBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DefaultHScrollPosBehaviour","haxe.ui.containers.ScrollView.DefaultHScrollPosBehaviour");
	haxe_ui_scripting_ScriptInterp.addClassAlias("ScrollViewLayout","haxe.ui.containers.ScrollView.ScrollViewLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Stack","haxe.ui.containers.Stack");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TableView","haxe.ui.containers.TableView");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TableViewLayout","haxe.ui.containers.TableView.TableViewLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TableViewRow","haxe.ui.containers.TableView.TableViewRow");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TabView","haxe.ui.containers.TabView");
	haxe_ui_scripting_ScriptInterp.addClassAlias("TabViewLayout","haxe.ui.containers.TabView.TabViewLayout");
	haxe_ui_scripting_ScriptInterp.addClassAlias("RemovePage","haxe.ui.containers.TabView.RemovePage");
	haxe_ui_scripting_ScriptInterp.addClassAlias("RemoveAllPages","haxe.ui.containers.TabView.RemoveAllPages");
	haxe_ui_scripting_ScriptInterp.addClassAlias("PageCount","haxe.ui.containers.TabView.PageCount");
	haxe_ui_scripting_ScriptInterp.addClassAlias("VBox","haxe.ui.containers.VBox");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Dialog","haxe.ui.containers.dialogs.Dialog");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DialogButton","haxe.ui.containers.dialogs.DialogButton");
	haxe_ui_scripting_ScriptInterp.addClassAlias("DialogOptions","haxe.ui.containers.dialogs.DialogOptions");
	haxe_ui_scripting_ScriptInterp.addClassAlias("MessageDialog","haxe.ui.containers.dialogs.MessageDialog");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Animation","haxe.ui.animation.Animation");
	haxe_ui_scripting_ScriptInterp.addClassAlias("AnimationComponentRef","haxe.ui.animation.AnimationComponentRef");
	haxe_ui_scripting_ScriptInterp.addClassAlias("AnimationKeyFrame","haxe.ui.animation.AnimationKeyFrame");
	haxe_ui_scripting_ScriptInterp.addClassAlias("AnimationManager","haxe.ui.animation.AnimationManager");
	haxe_ui_scripting_ScriptInterp.addClassAlias("Std","Std");
	haxe_ui_scripting_ScriptInterp.addStaticClass("Std",Std);
	haxe_ui_scripting_ScriptInterp.addClassAlias("StringTools","StringTools");
	haxe_ui_scripting_ScriptInterp.addStaticClass("StringTools",StringTools);
	haxe_ui_scripting_ScriptInterp.addClassAlias("DialogEntry","haxe.ui.core.Screen.DialogEntry");
	haxe_ui_scripting_ScriptInterp.addStaticClass("DialogEntry",haxe_ui_core_DialogEntry);
	haxe_ui_scripting_ScriptInterp.addClassAlias("Screen","haxe.ui.core.Screen");
	haxe_ui_scripting_ScriptInterp.addStaticClass("Screen",haxe_ui_core_Screen);
	haxe_ui_scripting_ScriptInterp.addClassAlias("UIEvent","haxe.ui.core.UIEvent");
	haxe_ui_scripting_ScriptInterp.addStaticClass("UIEvent",haxe_ui_core_UIEvent);
	haxe_ui_scripting_ScriptInterp.addClassAlias("MouseEvent","haxe.ui.core.MouseEvent");
	haxe_ui_scripting_ScriptInterp.addStaticClass("MouseEvent",haxe_ui_core_MouseEvent);
	haxe_ui_scripting_ScriptInterp.addClassAlias("Dialog","haxe.ui.containers.dialogs.Dialog");
	haxe_ui_scripting_ScriptInterp.addStaticClass("Dialog",haxe_ui_containers_dialogs_Dialog);
	haxe_ui_scripting_ScriptInterp.addClassAlias("DialogOptions","haxe.ui.containers.dialogs.DialogOptions");
	haxe_ui_scripting_ScriptInterp.addStaticClass("DialogOptions",haxe_ui_containers_dialogs_DialogOptions);
	haxe_ui_scripting_ScriptInterp.addClassAlias("DialogButton","haxe.ui.containers.dialogs.DialogButton");
	haxe_ui_scripting_ScriptInterp.addStaticClass("DialogButton",haxe_ui_containers_dialogs_DialogButton);
	haxe_ui_scripting_ScriptInterp.addClassAlias("AnimationManager","haxe.ui.animation.AnimationManager");
	haxe_ui_scripting_ScriptInterp.addStaticClass("AnimationManager",haxe_ui_animation_AnimationManager);
	haxe_ui_themes_ThemeManager.get_instance().getTheme("native").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","haxeui-core/styles/native/main.css");
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","haxeui-core/styles/global.css");
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/main.css");
	haxe_ui_themes_ThemeManager.get_instance().getTheme("test").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("test","haxeui-core/styles/test/main.css");
	var _this = haxe_ui_Toolkit.properties;
	if(__map_reserved["haxe.ui.components.hprogress.animation.indeterminate"] != null) {
		_this.setReserved("haxe.ui.components.hprogress.animation.indeterminate","haxe.ui.components.animation.indeterminate");
	} else {
		_this.h["haxe.ui.components.hprogress.animation.indeterminate"] = "haxe.ui.components.animation.indeterminate";
	}
	var _this1 = haxe_ui_Toolkit.properties;
	if(__map_reserved["haxe.ui.components.vprogress.animation.indeterminate"] != null) {
		_this1.setReserved("haxe.ui.components.vprogress.animation.indeterminate","haxe.ui.components.animation.indeterminate");
	} else {
		_this1.h["haxe.ui.components.vprogress.animation.indeterminate"] = "haxe.ui.components.animation.indeterminate";
	}
	var _this2 = haxe_ui_Toolkit.properties;
	if(__map_reserved["haxe.ui.components.hslider.animation.pos"] != null) {
		_this2.setReserved("haxe.ui.components.hslider.animation.pos","haxe.ui.components.animation.pos");
	} else {
		_this2.h["haxe.ui.components.hslider.animation.pos"] = "haxe.ui.components.animation.pos";
	}
	var _this3 = haxe_ui_Toolkit.properties;
	if(__map_reserved["haxe.ui.components.hslider.animation.rangeStart"] != null) {
		_this3.setReserved("haxe.ui.components.hslider.animation.rangeStart","haxe.ui.components.animation.rangeStart");
	} else {
		_this3.h["haxe.ui.components.hslider.animation.rangeStart"] = "haxe.ui.components.animation.rangeStart";
	}
	var _this4 = haxe_ui_Toolkit.properties;
	if(__map_reserved["haxe.ui.components.hslider.animation.rangeEnd"] != null) {
		_this4.setReserved("haxe.ui.components.hslider.animation.rangeEnd","haxe.ui.components.animation.rangeEnd");
	} else {
		_this4.h["haxe.ui.components.hslider.animation.rangeEnd"] = "haxe.ui.components.animation.rangeEnd";
	}
	var _this5 = haxe_ui_Toolkit.properties;
	if(__map_reserved["haxe.ui.components.vslider.animation.pos"] != null) {
		_this5.setReserved("haxe.ui.components.vslider.animation.pos","haxe.ui.components.animation.pos");
	} else {
		_this5.h["haxe.ui.components.vslider.animation.pos"] = "haxe.ui.components.animation.pos";
	}
	var _this6 = haxe_ui_Toolkit.properties;
	if(__map_reserved["haxe.ui.components.vslider.animation.rangeStart"] != null) {
		_this6.setReserved("haxe.ui.components.vslider.animation.rangeStart","haxe.ui.components.animation.rangeStart");
	} else {
		_this6.h["haxe.ui.components.vslider.animation.rangeStart"] = "haxe.ui.components.animation.rangeStart";
	}
	var _this7 = haxe_ui_Toolkit.properties;
	if(__map_reserved["haxe.ui.components.vslider.animation.rangeEnd"] != null) {
		_this7.setReserved("haxe.ui.components.vslider.animation.rangeEnd","haxe.ui.components.animation.rangeEnd");
	} else {
		_this7.h["haxe.ui.components.vslider.animation.rangeEnd"] = "haxe.ui.components.animation.rangeEnd";
	}
	var _this8 = haxe_ui_Toolkit.properties;
	if(__map_reserved["haxe.ui.components.hscroll.animation.pos"] != null) {
		_this8.setReserved("haxe.ui.components.hscroll.animation.pos","haxe.ui.components.animation.pos");
	} else {
		_this8.h["haxe.ui.components.hscroll.animation.pos"] = "haxe.ui.components.animation.pos";
	}
	var _this9 = haxe_ui_Toolkit.properties;
	if(__map_reserved["haxe.ui.components.vscroll.animation.pos"] != null) {
		_this9.setReserved("haxe.ui.components.vscroll.animation.pos","haxe.ui.components.animation.pos");
	} else {
		_this9.h["haxe.ui.components.vscroll.animation.pos"] = "haxe.ui.components.animation.pos";
	}
	var a = new haxe_ui_animation_Animation();
	a.id = "haxe.ui.components.animation.pos";
	a.easing = haxe_ui_animation_Animation.easingFromString("Bounce.easeNone");
	var kf = a.addKeyFrame(300);
	var ref = kf.addComponentRef("target");
	ref.addVar("pos","pos");
	haxe_ui_animation_AnimationManager.get_instance().registerAnimation(a.id,a);
	var a1 = new haxe_ui_animation_Animation();
	a1.id = "haxe.ui.components.animation.rangeStart";
	a1.easing = haxe_ui_animation_Animation.easingFromString("Bounce.easeOut");
	var kf1 = a1.addKeyFrame(300);
	var ref1 = kf1.addComponentRef("target");
	ref1.addVar("rangeStart","rangeStart");
	haxe_ui_animation_AnimationManager.get_instance().registerAnimation(a1.id,a1);
	var a2 = new haxe_ui_animation_Animation();
	a2.id = "haxe.ui.components.animation.rangeEnd";
	a2.easing = haxe_ui_animation_Animation.easingFromString("Bounce.easeOut");
	var kf2 = a2.addKeyFrame(300);
	var ref2 = kf2.addComponentRef("target");
	ref2.addVar("rangeEnd","rangeEnd");
	haxe_ui_animation_AnimationManager.get_instance().registerAnimation(a2.id,a2);
	var a3 = new haxe_ui_animation_Animation();
	a3.id = "haxe.ui.components.animation.indeterminate";
	a3.easing = haxe_ui_animation_Animation.easingFromString("Back.easeIn");
	var kf3 = a3.addKeyFrame(0);
	var ref3 = kf3.addComponentRef("target");
	ref3.addProperty("rangeEnd",25);
	ref3.addProperty("rangeStart",0);
	var kf4 = a3.addKeyFrame(500);
	var ref4 = kf4.addComponentRef("target");
	ref4.addProperty("rangeEnd",100);
	ref4.addProperty("rangeStart",75);
	var kf5 = a3.addKeyFrame(1000);
	var ref5 = kf5.addComponentRef("target");
	ref5.addProperty("rangeEnd",25);
	ref5.addProperty("rangeStart",0);
	haxe_ui_animation_AnimationManager.get_instance().registerAnimation(a3.id,a3);
	var a4 = new haxe_ui_animation_Animation();
	a4.id = "haxe.ui.components.animation.dialog.show";
	a4.easing = haxe_ui_animation_Animation.easingFromString("Linear.easeNone");
	var kf6 = a4.addKeyFrame(0);
	var ref6 = kf6.addComponentRef("target");
	ref6.addProperty("opacity",0);
	ref6.addVar("top","startTop");
	ref6.addVar("left","startLeft");
	var kf7 = a4.addKeyFrame(300);
	var ref7 = kf7.addComponentRef("target");
	ref7.addProperty("opacity",1);
	ref7.addVar("top","endTop");
	ref7.addVar("left","endLeft");
	haxe_ui_animation_AnimationManager.get_instance().registerAnimation(a4.id,a4);
	var a5 = new haxe_ui_animation_Animation();
	a5.id = "haxe.ui.components.animation.dialog.hide";
	a5.easing = haxe_ui_animation_Animation.easingFromString("Linear.easeNone");
	var kf8 = a5.addKeyFrame(0);
	var ref8 = kf8.addComponentRef("target");
	ref8.addProperty("opacity",1);
	ref8.addVar("top","startTop");
	ref8.addVar("left","startLeft");
	var kf9 = a5.addKeyFrame(300);
	var ref9 = kf9.addComponentRef("target");
	ref9.addProperty("opacity",0);
	ref9.addVar("top","endTop");
	ref9.addVar("left","endLeft");
	haxe_ui_animation_AnimationManager.get_instance().registerAnimation(a5.id,a5);
	haxe_ui_core_ComponentClassMap.register("basicitemrenderer","haxe.ui.core.BasicItemRenderer");
	haxe_ui_core_ComponentClassMap.register("tabview","haxe.ui.containers.TabView");
	haxe_ui_core_ComponentClassMap.register("grid","haxe.ui.containers.Grid");
	haxe_ui_core_ComponentClassMap.register("box","haxe.ui.containers.Box");
	haxe_ui_core_ComponentClassMap.register("button","haxe.ui.components.Button");
	haxe_ui_core_ComponentClassMap.register("spacer","haxe.ui.components.Spacer");
	haxe_ui_core_ComponentClassMap.register("vbox","haxe.ui.containers.VBox");
	haxe_ui_core_ComponentClassMap.register("hscroll","haxe.ui.components.HScroll");
	haxe_ui_core_ComponentClassMap.register("continuoushbox","haxe.ui.containers.ContinuousHBox");
	haxe_ui_core_ComponentClassMap.register("scrollview","haxe.ui.containers.ScrollView");
	haxe_ui_core_ComponentClassMap.register("header","haxe.ui.containers.Header");
	haxe_ui_core_ComponentClassMap.register("progress","haxe.ui.components.Progress");
	haxe_ui_core_ComponentClassMap.register("tableview","haxe.ui.containers.TableView");
	haxe_ui_core_ComponentClassMap.register("shadereditor","editors.ShaderEditor");
	haxe_ui_core_ComponentClassMap.register("checkbox","haxe.ui.components.CheckBox");
	haxe_ui_core_ComponentClassMap.register("hgrid","haxe.ui.components.HGrid");
	haxe_ui_core_ComponentClassMap.register("treeviewnode","custom.TreeView.TreeViewNode");
	haxe_ui_core_ComponentClassMap.register("khanvas","panels.Khanvas");
	haxe_ui_core_ComponentClassMap.register("tabs","panels.Tabs");
	haxe_ui_core_ComponentClassMap.register("vprogress","haxe.ui.components.VProgress");
	haxe_ui_core_ComponentClassMap.register("textarea","haxe.ui.components.TextArea");
	haxe_ui_core_ComponentClassMap.register("label","haxe.ui.components.Label");
	haxe_ui_core_ComponentClassMap.register("tabbar","haxe.ui.components.TabBar");
	haxe_ui_core_ComponentClassMap.register("hprogress","haxe.ui.components.HProgress");
	haxe_ui_core_ComponentClassMap.register("optionboxvalue","haxe.ui.components.OptionBox.OptionBoxValue");
	haxe_ui_core_ComponentClassMap.register("textfield","haxe.ui.components.TextField");
	haxe_ui_core_ComponentClassMap.register("tableviewrow","haxe.ui.containers.TableView.TableViewRow");
	haxe_ui_core_ComponentClassMap.register("messagedialog","haxe.ui.containers.dialogs.MessageDialog");
	haxe_ui_core_ComponentClassMap.register("fileselector","custom.FileSelector");
	haxe_ui_core_ComponentClassMap.register("monacoeditor","custom.MonacoEditor");
	haxe_ui_core_ComponentClassMap.register("image","haxe.ui.components.Image");
	haxe_ui_core_ComponentClassMap.register("itemrenderer","haxe.ui.core.ItemRenderer");
	haxe_ui_core_ComponentClassMap.register("vslider","haxe.ui.components.VSlider");
	haxe_ui_core_ComponentClassMap.register("canvas","custom.Canvas");
	haxe_ui_core_ComponentClassMap.register("texteditor","editors.TextEditor");
	haxe_ui_core_ComponentClassMap.register("hbox","haxe.ui.containers.HBox");
	haxe_ui_core_ComponentClassMap.register("component","haxe.ui.core.Component");
	haxe_ui_core_ComponentClassMap.register("checkboxvalue","haxe.ui.components.CheckBox.CheckBoxValue");
	haxe_ui_core_ComponentClassMap.register("scroll","haxe.ui.components.Scroll");
	haxe_ui_core_ComponentClassMap.register("absolute","haxe.ui.containers.Absolute");
	haxe_ui_core_ComponentClassMap.register("listview","haxe.ui.containers.ListView");
	haxe_ui_core_ComponentClassMap.register("dropdown","haxe.ui.components.DropDown");
	haxe_ui_core_ComponentClassMap.register("hslider","haxe.ui.components.HSlider");
	haxe_ui_core_ComponentClassMap.register("dialog","haxe.ui.containers.dialogs.Dialog");
	haxe_ui_core_ComponentClassMap.register("log","panels.Log");
	haxe_ui_core_ComponentClassMap.register("sourceeditor","editors.SourceEditor");
	haxe_ui_core_ComponentClassMap.register("column","haxe.ui.components.Column");
	haxe_ui_core_ComponentClassMap.register("resourcemanager","panels.ResourceManager");
	haxe_ui_core_ComponentClassMap.register("slider","haxe.ui.components.Slider");
	haxe_ui_core_ComponentClassMap.register("vscroll","haxe.ui.components.VScroll");
	haxe_ui_core_ComponentClassMap.register("switch","haxe.ui.components.Switch");
	haxe_ui_core_ComponentClassMap.register("vgrid","haxe.ui.components.VGrid");
	haxe_ui_core_ComponentClassMap.register("text","haxe.ui.components.Label");
	haxe_ui_core_ComponentClassMap.register("stack","haxe.ui.containers.Stack");
	haxe_ui_core_ComponentClassMap.register("asseteditor","editors.AssetEditor");
	haxe_ui_core_ComponentClassMap.register("optionbox","haxe.ui.components.OptionBox");
	haxe_ui_core_ComponentClassMap.register("treeview","custom.TreeView");
	var s1 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this10 = s1.values;
	if(__map_reserved["nodeType"] != null) {
		_this10.setReserved("nodeType","button");
	} else {
		_this10.h["nodeType"] = "button";
	}
	var _this11 = s1.values;
	if(__map_reserved["class"] != null) {
		_this11.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this11.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this12 = s1.values;
	if(__map_reserved["id"] != null) {
		_this12.setReserved("id","haxe.ui.components.Button");
	} else {
		_this12.h["id"] = "haxe.ui.components.Button";
	}
	var _this13 = s1.values;
	if(__map_reserved["style"] != null) {
		_this13.setReserved("style","padding:0px; padding-bottom: 1px");
	} else {
		_this13.h["style"] = "padding:0px; padding-bottom: 1px";
	}
	var s2 = s1.addSection("behaviour");
	var _this14 = s2.values;
	if(__map_reserved["class"] != null) {
		_this14.setReserved("class","haxe.ui.backend.html5.native.behaviours.SpanText");
	} else {
		_this14.h["class"] = "haxe.ui.backend.html5.native.behaviours.SpanText";
	}
	var _this15 = s2.values;
	if(__map_reserved["id"] != null) {
		_this15.setReserved("id","text");
	} else {
		_this15.h["id"] = "text";
	}
	var _this16 = s2.values;
	if(__map_reserved["style"] != null) {
		_this16.setReserved("style","margin-top:-2px;margin-left:-2px;");
	} else {
		_this16.h["style"] = "margin-top:-2px;margin-left:-2px;";
	}
	var s21 = s1.addSection("behaviour");
	var _this17 = s21.values;
	if(__map_reserved["class"] != null) {
		_this17.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementImage");
	} else {
		_this17.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementImage";
	}
	var _this18 = s21.values;
	if(__map_reserved["id"] != null) {
		_this18.setReserved("id","icon");
	} else {
		_this18.h["id"] = "icon";
	}
	var s22 = s1.addSection("behaviour");
	var _this19 = s22.values;
	if(__map_reserved["class"] != null) {
		_this19.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this19.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this20 = s22.values;
	if(__map_reserved["id"] != null) {
		_this20.setReserved("id","disabled");
	} else {
		_this20.h["id"] = "disabled";
	}
	var s23 = s1.addSection("layout");
	var _this21 = s23.values;
	if(__map_reserved["class"] != null) {
		_this21.setReserved("class","haxe.ui.backend.html5.native.layouts.ButtonLayout");
	} else {
		_this21.h["class"] = "haxe.ui.backend.html5.native.layouts.ButtonLayout";
	}
	var s11 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this22 = s11.values;
	if(__map_reserved["class"] != null) {
		_this22.setReserved("class","haxe.ui.backend.html5.native.LabeledInputElement");
	} else {
		_this22.h["class"] = "haxe.ui.backend.html5.native.LabeledInputElement";
	}
	var _this23 = s11.values;
	if(__map_reserved["type"] != null) {
		_this23.setReserved("type","checkbox");
	} else {
		_this23.h["type"] = "checkbox";
	}
	var _this24 = s11.values;
	if(__map_reserved["id"] != null) {
		_this24.setReserved("id","haxe.ui.components.CheckBox");
	} else {
		_this24.h["id"] = "haxe.ui.components.CheckBox";
	}
	var s24 = s11.addSection("behaviour");
	var _this25 = s24.values;
	if(__map_reserved["index"] != null) {
		_this25.setReserved("index","last");
	} else {
		_this25.h["index"] = "last";
	}
	var _this26 = s24.values;
	if(__map_reserved["class"] != null) {
		_this26.setReserved("class","haxe.ui.backend.html5.native.behaviours.SpanText");
	} else {
		_this26.h["class"] = "haxe.ui.backend.html5.native.behaviours.SpanText";
	}
	var _this27 = s24.values;
	if(__map_reserved["id"] != null) {
		_this27.setReserved("id","text");
	} else {
		_this27.h["id"] = "text";
	}
	var s25 = s11.addSection("behaviour");
	var _this28 = s25.values;
	if(__map_reserved["child"] != null) {
		_this28.setReserved("child","input");
	} else {
		_this28.h["child"] = "input";
	}
	var _this29 = s25.values;
	if(__map_reserved["removeIfNegative"] != null) {
		_this29.setReserved("removeIfNegative","true");
	} else {
		_this29.h["removeIfNegative"] = "true";
	}
	var _this30 = s25.values;
	if(__map_reserved["class"] != null) {
		_this30.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this30.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this31 = s25.values;
	if(__map_reserved["id"] != null) {
		_this31.setReserved("id","selected");
	} else {
		_this31.h["id"] = "selected";
	}
	var _this32 = s25.values;
	if(__map_reserved["name"] != null) {
		_this32.setReserved("name","checked");
	} else {
		_this32.h["name"] = "checked";
	}
	var s26 = s11.addSection("behaviour");
	var _this33 = s26.values;
	if(__map_reserved["class"] != null) {
		_this33.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this33.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this34 = s26.values;
	if(__map_reserved["id"] != null) {
		_this34.setReserved("id","disabled");
	} else {
		_this34.h["id"] = "disabled";
	}
	var s27 = s11.addSection("size");
	var _this35 = s27.values;
	if(__map_reserved["incrementHeightBy"] != null) {
		_this35.setReserved("incrementHeightBy","0");
	} else {
		_this35.h["incrementHeightBy"] = "0";
	}
	var _this36 = s27.values;
	if(__map_reserved["class"] != null) {
		_this36.setReserved("class","haxe.ui.backend.html5.native.size.TextSize");
	} else {
		_this36.h["class"] = "haxe.ui.backend.html5.native.size.TextSize";
	}
	var _this37 = s27.values;
	if(__map_reserved["incrementWidthBy"] != null) {
		_this37.setReserved("incrementWidthBy","20");
	} else {
		_this37.h["incrementWidthBy"] = "20";
	}
	var s12 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this38 = s12.values;
	if(__map_reserved["class"] != null) {
		_this38.setReserved("class","haxe.ui.backend.html5.native.LabeledInputElement");
	} else {
		_this38.h["class"] = "haxe.ui.backend.html5.native.LabeledInputElement";
	}
	var _this39 = s12.values;
	if(__map_reserved["type"] != null) {
		_this39.setReserved("type","radio");
	} else {
		_this39.h["type"] = "radio";
	}
	var _this40 = s12.values;
	if(__map_reserved["id"] != null) {
		_this40.setReserved("id","haxe.ui.components.OptionBox");
	} else {
		_this40.h["id"] = "haxe.ui.components.OptionBox";
	}
	var s28 = s12.addSection("behaviour");
	var _this41 = s28.values;
	if(__map_reserved["index"] != null) {
		_this41.setReserved("index","last");
	} else {
		_this41.h["index"] = "last";
	}
	var _this42 = s28.values;
	if(__map_reserved["class"] != null) {
		_this42.setReserved("class","haxe.ui.backend.html5.native.behaviours.SpanText");
	} else {
		_this42.h["class"] = "haxe.ui.backend.html5.native.behaviours.SpanText";
	}
	var _this43 = s28.values;
	if(__map_reserved["id"] != null) {
		_this43.setReserved("id","text");
	} else {
		_this43.h["id"] = "text";
	}
	var s29 = s12.addSection("behaviour");
	var _this44 = s29.values;
	if(__map_reserved["child"] != null) {
		_this44.setReserved("child","input");
	} else {
		_this44.h["child"] = "input";
	}
	var _this45 = s29.values;
	if(__map_reserved["removeIfNegative"] != null) {
		_this45.setReserved("removeIfNegative","true");
	} else {
		_this45.h["removeIfNegative"] = "true";
	}
	var _this46 = s29.values;
	if(__map_reserved["class"] != null) {
		_this46.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this46.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this47 = s29.values;
	if(__map_reserved["id"] != null) {
		_this47.setReserved("id","selected");
	} else {
		_this47.h["id"] = "selected";
	}
	var _this48 = s29.values;
	if(__map_reserved["name"] != null) {
		_this48.setReserved("name","checked");
	} else {
		_this48.h["name"] = "checked";
	}
	var s210 = s12.addSection("behaviour");
	var _this49 = s210.values;
	if(__map_reserved["class"] != null) {
		_this49.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this49.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this50 = s210.values;
	if(__map_reserved["id"] != null) {
		_this50.setReserved("id","disabled");
	} else {
		_this50.h["id"] = "disabled";
	}
	var s211 = s12.addSection("size");
	var _this51 = s211.values;
	if(__map_reserved["incrementHeightBy"] != null) {
		_this51.setReserved("incrementHeightBy","0");
	} else {
		_this51.h["incrementHeightBy"] = "0";
	}
	var _this52 = s211.values;
	if(__map_reserved["class"] != null) {
		_this52.setReserved("class","haxe.ui.backend.html5.native.size.TextSize");
	} else {
		_this52.h["class"] = "haxe.ui.backend.html5.native.size.TextSize";
	}
	var _this53 = s211.values;
	if(__map_reserved["incrementWidthBy"] != null) {
		_this53.setReserved("incrementWidthBy","20");
	} else {
		_this53.h["incrementWidthBy"] = "20";
	}
	var s13 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this54 = s13.values;
	if(__map_reserved["nodeType"] != null) {
		_this54.setReserved("nodeType","input");
	} else {
		_this54.h["nodeType"] = "input";
	}
	var _this55 = s13.values;
	if(__map_reserved["class"] != null) {
		_this55.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this55.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this56 = s13.values;
	if(__map_reserved["id"] != null) {
		_this56.setReserved("id","haxe.ui.components.TextField");
	} else {
		_this56.h["id"] = "haxe.ui.components.TextField";
	}
	var _this57 = s13.values;
	if(__map_reserved["style"] != null) {
		_this57.setReserved("style","padding-left:2px;cursor:pointer;");
	} else {
		_this57.h["style"] = "padding-left:2px;cursor:pointer;";
	}
	var s212 = s13.addSection("behaviour");
	var _this58 = s212.values;
	if(__map_reserved["class"] != null) {
		_this58.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementValue");
	} else {
		_this58.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementValue";
	}
	var _this59 = s212.values;
	if(__map_reserved["id"] != null) {
		_this59.setReserved("id","text");
	} else {
		_this59.h["id"] = "text";
	}
	var s213 = s13.addSection("behaviour");
	var _this60 = s213.values;
	if(__map_reserved["class"] != null) {
		_this60.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementPlaceholder");
	} else {
		_this60.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementPlaceholder";
	}
	var _this61 = s213.values;
	if(__map_reserved["id"] != null) {
		_this61.setReserved("id","placeholder");
	} else {
		_this61.h["id"] = "placeholder";
	}
	var s214 = s13.addSection("behaviour");
	var _this62 = s214.values;
	if(__map_reserved["class"] != null) {
		_this62.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this62.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this63 = s214.values;
	if(__map_reserved["id"] != null) {
		_this63.setReserved("id","disabled");
	} else {
		_this63.h["id"] = "disabled";
	}
	var s215 = s13.addSection("size");
	var _this64 = s215.values;
	if(__map_reserved["class"] != null) {
		_this64.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this64.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var s14 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this65 = s14.values;
	if(__map_reserved["nodeType"] != null) {
		_this65.setReserved("nodeType","textarea");
	} else {
		_this65.h["nodeType"] = "textarea";
	}
	var _this66 = s14.values;
	if(__map_reserved["class"] != null) {
		_this66.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this66.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this67 = s14.values;
	if(__map_reserved["id"] != null) {
		_this67.setReserved("id","haxe.ui.components.TextArea");
	} else {
		_this67.h["id"] = "haxe.ui.components.TextArea";
	}
	var _this68 = s14.values;
	if(__map_reserved["style"] != null) {
		_this68.setReserved("style","resize:none;line-height:1.4;");
	} else {
		_this68.h["style"] = "resize:none;line-height:1.4;";
	}
	var s216 = s14.addSection("behaviour");
	var _this69 = s216.values;
	if(__map_reserved["class"] != null) {
		_this69.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementValue");
	} else {
		_this69.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementValue";
	}
	var _this70 = s216.values;
	if(__map_reserved["id"] != null) {
		_this70.setReserved("id","text");
	} else {
		_this70.h["id"] = "text";
	}
	var s217 = s14.addSection("behaviour");
	var _this71 = s217.values;
	if(__map_reserved["class"] != null) {
		_this71.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this71.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this72 = s217.values;
	if(__map_reserved["id"] != null) {
		_this72.setReserved("id","disabled");
	} else {
		_this72.h["id"] = "disabled";
	}
	var s218 = s14.addSection("size");
	var _this73 = s218.values;
	if(__map_reserved["class"] != null) {
		_this73.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this73.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var s15 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this74 = s15.values;
	if(__map_reserved["nodeType"] != null) {
		_this74.setReserved("nodeType","input");
	} else {
		_this74.h["nodeType"] = "input";
	}
	var _this75 = s15.values;
	if(__map_reserved["class"] != null) {
		_this75.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this75.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this76 = s15.values;
	if(__map_reserved["type"] != null) {
		_this76.setReserved("type","range");
	} else {
		_this76.h["type"] = "range";
	}
	var _this77 = s15.values;
	if(__map_reserved["id"] != null) {
		_this77.setReserved("id","haxe.ui.components.HSlider");
	} else {
		_this77.h["id"] = "haxe.ui.components.HSlider";
	}
	var _this78 = s15.values;
	if(__map_reserved["style"] != null) {
		_this78.setReserved("style","margin: 0;padding:0;");
	} else {
		_this78.h["style"] = "margin: 0;padding:0;";
	}
	var s219 = s15.addSection("behaviour");
	var _this79 = s219.values;
	if(__map_reserved["class"] != null) {
		_this79.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this79.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this80 = s219.values;
	if(__map_reserved["id"] != null) {
		_this80.setReserved("id","min");
	} else {
		_this80.h["id"] = "min";
	}
	var _this81 = s219.values;
	if(__map_reserved["name"] != null) {
		_this81.setReserved("name","min");
	} else {
		_this81.h["name"] = "min";
	}
	var s220 = s15.addSection("behaviour");
	var _this82 = s220.values;
	if(__map_reserved["class"] != null) {
		_this82.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this82.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this83 = s220.values;
	if(__map_reserved["id"] != null) {
		_this83.setReserved("id","max");
	} else {
		_this83.h["id"] = "max";
	}
	var _this84 = s220.values;
	if(__map_reserved["name"] != null) {
		_this84.setReserved("name","max");
	} else {
		_this84.h["name"] = "max";
	}
	var s221 = s15.addSection("behaviour");
	var _this85 = s221.values;
	if(__map_reserved["class"] != null) {
		_this85.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this85.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this86 = s221.values;
	if(__map_reserved["id"] != null) {
		_this86.setReserved("id","pos");
	} else {
		_this86.h["id"] = "pos";
	}
	var _this87 = s221.values;
	if(__map_reserved["name"] != null) {
		_this87.setReserved("name","value");
	} else {
		_this87.h["name"] = "value";
	}
	var s222 = s15.addSection("behaviour");
	var _this88 = s222.values;
	if(__map_reserved["class"] != null) {
		_this88.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this88.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this89 = s222.values;
	if(__map_reserved["id"] != null) {
		_this89.setReserved("id","disabled");
	} else {
		_this89.h["id"] = "disabled";
	}
	var s223 = s15.addSection("size");
	var _this90 = s223.values;
	if(__map_reserved["class"] != null) {
		_this90.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this90.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var s16 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this91 = s16.values;
	if(__map_reserved["orient"] != null) {
		_this91.setReserved("orient","vertical");
	} else {
		_this91.h["orient"] = "vertical";
	}
	var _this92 = s16.values;
	if(__map_reserved["nodeType"] != null) {
		_this92.setReserved("nodeType","input");
	} else {
		_this92.h["nodeType"] = "input";
	}
	var _this93 = s16.values;
	if(__map_reserved["class"] != null) {
		_this93.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this93.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this94 = s16.values;
	if(__map_reserved["type"] != null) {
		_this94.setReserved("type","range");
	} else {
		_this94.h["type"] = "range";
	}
	var _this95 = s16.values;
	if(__map_reserved["id"] != null) {
		_this95.setReserved("id","haxe.ui.components.VSlider");
	} else {
		_this95.h["id"] = "haxe.ui.components.VSlider";
	}
	var _this96 = s16.values;
	if(__map_reserved["style"] != null) {
		_this96.setReserved("style","padding:0;margin: 0;-webkit-appearance: slider-vertical;-moz-orient: vertical;writing-mode: bt-lr;");
	} else {
		_this96.h["style"] = "padding:0;margin: 0;-webkit-appearance: slider-vertical;-moz-orient: vertical;writing-mode: bt-lr;";
	}
	var s224 = s16.addSection("behaviour");
	var _this97 = s224.values;
	if(__map_reserved["class"] != null) {
		_this97.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this97.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this98 = s224.values;
	if(__map_reserved["id"] != null) {
		_this98.setReserved("id","min");
	} else {
		_this98.h["id"] = "min";
	}
	var _this99 = s224.values;
	if(__map_reserved["name"] != null) {
		_this99.setReserved("name","min");
	} else {
		_this99.h["name"] = "min";
	}
	var s225 = s16.addSection("behaviour");
	var _this100 = s225.values;
	if(__map_reserved["class"] != null) {
		_this100.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this100.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this101 = s225.values;
	if(__map_reserved["id"] != null) {
		_this101.setReserved("id","max");
	} else {
		_this101.h["id"] = "max";
	}
	var _this102 = s225.values;
	if(__map_reserved["name"] != null) {
		_this102.setReserved("name","max");
	} else {
		_this102.h["name"] = "max";
	}
	var s226 = s16.addSection("behaviour");
	var _this103 = s226.values;
	if(__map_reserved["class"] != null) {
		_this103.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this103.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this104 = s226.values;
	if(__map_reserved["id"] != null) {
		_this104.setReserved("id","pos");
	} else {
		_this104.h["id"] = "pos";
	}
	var _this105 = s226.values;
	if(__map_reserved["name"] != null) {
		_this105.setReserved("name","value");
	} else {
		_this105.h["name"] = "value";
	}
	var s227 = s16.addSection("behaviour");
	var _this106 = s227.values;
	if(__map_reserved["class"] != null) {
		_this106.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this106.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this107 = s227.values;
	if(__map_reserved["id"] != null) {
		_this107.setReserved("id","disabled");
	} else {
		_this107.h["id"] = "disabled";
	}
	var s228 = s16.addSection("size");
	var _this108 = s228.values;
	if(__map_reserved["class"] != null) {
		_this108.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this108.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var s17 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this109 = s17.values;
	if(__map_reserved["nodeType"] != null) {
		_this109.setReserved("nodeType","progress");
	} else {
		_this109.h["nodeType"] = "progress";
	}
	var _this110 = s17.values;
	if(__map_reserved["class"] != null) {
		_this110.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this110.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this111 = s17.values;
	if(__map_reserved["id"] != null) {
		_this111.setReserved("id","haxe.ui.components.HProgress");
	} else {
		_this111.h["id"] = "haxe.ui.components.HProgress";
	}
	var _this112 = s17.values;
	if(__map_reserved["style"] != null) {
		_this112.setReserved("style","padding:0;");
	} else {
		_this112.h["style"] = "padding:0;";
	}
	var s229 = s17.addSection("behaviour");
	var _this113 = s229.values;
	if(__map_reserved["class"] != null) {
		_this113.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this113.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this114 = s229.values;
	if(__map_reserved["id"] != null) {
		_this114.setReserved("id","min");
	} else {
		_this114.h["id"] = "min";
	}
	var _this115 = s229.values;
	if(__map_reserved["name"] != null) {
		_this115.setReserved("name","min");
	} else {
		_this115.h["name"] = "min";
	}
	var s230 = s17.addSection("behaviour");
	var _this116 = s230.values;
	if(__map_reserved["class"] != null) {
		_this116.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this116.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this117 = s230.values;
	if(__map_reserved["id"] != null) {
		_this117.setReserved("id","max");
	} else {
		_this117.h["id"] = "max";
	}
	var _this118 = s230.values;
	if(__map_reserved["name"] != null) {
		_this118.setReserved("name","max");
	} else {
		_this118.h["name"] = "max";
	}
	var s231 = s17.addSection("behaviour");
	var _this119 = s231.values;
	if(__map_reserved["class"] != null) {
		_this119.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this119.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this120 = s231.values;
	if(__map_reserved["id"] != null) {
		_this120.setReserved("id","pos");
	} else {
		_this120.h["id"] = "pos";
	}
	var _this121 = s231.values;
	if(__map_reserved["name"] != null) {
		_this121.setReserved("name","value");
	} else {
		_this121.h["name"] = "value";
	}
	var s232 = s17.addSection("behaviour");
	var _this122 = s232.values;
	if(__map_reserved["remove"] != null) {
		_this122.setReserved("remove","true");
	} else {
		_this122.h["remove"] = "true";
	}
	var _this123 = s232.values;
	if(__map_reserved["class"] != null) {
		_this123.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this123.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this124 = s232.values;
	if(__map_reserved["id"] != null) {
		_this124.setReserved("id","indeterminate");
	} else {
		_this124.h["id"] = "indeterminate";
	}
	var _this125 = s232.values;
	if(__map_reserved["name"] != null) {
		_this125.setReserved("name","value");
	} else {
		_this125.h["name"] = "value";
	}
	var s233 = s17.addSection("behaviour");
	var _this126 = s233.values;
	if(__map_reserved["class"] != null) {
		_this126.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this126.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this127 = s233.values;
	if(__map_reserved["id"] != null) {
		_this127.setReserved("id","disabled");
	} else {
		_this127.h["id"] = "disabled";
	}
	var s234 = s17.addSection("size");
	var _this128 = s234.values;
	if(__map_reserved["class"] != null) {
		_this128.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this128.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var s18 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this129 = s18.values;
	if(__map_reserved["orient"] != null) {
		_this129.setReserved("orient","vertical");
	} else {
		_this129.h["orient"] = "vertical";
	}
	var _this130 = s18.values;
	if(__map_reserved["nodeType"] != null) {
		_this130.setReserved("nodeType","progress");
	} else {
		_this130.h["nodeType"] = "progress";
	}
	var _this131 = s18.values;
	if(__map_reserved["class"] != null) {
		_this131.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this131.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this132 = s18.values;
	if(__map_reserved["id"] != null) {
		_this132.setReserved("id","haxe.ui.components.VProgress");
	} else {
		_this132.h["id"] = "haxe.ui.components.VProgress";
	}
	var _this133 = s18.values;
	if(__map_reserved["style"] != null) {
		_this133.setReserved("style","padding:0;-webkit-transform: rotate(-90deg) translateY(-1000%);-webkit-transform-origin: 100% 0%;-moz-orient: vertical;writing-mode: bt-lr;");
	} else {
		_this133.h["style"] = "padding:0;-webkit-transform: rotate(-90deg) translateY(-1000%);-webkit-transform-origin: 100% 0%;-moz-orient: vertical;writing-mode: bt-lr;";
	}
	var s235 = s18.addSection("behaviour");
	var _this134 = s235.values;
	if(__map_reserved["class"] != null) {
		_this134.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this134.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this135 = s235.values;
	if(__map_reserved["id"] != null) {
		_this135.setReserved("id","min");
	} else {
		_this135.h["id"] = "min";
	}
	var _this136 = s235.values;
	if(__map_reserved["name"] != null) {
		_this136.setReserved("name","min");
	} else {
		_this136.h["name"] = "min";
	}
	var s236 = s18.addSection("behaviour");
	var _this137 = s236.values;
	if(__map_reserved["class"] != null) {
		_this137.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this137.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this138 = s236.values;
	if(__map_reserved["id"] != null) {
		_this138.setReserved("id","max");
	} else {
		_this138.h["id"] = "max";
	}
	var _this139 = s236.values;
	if(__map_reserved["name"] != null) {
		_this139.setReserved("name","max");
	} else {
		_this139.h["name"] = "max";
	}
	var s237 = s18.addSection("behaviour");
	var _this140 = s237.values;
	if(__map_reserved["class"] != null) {
		_this140.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this140.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this141 = s237.values;
	if(__map_reserved["id"] != null) {
		_this141.setReserved("id","pos");
	} else {
		_this141.h["id"] = "pos";
	}
	var _this142 = s237.values;
	if(__map_reserved["name"] != null) {
		_this142.setReserved("name","value");
	} else {
		_this142.h["name"] = "value";
	}
	var s238 = s18.addSection("behaviour");
	var _this143 = s238.values;
	if(__map_reserved["remove"] != null) {
		_this143.setReserved("remove","true");
	} else {
		_this143.h["remove"] = "true";
	}
	var _this144 = s238.values;
	if(__map_reserved["class"] != null) {
		_this144.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementAttribute");
	} else {
		_this144.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
	}
	var _this145 = s238.values;
	if(__map_reserved["id"] != null) {
		_this145.setReserved("id","indeterminate");
	} else {
		_this145.h["id"] = "indeterminate";
	}
	var _this146 = s238.values;
	if(__map_reserved["name"] != null) {
		_this146.setReserved("name","value");
	} else {
		_this146.h["name"] = "value";
	}
	var s239 = s18.addSection("behaviour");
	var _this147 = s239.values;
	if(__map_reserved["class"] != null) {
		_this147.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this147.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this148 = s239.values;
	if(__map_reserved["id"] != null) {
		_this148.setReserved("id","disabled");
	} else {
		_this148.h["id"] = "disabled";
	}
	var s240 = s18.addSection("size");
	var _this149 = s240.values;
	if(__map_reserved["class"] != null) {
		_this149.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this149.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	var s19 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this150 = s19.values;
	if(__map_reserved["class"] != null) {
		_this150.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this150.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this151 = s19.values;
	if(__map_reserved["id"] != null) {
		_this151.setReserved("id","haxe.ui.containers.ScrollView");
	} else {
		_this151.h["id"] = "haxe.ui.containers.ScrollView";
	}
	var s241 = s19.addSection("behaviour");
	var _this152 = s241.values;
	if(__map_reserved["class"] != null) {
		_this152.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this152.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this153 = s241.values;
	if(__map_reserved["id"] != null) {
		_this153.setReserved("id","disabled");
	} else {
		_this153.h["id"] = "disabled";
	}
	var s242 = s19.addSection("behaviour");
	var _this154 = s242.values;
	if(__map_reserved["class"] != null) {
		_this154.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementScrollLeft");
	} else {
		_this154.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementScrollLeft";
	}
	var _this155 = s242.values;
	if(__map_reserved["id"] != null) {
		_this155.setReserved("id","hscrollPos");
	} else {
		_this155.h["id"] = "hscrollPos";
	}
	var s243 = s19.addSection("behaviour");
	var _this156 = s243.values;
	if(__map_reserved["class"] != null) {
		_this156.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementScrollTop");
	} else {
		_this156.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementScrollTop";
	}
	var _this157 = s243.values;
	if(__map_reserved["id"] != null) {
		_this157.setReserved("id","vscrollPos");
	} else {
		_this157.h["id"] = "vscrollPos";
	}
	var s110 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this158 = s110.values;
	if(__map_reserved["class"] != null) {
		_this158.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this158.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this159 = s110.values;
	if(__map_reserved["id"] != null) {
		_this159.setReserved("id","haxe.ui.containers.ListView");
	} else {
		_this159.h["id"] = "haxe.ui.containers.ListView";
	}
	var s244 = s110.addSection("behaviour");
	var _this160 = s244.values;
	if(__map_reserved["class"] != null) {
		_this160.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this160.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this161 = s244.values;
	if(__map_reserved["id"] != null) {
		_this161.setReserved("id","disabled");
	} else {
		_this161.h["id"] = "disabled";
	}
	var s111 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this162 = s111.values;
	if(__map_reserved["class"] != null) {
		_this162.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this162.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this163 = s111.values;
	if(__map_reserved["id"] != null) {
		_this163.setReserved("id","haxe.ui.containers.TableView");
	} else {
		_this163.h["id"] = "haxe.ui.containers.TableView";
	}
	var s245 = s111.addSection("behaviour");
	var _this164 = s245.values;
	if(__map_reserved["class"] != null) {
		_this164.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this164.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this165 = s245.values;
	if(__map_reserved["id"] != null) {
		_this165.setReserved("id","disabled");
	} else {
		_this165.h["id"] = "disabled";
	}
	var s112 = haxe_ui_Toolkit.nativeConfig.addSection("component");
	var _this166 = s112.values;
	if(__map_reserved["allowChildren"] != null) {
		_this166.setReserved("allowChildren","false");
	} else {
		_this166.h["allowChildren"] = "false";
	}
	var _this167 = s112.values;
	if(__map_reserved["nodeType"] != null) {
		_this167.setReserved("nodeType","select");
	} else {
		_this167.h["nodeType"] = "select";
	}
	var _this168 = s112.values;
	if(__map_reserved["class"] != null) {
		_this168.setReserved("class","haxe.ui.backend.html5.native.NativeElement");
	} else {
		_this168.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
	}
	var _this169 = s112.values;
	if(__map_reserved["id"] != null) {
		_this169.setReserved("id","haxe.ui.components.DropDown");
	} else {
		_this169.h["id"] = "haxe.ui.components.DropDown";
	}
	var _this170 = s112.values;
	if(__map_reserved["style"] != null) {
		_this170.setReserved("style","padding:3px;");
	} else {
		_this170.h["style"] = "padding:3px;";
	}
	var s246 = s112.addSection("behaviour");
	var _this171 = s246.values;
	if(__map_reserved["class"] != null) {
		_this171.setReserved("class","haxe.ui.backend.html5.native.behaviours.SelectDataSource");
	} else {
		_this171.h["class"] = "haxe.ui.backend.html5.native.behaviours.SelectDataSource";
	}
	var _this172 = s246.values;
	if(__map_reserved["id"] != null) {
		_this172.setReserved("id","dataSource");
	} else {
		_this172.h["id"] = "dataSource";
	}
	var s247 = s112.addSection("behaviour");
	var _this173 = s247.values;
	if(__map_reserved["class"] != null) {
		_this173.setReserved("class","haxe.ui.backend.html5.native.behaviours.SelectedItem");
	} else {
		_this173.h["class"] = "haxe.ui.backend.html5.native.behaviours.SelectedItem";
	}
	var _this174 = s247.values;
	if(__map_reserved["id"] != null) {
		_this174.setReserved("id","selectedItem");
	} else {
		_this174.h["id"] = "selectedItem";
	}
	var s248 = s112.addSection("behaviour");
	var _this175 = s248.values;
	if(__map_reserved["class"] != null) {
		_this175.setReserved("class","haxe.ui.backend.html5.native.behaviours.ElementDisabled");
	} else {
		_this175.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
	}
	var _this176 = s248.values;
	if(__map_reserved["id"] != null) {
		_this176.setReserved("id","disabled");
	} else {
		_this176.h["id"] = "disabled";
	}
	var s249 = s112.addSection("size");
	var _this177 = s249.values;
	if(__map_reserved["class"] != null) {
		_this177.setReserved("class","haxe.ui.backend.html5.native.size.ElementSize");
	} else {
		_this177.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
	}
	haxe_ui_Toolkit._built = true;
};
haxe_ui_Toolkit.init = function(options) {
	haxe_ui_Toolkit.build();
	haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit.theme);
	if(options != null) {
		haxe_ui_Toolkit.get_screen().set_options(options);
		haxe_ui_ToolkitAssets.get_instance().options = options;
	}
	haxe_ui_Toolkit.get_screen().registerEvent("keydown",haxe_ui_Toolkit.onKeyDown);
};
haxe_ui_Toolkit.onKeyDown = function(event) {
	if(event.keyCode == 9) {
		if(event.shiftKey == false) {
			haxe_ui_focus_FocusManager.get_instance().focusNext();
		} else {
			haxe_ui_focus_FocusManager.get_instance().focusPrev();
		}
	}
};
haxe_ui_Toolkit.get_assets = function() {
	return haxe_ui_ToolkitAssets.get_instance();
};
haxe_ui_Toolkit.get_screen = function() {
	return haxe_ui_core_Screen.get_instance();
};
haxe_ui_Toolkit.componentFromAsset = function(assetId) {
	var data = haxe_ui_ToolkitAssets.get_instance().getText(assetId);
	return haxe_ui_Toolkit.componentFromString(data,null,new haxe_ui_parsers_ui_resolvers_AssetResourceResolver(assetId));
};
haxe_ui_Toolkit.componentFromString = function(data,type,resourceResolver,callback) {
	if(data == null || data.length == 0) {
		return null;
	}
	if(type == null) {
		if(StringTools.startsWith(StringTools.trim(data),"<")) {
			type = "xml";
		}
	}
	var parser = haxe_ui_parsers_ui_ComponentParser.get(type);
	if(parser == null) {
		haxe_Log.trace("WARNING: type \"" + type + "\" not recognised",{ fileName : "haxe/ui/Toolkit.hx", lineNumber : 96, className : "haxe.ui.Toolkit", methodName : "componentFromString"});
		return null;
	}
	var c = parser.parse(data,resourceResolver);
	var component = haxe_ui_Toolkit.buildComponentFromInfo(c,callback);
	var fullScript = "";
	var _g = 0;
	var _g1 = c.scriptlets;
	while(_g < _g1.length) {
		var scriptString = _g1[_g];
		++_g;
		fullScript += scriptString;
	}
	component.set_script(fullScript);
	return component;
};
haxe_ui_Toolkit.buildComponentFromInfo = function(c,callback) {
	if(c.condition != null && new haxe_ui_scripting_ConditionEvaluator().evaluate(c.condition) == false) {
		return null;
	}
	var className = haxe_ui_core_ComponentClassMap.get(c.type.toLowerCase());
	if(className == null) {
		haxe_Log.trace("WARNING: no class found for component: " + c.type,{ fileName : "haxe/ui/Toolkit.hx", lineNumber : 120, className : "haxe.ui.Toolkit", methodName : "buildComponentFromInfo"});
		return null;
	}
	var component = Type.createInstance($hxClasses[className],[]);
	if(component == null) {
		haxe_Log.trace("WARNING: could not create class instance: " + className,{ fileName : "haxe/ui/Toolkit.hx", lineNumber : 126, className : "haxe.ui.Toolkit", methodName : "buildComponentFromInfo"});
		return null;
	}
	if(c.id != null) {
		component.set_id(c.id);
	}
	if(c.left != null) {
		component.set_left(c.left);
	}
	if(c.top != null) {
		component.set_top(c.top);
	}
	if(c.width != null) {
		component.set_width(c.width);
	}
	if(c.height != null) {
		component.set_height(c.height);
	}
	if(c.percentWidth != null) {
		component.set_percentWidth(c.percentWidth);
	}
	if(c.percentHeight != null) {
		component.set_percentHeight(c.percentHeight);
	}
	if(c.text != null) {
		component.set_text(c.text);
	}
	if(c.styleNames != null) {
		component.set_styleNames(c.styleNames);
	}
	if(c.style != null) {
		component.set_styleString(c.style);
	}
	if((component instanceof haxe_ui_containers_Box)) {
		var box = js_Boot.__cast(component , haxe_ui_containers_Box);
		if(c.layoutName != null) {
			box.set_layoutName(c.layoutName);
		}
	}
	if((component instanceof haxe_ui_containers_ScrollView)) {
		var scrollview = js_Boot.__cast(component , haxe_ui_containers_ScrollView);
		if(c.contentWidth != null) {
			scrollview.set_contentWidth(c.contentWidth);
		}
		if(c.contentHeight != null) {
			scrollview.set_contentHeight(c.contentHeight);
		}
		if(c.percentContentWidth != null) {
			scrollview.set_percentContentWidth(c.percentContentWidth);
		}
		if(c.percentContentHeight != null) {
			scrollview.set_percentContentHeight(c.percentContentHeight);
		}
	}
	var propName = c.properties.keys();
	while(propName.hasNext()) {
		var propName1 = propName.next();
		var _this = c.properties;
		var propValue = __map_reserved[propName1] != null ? _this.getReserved(propName1) : _this.h[propName1];
		if(StringTools.startsWith(propName1,"on")) {
			component.addScriptEvent(propName1,propValue);
		} else {
			if(propValue == "true" || propValue == "yes" || propValue == "false" || propValue == "no") {
				propValue = propValue == "true" || propValue == "yes";
			} else if(Std.parseInt(propValue) != null) {
				propValue = Std.parseInt(propValue);
			}
			Reflect.setProperty(component,propName1,propValue);
		}
	}
	if(js_Boot.__instanceof(component,haxe_ui_core_IDataComponent) && c.data != null) {
		(js_Boot.__cast(component , haxe_ui_core_IDataComponent)).set_dataSource(new haxe_ui_data_DataSourceFactory().fromString(c.get_dataString(),haxe_ui_data_ArrayDataSource));
	}
	var _g = 0;
	var _g1 = c.children;
	while(_g < _g1.length) {
		var childInfo = _g1[_g];
		++_g;
		var childComponent = haxe_ui_Toolkit.buildComponentFromInfo(childInfo,callback);
		if(childComponent != null) {
			component.addComponent(childComponent);
		}
	}
	if(callback != null) {
		callback(component);
	}
	return component;
};
haxe_ui_Toolkit.set_pixelsPerRem = function(value) {
	if(haxe_ui_Toolkit.pixelsPerRem == value) {
		return value;
	}
	haxe_ui_Toolkit.pixelsPerRem = value;
	haxe_ui_core_Screen.get_instance().refreshStyleRootComponents();
	return value;
};
haxe_ui_Toolkit.get_scaleX = function() {
	if(haxe_ui_Toolkit._scaleX == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.autoScaleDPIThreshold) {
				haxe_ui_Toolkit._scaleX = Math.round(dpi / haxe_ui_Toolkit.autoScaleDPIThreshold);
			} else {
				haxe_ui_Toolkit._scaleX = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleX = 1;
		}
	}
	return haxe_ui_Toolkit._scaleX;
};
haxe_ui_Toolkit.set_scaleX = function(value) {
	if(haxe_ui_Toolkit._scaleX == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleX = Math.round(value);
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scaleY = function() {
	if(haxe_ui_Toolkit._scaleY == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.autoScaleDPIThreshold) {
				haxe_ui_Toolkit._scaleY = Math.round(dpi / haxe_ui_Toolkit.autoScaleDPIThreshold);
			} else {
				haxe_ui_Toolkit._scaleY = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleY = 1;
		}
	}
	return haxe_ui_Toolkit._scaleY;
};
haxe_ui_Toolkit.set_scaleY = function(value) {
	if(haxe_ui_Toolkit._scaleY == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleY = Math.round(value);
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scale = function() {
	return Math.max(haxe_ui_Toolkit.get_scaleX(),haxe_ui_Toolkit.get_scaleY());
};
haxe_ui_Toolkit.set_scale = function(value) {
	haxe_ui_Toolkit.set_scaleX(value);
	haxe_ui_Toolkit.set_scaleY(value);
	return value;
};
haxe_ui_Toolkit.callLater = function(fn) {
	new haxe_ui_CallLater(fn);
};
var haxe_ui_backend_AssetsBase = function() {
};
$hxClasses["haxe.ui.backend.AssetsBase"] = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsBase.__name__ = ["haxe","ui","backend","AssetsBase"];
haxe_ui_backend_AssetsBase.prototype = {
	getTextDelegate: function(resourceId) {
		return null;
	}
	,getImageInternal: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes != null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e1) {
			callback(null);
		};
		image.src = resourceId;
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		var image = window.document.createElement("img");
		var bytes = haxe_Resource.getBytes(resourceId);
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(resourceId,imageInfo);
		};
		var base64 = haxe_crypto_Base64.encode(bytes);
		image.src = "data:image/png;base64," + base64;
	}
	,getFontInternal: function(resourceId,callback) {
		haxe_ui_backend_html5_util_FontDetect.onFontLoaded(resourceId,function(f) {
			var fontInfo = { data : f};
			callback(fontInfo);
		},function(f1) {
			callback(null);
		});
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,__class__: haxe_ui_backend_AssetsBase
};
var haxe_ui_ToolkitAssets = function() {
	this.options = null;
	this.preloadList = [];
	haxe_ui_backend_AssetsBase.call(this);
};
$hxClasses["haxe.ui.ToolkitAssets"] = haxe_ui_ToolkitAssets;
haxe_ui_ToolkitAssets.__name__ = ["haxe","ui","ToolkitAssets"];
haxe_ui_ToolkitAssets.__properties__ = {get_instance:"get_instance"};
haxe_ui_ToolkitAssets.get_instance = function() {
	if(haxe_ui_ToolkitAssets._instance == null) {
		haxe_ui_ToolkitAssets._instance = new haxe_ui_ToolkitAssets();
	}
	return haxe_ui_ToolkitAssets._instance;
};
haxe_ui_ToolkitAssets.__super__ = haxe_ui_backend_AssetsBase;
haxe_ui_ToolkitAssets.prototype = $extend(haxe_ui_backend_AssetsBase.prototype,{
	getFont: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		var tmp;
		if(this._fontCache != null) {
			var _this = this._fontCache;
			tmp = (__map_reserved[resourceId] != null ? _this.getReserved(resourceId) : _this.h[resourceId]) != null;
		} else {
			tmp = false;
		}
		if(tmp && useCache == true) {
			var _this1 = this._fontCache;
			var tmp1 = __map_reserved[resourceId] != null ? _this1.getReserved(resourceId) : _this1.h[resourceId];
			callback(tmp1);
		} else {
			if(this._fontCallbacks == null) {
				this._fontCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._fontCallbacks.add(resourceId,callback);
			if(this._fontCallbacks.count(resourceId) == 1) {
				this.getFontInternal(resourceId,function(font) {
					if(font != null) {
						_gthis._onFontLoaded(resourceId,font);
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getFontFromHaxeResource(resourceId,$bind(_gthis,_gthis._onFontLoaded));
					} else {
						_gthis._fontCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onFontLoaded: function(resourceId,font) {
		if(this._fontCache == null) {
			this._fontCache = new haxe_ds_StringMap();
		}
		var _this = this._fontCache;
		if(__map_reserved[resourceId] != null) {
			_this.setReserved(resourceId,font);
		} else {
			_this.h[resourceId] = font;
		}
		this._fontCallbacks.invokeAndRemove(resourceId,font);
	}
	,getImage: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		var orginalResourceId = resourceId;
		resourceId = this.runPlugins(resourceId);
		var tmp;
		if(this._imageCache != null) {
			var _this = this._imageCache;
			tmp = (__map_reserved[resourceId] != null ? _this.getReserved(resourceId) : _this.h[resourceId]) != null;
		} else {
			tmp = false;
		}
		if(tmp && useCache == true) {
			var _this1 = this._imageCache;
			var tmp1 = __map_reserved[resourceId] != null ? _this1.getReserved(resourceId) : _this1.h[resourceId];
			callback(tmp1);
		} else {
			if(this._imageCallbacks == null) {
				this._imageCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._imageCallbacks.add(resourceId,callback);
			if(this._imageCallbacks.count(resourceId) == 1) {
				this.getImageInternal(resourceId,function(imageInfo) {
					if(imageInfo != null) {
						_gthis._onImageLoaded(resourceId,imageInfo);
					} else if(haxe_Resource.listNames().indexOf(orginalResourceId) != -1) {
						_gthis._imageCallbacks.remove(resourceId,callback);
						_gthis._imageCallbacks.add(orginalResourceId,callback);
						_gthis.getImageFromHaxeResource(orginalResourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getImageFromHaxeResource(resourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else {
						_gthis._imageCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onImageLoaded: function(resourceId,imageInfo) {
		if(imageInfo != null && (imageInfo.width == -1 || imageInfo.width == -1)) {
			haxe_Log.trace("WARNING: imageData.originalWidth == -1 || imageData.originalHeight == -1",{ fileName : "haxe/ui/ToolkitAssets.hx", lineNumber : 106, className : "haxe.ui.ToolkitAssets", methodName : "_onImageLoaded"});
		}
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		var _this = this._imageCache;
		if(__map_reserved[resourceId] != null) {
			_this.setReserved(resourceId,imageInfo);
		} else {
			_this.h[resourceId] = imageInfo;
		}
		this._imageCallbacks.invokeAndRemove(resourceId,imageInfo);
	}
	,getText: function(resourceId) {
		var s = this.getTextDelegate(resourceId);
		if(s == null) {
			s = haxe_Resource.getString(resourceId);
		}
		return s;
	}
	,getBytes: function(resourceId) {
		return null;
	}
	,addPlugin: function(plugin) {
		if(this._plugins == null) {
			this._plugins = [];
		}
		this._plugins.push(plugin);
	}
	,runPlugins: function(asset) {
		if(this._plugins == null) {
			return asset;
		}
		var _g = 0;
		var _g1 = this._plugins;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			asset = p.invoke(asset);
		}
		return asset;
	}
	,__class__: haxe_ui_ToolkitAssets
});
var haxe_ui_animation_Animation = function() {
	this.vars = new haxe_ds_StringMap();
	this._stopped = false;
	this._loop = false;
	this.looping = false;
	this._currentFrameIndex = 0;
	this._currentTime = 0;
	this.easing = null;
	this.componentMap = new haxe_ds_StringMap();
	this.keyFrames = [];
};
$hxClasses["haxe.ui.animation.Animation"] = haxe_ui_animation_Animation;
haxe_ui_animation_Animation.__name__ = ["haxe","ui","animation","Animation"];
haxe_ui_animation_Animation.easingFromString = function(s) {
	return null;
};
haxe_ui_animation_Animation.prototype = {
	set_easingString: function(value) {
		this.easing = haxe_ui_animation_Animation.easingFromString(value);
		return value;
	}
	,addKeyFrame: function(time) {
		var keyFrame = new haxe_ui_animation_AnimationKeyFrame(time);
		keyFrame.animation = this;
		this.keyFrames.push(keyFrame);
		return keyFrame;
	}
	,setComponent: function(id,component) {
		var _this = this.componentMap;
		if(__map_reserved[id] != null) {
			_this.setReserved(id,component);
		} else {
			_this.h[id] = component;
		}
	}
	,getComponent: function(id) {
		var _this = this.componentMap;
		if(__map_reserved[id] != null) {
			return _this.getReserved(id);
		} else {
			return _this.h[id];
		}
	}
	,start: function(complete) {
		this._complete = complete;
		this._stopped = false;
		this._currentTime = 0;
		this._currentFrameIndex = 0;
		this._currentKeyFrame = null;
		this.runFrame(this._currentFrameIndex);
	}
	,runFrame: function(index) {
		var _gthis = this;
		var f = this.keyFrames[index];
		this._currentKeyFrame = f;
		var duration = f.time - this._currentTime;
		f.run(duration,function() {
			_gthis._currentTime = f.time;
			_gthis.nextFrame();
		});
	}
	,nextFrame: function() {
		this._currentFrameIndex++;
		if(this._stopped == true) {
			this.complete();
			return;
		}
		if(this._currentFrameIndex >= this.keyFrames.length) {
			this.complete();
		} else {
			this.runFrame(this._currentFrameIndex);
		}
	}
	,complete: function() {
		if(this._loop == true) {
			this.start();
		} else if(this._complete != null) {
			this._complete();
		}
	}
	,loop: function(complete) {
		this._loop = true;
		this.looping = true;
		this.start(complete);
	}
	,stop: function() {
		if(this._currentKeyFrame != null) {
			this._currentKeyFrame.stop();
		}
		this._stopped = true;
		this._loop = false;
	}
	,fromXML: function(xml) {
		this.id = xml.get("id");
		this.easing = haxe_ui_animation_Animation.easingFromString(xml.get("ease"));
		var keyFrameNode = xml.elementsNamed("keyframe");
		while(keyFrameNode.hasNext()) {
			var keyFrameNode1 = keyFrameNode.next();
			var kf = this.addKeyFrame(Std.parseInt(keyFrameNode1.get("time")));
			var refNode = keyFrameNode1.elements();
			while(refNode.hasNext()) {
				var refNode1 = refNode.next();
				if(refNode1.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + refNode1.nodeType);
				}
				var r = kf.addComponentRef(refNode1.nodeName);
				var attrName = refNode1.attributes();
				while(attrName.hasNext()) {
					var attrName1 = attrName.next();
					var attrValue = refNode1.get(attrName1);
					if(StringTools.startsWith(attrValue,"{") && StringTools.endsWith(attrValue,"}")) {
						attrValue = attrValue.substring(1,attrValue.length - 1);
						r.addVar(attrName1,attrValue);
					} else {
						r.addProperty(attrName1,parseFloat(attrValue));
					}
				}
			}
		}
	}
	,setVar: function(name,value) {
		var _this = this.vars;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,clone: function() {
		var c = new haxe_ui_animation_Animation();
		c.id = this.id;
		c.set_easingString(this.easingString);
		c.easing = this.easing;
		var _g = 0;
		var _g1 = this.keyFrames;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var cf = f.clone();
			cf.animation = c;
			c.keyFrames.push(cf);
		}
		return c;
	}
	,__class__: haxe_ui_animation_Animation
	,__properties__: {set_easingString:"set_easingString"}
};
var haxe_ui_animation_AnimationComponentRef = function(id) {
	this.vars = new haxe_ds_StringMap();
	this.properties = new haxe_ds_StringMap();
	this.id = id;
};
$hxClasses["haxe.ui.animation.AnimationComponentRef"] = haxe_ui_animation_AnimationComponentRef;
haxe_ui_animation_AnimationComponentRef.__name__ = ["haxe","ui","animation","AnimationComponentRef"];
haxe_ui_animation_AnimationComponentRef.prototype = {
	addProperty: function(name,value) {
		var _this = this.properties;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,addVar: function(name,value) {
		var _this = this.vars;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,clone: function() {
		var c = new haxe_ui_animation_AnimationComponentRef(this.id);
		var k = this.properties.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var this1 = c.properties;
			var _this = this.properties;
			var value = __map_reserved[k1] != null ? _this.getReserved(k1) : _this.h[k1];
			var _this1 = this1;
			if(__map_reserved[k1] != null) {
				_this1.setReserved(k1,value);
			} else {
				_this1.h[k1] = value;
			}
		}
		var k2 = this.vars.keys();
		while(k2.hasNext()) {
			var k3 = k2.next();
			var this11 = c.vars;
			var _this2 = this.vars;
			var value1 = __map_reserved[k3] != null ? _this2.getReserved(k3) : _this2.h[k3];
			var _this3 = this11;
			if(__map_reserved[k3] != null) {
				_this3.setReserved(k3,value1);
			} else {
				_this3.h[k3] = value1;
			}
		}
		return c;
	}
	,__class__: haxe_ui_animation_AnimationComponentRef
};
var haxe_ui_animation_AnimationKeyFrame = function(time) {
	this._count = 0;
	this.componentRefs = [];
	this.time = time;
};
$hxClasses["haxe.ui.animation.AnimationKeyFrame"] = haxe_ui_animation_AnimationKeyFrame;
haxe_ui_animation_AnimationKeyFrame.__name__ = ["haxe","ui","animation","AnimationKeyFrame"];
haxe_ui_animation_AnimationKeyFrame.prototype = {
	addComponentRef: function(id) {
		var componentRef = new haxe_ui_animation_AnimationComponentRef(id);
		componentRef.keyFrame = this;
		this.componentRefs.push(componentRef);
		return componentRef;
	}
	,run: function(duration,complete) {
		this._completeCallback = complete;
		this._count = this.componentRefs.length;
		var _g = 0;
		var _g1 = this.componentRefs;
		while(_g < _g1.length) {
			var ref = _g1[_g];
			++_g;
			if(this.animation.getComponent(ref.id) == null) {
				this._count--;
			}
		}
		var _g2 = 0;
		var _g11 = this.componentRefs;
		while(_g2 < _g11.length) {
			var ref1 = _g11[_g2];
			++_g2;
			var actualComponent = this.animation.getComponent(ref1.id);
			if(actualComponent != null) {
				var props = { };
				var k = ref1.properties.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					var _this = ref1.properties;
					props[k1] = __map_reserved[k1] != null ? _this.getReserved(k1) : _this.h[k1];
				}
				var k2 = ref1.vars.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					var _this1 = ref1.vars;
					var v = __map_reserved[k3] != null ? _this1.getReserved(k3) : _this1.h[k3];
					var _this2 = this.animation.vars;
					if(__map_reserved[v] != null ? _this2.existsReserved(v) : _this2.h.hasOwnProperty(v)) {
						var _this3 = this.animation.vars;
						props[k3] = __map_reserved[v] != null ? _this3.getReserved(v) : _this3.h[v];
					}
				}
				this.onComplete();
			}
		}
	}
	,stop: function() {
	}
	,onComplete: function() {
		this._count--;
		if(this._count == 0) {
			this._completeCallback();
		}
	}
	,clone: function() {
		var c = new haxe_ui_animation_AnimationKeyFrame(this.time);
		c.animation = this.animation;
		var _g = 0;
		var _g1 = this.componentRefs;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			var cr = r.clone();
			cr.keyFrame = c;
			c.componentRefs.push(cr);
		}
		return c;
	}
	,__class__: haxe_ui_animation_AnimationKeyFrame
};
var haxe_ui_animation_AnimationManager = function() {
	this._animations = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.animation.AnimationManager"] = haxe_ui_animation_AnimationManager;
haxe_ui_animation_AnimationManager.__name__ = ["haxe","ui","animation","AnimationManager"];
haxe_ui_animation_AnimationManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_animation_AnimationManager.get_instance = function() {
	if(haxe_ui_animation_AnimationManager._instance == null) {
		haxe_ui_animation_AnimationManager._instance = new haxe_ui_animation_AnimationManager();
	}
	return haxe_ui_animation_AnimationManager._instance;
};
haxe_ui_animation_AnimationManager.prototype = {
	registerAnimation: function(id,animation) {
		var _this = this._animations;
		if(__map_reserved[id] != null) {
			_this.setReserved(id,animation);
		} else {
			_this.h[id] = animation;
		}
	}
	,run: function(id,components,vars,complete) {
		var a = this.initAnimation(id,components,vars);
		if(a != null) {
			a.start(function() {
				if(complete != null) {
					complete();
				}
			});
		}
		return a;
	}
	,loop: function(id,components,vars,complete) {
		var a = this.initAnimation(id,components,vars);
		if(a != null) {
			a.loop(function() {
				if(complete != null) {
					complete();
				}
			});
		}
		return a;
	}
	,initAnimation: function(id,components,vars) {
		var a = this.get(id);
		if(a != null) {
			if(components != null) {
				var k = components.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					a.setComponent(k1,__map_reserved[k1] != null ? components.getReserved(k1) : components.h[k1]);
				}
			}
			if(vars != null) {
				var k2 = vars.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					a.setVar(k3,__map_reserved[k3] != null ? vars.getReserved(k3) : vars.h[k3]);
				}
			}
		}
		return a;
	}
	,get: function(id) {
		var _this = this._animations;
		var a = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(a == null) {
			return null;
		}
		return a.clone();
	}
	,__class__: haxe_ui_animation_AnimationManager
};
var haxe_ui_assets_AssetPlugin = function() {
};
$hxClasses["haxe.ui.assets.AssetPlugin"] = haxe_ui_assets_AssetPlugin;
haxe_ui_assets_AssetPlugin.__name__ = ["haxe","ui","assets","AssetPlugin"];
haxe_ui_assets_AssetPlugin.prototype = {
	invoke: function(asset) {
		return asset;
	}
	,setProperty: function(name,value) {
		if(this._props == null) {
			this._props = new haxe_ds_StringMap();
		}
		var _this = this._props;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,getProperty: function(name,defaultValue) {
		if(this._props == null) {
			return defaultValue;
		}
		var _this = this._props;
		var v = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(v == null) {
			v = defaultValue;
		}
		return v;
	}
	,__class__: haxe_ui_assets_AssetPlugin
};
var haxe_ui_backend_EventBase = function() {
};
$hxClasses["haxe.ui.backend.EventBase"] = haxe_ui_backend_EventBase;
haxe_ui_backend_EventBase.__name__ = ["haxe","ui","backend","EventBase"];
haxe_ui_backend_EventBase.prototype = {
	cancel: function() {
		if(this._originalEvent != null) {
			this._originalEvent.preventDefault();
			this._originalEvent.stopImmediatePropagation();
			this._originalEvent.stopPropagation();
		}
	}
	,postClone: function(event) {
		event._originalEvent = this._originalEvent;
	}
	,__class__: haxe_ui_backend_EventBase
};
var haxe_ui_backend_ImageDisplayBase = function() {
	this._imageHeight = 0;
	this._imageWidth = 0;
	this._top = 0;
	this._left = 0;
	this.aspectRatio = 1;
	this.element = window.document.createElement("img");
	this.element.style.position = "absolute";
	this.element.style.setProperty("pointer-events","none");
};
$hxClasses["haxe.ui.backend.ImageDisplayBase"] = haxe_ui_backend_ImageDisplayBase;
haxe_ui_backend_ImageDisplayBase.__name__ = ["haxe","ui","backend","ImageDisplayBase"];
haxe_ui_backend_ImageDisplayBase.prototype = {
	dispose: function() {
		if(this.element != null) {
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
		}
	}
	,validateData: function() {
		if(this.element.src != this._imageInfo.data.src) {
			this.element.src = this._imageInfo.data.src;
		}
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,validateDisplay: function() {
		var style = this.element.style;
		style.width = "" + this._imageWidth + "px";
		style.height = "" + this._imageHeight + "px";
		if(this._imageClipRect != null) {
			var clipValue = "rect(" + ("" + (-this._top + this._imageClipRect.top) + "px") + "," + ("" + (-this._left + this._imageClipRect.left + this._imageClipRect.width) + "px") + "," + ("" + (-this._top + this._imageClipRect.top + this._imageClipRect.height) + "px") + "," + ("" + (-this._left + this._imageClipRect.left) + "px") + ")";
			if(this.element.style.clip != clipValue) {
				this.element.style.clip = clipValue;
			}
		} else if(this.element.style.clip != null) {
			this.element.style.removeProperty("clip");
		}
	}
	,__class__: haxe_ui_backend_ImageDisplayBase
};
var haxe_ui_backend_PlatformBase = function() { };
$hxClasses["haxe.ui.backend.PlatformBase"] = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformBase.__name__ = ["haxe","ui","backend","PlatformBase"];
haxe_ui_backend_PlatformBase.calcScrollSize = function() {
	if(haxe_ui_backend_PlatformBase._vscrollWidth >= 0 && haxe_ui_backend_PlatformBase._hscrollHeight >= 0) {
		return;
	}
	var div = window.document.createElement("div");
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	div.style.height = "100px";
	div.style.width = "100px";
	div.style.overflow = "scroll";
	window.document.body.appendChild(div);
	haxe_ui_backend_PlatformBase._vscrollWidth = div.offsetWidth - div.clientWidth;
	haxe_ui_backend_PlatformBase._hscrollHeight = div.offsetHeight - div.clientHeight;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
};
haxe_ui_backend_PlatformBase.prototype = {
	getMetric: function(id) {
		switch(id) {
		case "patform.metrics.hscroll.height":
			haxe_ui_backend_PlatformBase.calcScrollSize();
			return haxe_ui_backend_PlatformBase._hscrollHeight;
		case "patform.metrics.vscroll.width":
			haxe_ui_backend_PlatformBase.calcScrollSize();
			return haxe_ui_backend_PlatformBase._vscrollWidth;
		}
		return 0;
	}
	,__class__: haxe_ui_backend_PlatformBase
};
var haxe_ui_backend_ScreenBase = function() {
	this._hasListener = false;
	this.__topLevelComponents = [];
	this._mapping = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.backend.ScreenBase"] = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenBase.__name__ = ["haxe","ui","backend","ScreenBase"];
haxe_ui_backend_ScreenBase.prototype = {
	get_options: function() {
		return this._options;
	}
	,set_options: function(value) {
		this._options = value;
		return value;
	}
	,get_width: function() {
		return this.get_container().offsetWidth;
	}
	,get_height: function() {
		return this.get_container().offsetHeight;
	}
	,get_dpi: function() {
		return haxe_ui_backend_html5_HtmlUtils.get_dpi();
	}
	,get_title: function() {
		return window.document.title;
	}
	,set_title: function(s) {
		window.document.title = s;
		return s;
	}
	,addComponent: function(component) {
		this.get_container().appendChild(component.element);
		component.ready();
		if(haxe_ui_Toolkit.get_scaleX() != 1 || haxe_ui_Toolkit.get_scaleY() != 1) {
			var transformString = "";
			if(haxe_ui_Toolkit.get_scaleX() != 1) {
				transformString += "scaleX(" + haxe_ui_Toolkit.get_scaleX() + ") ";
			}
			if(haxe_ui_Toolkit.get_scaleY() != 1) {
				transformString += "scaleY(" + haxe_ui_Toolkit.get_scaleY() + ") ";
			}
			component.element.style.transform = transformString;
			component.element.style.transformOrigin = "top left";
		}
		this.__topLevelComponents.push(component);
		this.addResizeListener();
		this.resizeComponent(component);
	}
	,removeComponent: function(component) {
		HxOverrides.remove(this.__topLevelComponents,component);
		this.get_container().removeChild(component.element);
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents.length - 1) {
			this.get_container().appendChild(child.element);
		} else {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents[index + 1].element,child.element);
		}
	}
	,resizeComponent: function(c) {
		if(c.get_percentWidth() > 0) {
			c.set_width(this.get_width() * c.get_percentWidth() / 100);
		}
		if(c.get_percentHeight() > 0) {
			c.set_height(this.get_height() * c.get_percentHeight() / 100);
		}
	}
	,get_container: function() {
		var c = null;
		if(this.get_options() == null || this.get_options().container == null) {
			c = window.document.body;
		} else {
			c = this.get_options().container;
		}
		if(c.style.overflow == null || c.style.overflow == "") {
			c.style.overflow = "hidden";
		}
		return c;
	}
	,addResizeListener: function() {
		var _gthis = this;
		if(this._hasListener == true) {
			return;
		}
		this._hasListener = true;
		window.onresize = function(e) {
			var _g = 0;
			var _g1 = _gthis.__topLevelComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				_gthis.resizeComponent(c);
			}
		};
	}
	,messageDialog: function(message,title,options,callback) {
		return null;
	}
	,showDialog: function(content,options,callback) {
		return null;
	}
	,hideDialog: function(dialog) {
		return false;
	}
	,supportsEvent: function(type) {
		var _this = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
		return (__map_reserved[type] != null ? _this.getReserved(type) : _this.h[type]) != null;
	}
	,mapEvent: function(type,listener) {
		var _gthis = this;
		switch(type) {
		case "click":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			var tmp;
			if(type == "mousemove") {
				var _this = this._mapping;
				tmp = (__map_reserved[type] != null ? _this.existsReserved(type) : _this.h.hasOwnProperty(type)) == false;
			} else {
				tmp = false;
			}
			if(tmp && haxe_ui_backend_html5_UserAgent.get_instance().get_chrome() == true) {
				var fn = null;
				fn = function(e) {
					var fn1 = _gthis.get_container();
					var _this1 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
					fn1.removeEventListener(__map_reserved["mousemove"] != null ? _this1.getReserved("mousemove") : _this1.h["mousemove"],fn);
					var _this2 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
					if((__map_reserved[type] != null ? _this2.getReserved(type) : _this2.h[type]) != null) {
						var fn2 = _gthis.get_container();
						var _this3 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
						fn2.removeEventListener(__map_reserved[type] != null ? _this3.getReserved(type) : _this3.h[type],fn);
					}
					var _this4 = _gthis._mapping;
					if((__map_reserved[type] != null ? _this4.existsReserved(type) : _this4.h.hasOwnProperty(type)) == false) {
						var _this5 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
						if((__map_reserved[type] != null ? _this5.getReserved(type) : _this5.h[type]) != null) {
							var fn3 = _gthis.get_container();
							var _this6 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
							fn3.addEventListener(__map_reserved[type] != null ? _this6.getReserved(type) : _this6.h[type],$bind(_gthis,_gthis.__onMouseEvent));
						}
						var _this7 = _gthis._mapping;
						if(__map_reserved[type] != null) {
							_this7.setReserved(type,listener);
						} else {
							_this7.h[type] = listener;
						}
						var fn4 = _gthis.get_container();
						var _this8 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
						fn4.addEventListener(__map_reserved["mousemove"] != null ? _this8.getReserved("mousemove") : _this8.h["mousemove"],$bind(_gthis,_gthis.__onMouseEvent));
					}
				};
				var tmp1 = this.get_container();
				var _this9 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				tmp1.addEventListener(__map_reserved["mousemove"] != null ? _this9.getReserved("mousemove") : _this9.h["mousemove"],fn);
				var _this10 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
				if((__map_reserved[type] != null ? _this10.getReserved(type) : _this10.h[type]) != null) {
					var tmp2 = this.get_container();
					var _this11 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
					tmp2.addEventListener(__map_reserved[type] != null ? _this11.getReserved(type) : _this11.h[type],fn);
				}
				return;
			}
			var _this12 = this._mapping;
			if((__map_reserved[type] != null ? _this12.existsReserved(type) : _this12.h.hasOwnProperty(type)) == false) {
				var _this13 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
				if((__map_reserved[type] != null ? _this13.getReserved(type) : _this13.h[type]) != null) {
					var tmp3 = this.get_container();
					var _this14 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
					tmp3.addEventListener(__map_reserved[type] != null ? _this14.getReserved(type) : _this14.h[type],$bind(this,this.__onMouseEvent));
				}
				var _this15 = this._mapping;
				if(__map_reserved[type] != null) {
					_this15.setReserved(type,listener);
				} else {
					_this15.h[type] = listener;
				}
				var tmp4 = this.get_container();
				var _this16 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				tmp4.addEventListener(__map_reserved[type] != null ? _this16.getReserved(type) : _this16.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			var _this17 = this._mapping;
			if((__map_reserved[type] != null ? _this17.existsReserved(type) : _this17.h.hasOwnProperty(type)) == false) {
				var _this18 = this._mapping;
				if(__map_reserved[type] != null) {
					_this18.setReserved(type,listener);
				} else {
					_this18.h[type] = listener;
				}
				var tmp5 = this.get_container();
				var _this19 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
				tmp5.addEventListener(__map_reserved[type] != null ? _this19.getReserved(type) : _this19.h[type],$bind(this,this.__onKeyEvent));
			}
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		switch(type) {
		case "click":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			this._mapping.remove(type);
			var tmp = this.get_container();
			var _this = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
			tmp.removeEventListener(__map_reserved[type] != null ? _this.getReserved(type) : _this.h[type],$bind(this,this.__onMouseEvent));
			var _this1 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
			if((__map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type]) != null) {
				var tmp1 = this.get_container();
				var _this2 = haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH;
				tmp1.removeEventListener(__map_reserved[type] != null ? _this2.getReserved(type) : _this2.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			this._mapping.remove(type);
			var tmp2 = this.get_container();
			var _this3 = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM;
			tmp2.removeEventListener(__map_reserved[type] != null ? _this3.getReserved(type) : _this3.h[type],$bind(this,this.__onKeyEvent));
			break;
		}
	}
	,__onMouseEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(type != null) {
			var _this1 = this._mapping;
			var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_core_MouseEvent(type);
				mouseEvent._originalEvent = event;
				var touchEvent = false;
				try {
					touchEvent = (event instanceof TouchEvent);
				} catch( e ) {
					haxe_CallStack.lastException = e;
					var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
				}
				if(touchEvent == true) {
					var te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = te.changedTouches[0].pageX / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = te.changedTouches[0].pageY / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if((event instanceof MouseEvent)) {
					var me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = me.pageX / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = me.pageY / haxe_ui_Toolkit.get_scaleY();
				}
				fn(mouseEvent);
			}
		}
	}
	,__onKeyEvent: function(event) {
		var key = event.type;
		var _this = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI;
		var type = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(type != null) {
			var _this1 = this._mapping;
			var fn = __map_reserved[type] != null ? _this1.getReserved(type) : _this1.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_core_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				keyboardEvent.keyCode = event.keyCode;
				keyboardEvent.shiftKey = event.shiftKey;
				fn(keyboardEvent);
			}
		}
	}
	,__class__: haxe_ui_backend_ScreenBase
	,__properties__: {get_container:"get_container",set_title:"set_title",get_title:"get_title",get_dpi:"get_dpi",get_height:"get_height",get_width:"get_width",set_options:"set_options",get_options:"get_options"}
};
var haxe_ui_backend_TextDisplayBase = function() {
	this._textHeight = 0;
	this._textWidth = 0;
	this._height = -1;
	this._width = -1;
	this._top = 0;
	this._left = 0;
	this._displayData = new haxe_ui_core_TextDisplayData();
	this._displayData.multiline = false;
	this.element = this.createElement();
};
$hxClasses["haxe.ui.backend.TextDisplayBase"] = haxe_ui_backend_TextDisplayBase;
haxe_ui_backend_TextDisplayBase.__name__ = ["haxe","ui","backend","TextDisplayBase"];
haxe_ui_backend_TextDisplayBase.prototype = {
	validateData: function() {
		var html = this.normalizeText(this._text);
		this.element.innerHTML = html;
	}
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.wordWrap == true && this.element.style.whiteSpace != null) {
			this.element.style.whiteSpace = "normal";
			measureTextRequired = true;
		} else if(this._displayData.wordWrap == false && this.element.style.whiteSpace != "nowrap") {
			this.element.style.whiteSpace = "nowrap";
			measureTextRequired = true;
		}
		if(this._textStyle != null) {
			if(this.element.style.textAlign != this._textStyle.textAlign) {
				this.element.style.textAlign = this._textStyle.textAlign;
			}
			var fontSizeValue = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._textStyle.fontSize) + "px";
			if(this.element.style.fontSize != fontSizeValue) {
				this.element.style.fontSize = fontSizeValue;
				measureTextRequired = true;
			}
			var colorValue = haxe_ui_backend_html5_HtmlUtils.color(this._textStyle.color);
			if(this.element.style.color != colorValue) {
				this.element.style.color = colorValue;
			}
			if(this._fontInfo != null && this._fontInfo.data != this._rawFontName) {
				this.element.style.fontFamily = this._fontInfo.data;
				this._rawFontName = this._fontInfo.data;
				measureTextRequired = true;
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
		}
		return measureTextRequired;
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,validateDisplay: function() {
		var style = this.element.style;
		if(this._width > 0) {
			style.width = "" + this._width + "px";
		}
		if(this._height > 0) {
			style.height = "" + this._height + "px";
		}
	}
	,measureText: function() {
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.createDivHelper();
		}
		var div = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER;
		this.setTempDivData(div);
		this._textWidth = div.clientWidth + 2;
		this._textHeight = div.clientHeight;
	}
	,createElement: function() {
		var el = window.document.createElement("div");
		el.style.position = "absolute";
		el.style.cursor = "inherit";
		return el;
	}
	,setTempDivData: function(div) {
		var t = this._text;
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.width = this._width > 0 ? "" + ("" + this._width + "px") : "";
		div.innerHTML = this.normalizeText(t);
	}
	,normalizeText: function(text) {
		var html = haxe_ui_backend_html5_HtmlUtils.escape(text);
		html = StringTools.replace(html,"\\n","\n");
		html = StringTools.replace(html,"\r\n","<br/>");
		html = StringTools.replace(html,"\r","<br/>");
		html = StringTools.replace(html,"\n","<br/>");
		return html;
	}
	,__class__: haxe_ui_backend_TextDisplayBase
};
var haxe_ui_backend_TextInputBase = function() {
	this._inputData = new haxe_ui_core_TextInputData();
	haxe_ui_backend_TextDisplayBase.call(this);
};
$hxClasses["haxe.ui.backend.TextInputBase"] = haxe_ui_backend_TextInputBase;
haxe_ui_backend_TextInputBase.__name__ = ["haxe","ui","backend","TextInputBase"];
haxe_ui_backend_TextInputBase.__super__ = haxe_ui_backend_TextDisplayBase;
haxe_ui_backend_TextInputBase.prototype = $extend(haxe_ui_backend_TextDisplayBase.prototype,{
	onKeyUp: function(e) {
		if((this.parentComponent instanceof haxe_ui_components_TextArea)) {
			this._text = (js_Boot.__cast(this.element , HTMLTextAreaElement)).value;
		} else {
			this._text = (js_Boot.__cast(this.element , HTMLInputElement)).value;
		}
	}
	,onScroll: function(e) {
		this._inputData.hscrollPos = this.element.scrollLeft;
		this._inputData.vscrollPos = this.element.scrollTop;
		if(this._inputData.onScrollCallback != null) {
			this._inputData.onScrollCallback();
		}
	}
	,validateData: function() {
		if(this._text != null) {
			var html = this.normalizeText(this._text);
			if((this.element instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).value = html;
			} else if((this.element instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).value = html;
			}
		}
		var hscrollValue = this._inputData.hscrollPos | 0;
		if(this.element.scrollLeft != hscrollValue) {
			this.element.scrollLeft = hscrollValue;
		}
		var vscrollValue = this._inputData.vscrollPos | 0;
		if(this.element.scrollTop != vscrollValue) {
			this.element.scrollTop = vscrollValue;
		}
	}
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.multiline == false && (this.element instanceof HTMLInputElement) == false || this._displayData.multiline == true && (this.element instanceof HTMLTextAreaElement) == false) {
			var newElement = this.createElement();
			this.element.parentElement.appendChild(newElement);
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
			this.element.removeEventListener("keyup",$bind(this,this.onKeyUp));
			this.element = newElement;
			this.validateData();
			measureTextRequired = true;
		}
		if((this.element instanceof HTMLInputElement)) {
			var inputElement = this.element;
			if(this._inputData.password == true && inputElement.type != "password") {
				inputElement.type = "password";
			} else if(this._inputData.password == false && inputElement.type != "") {
				inputElement.type = "";
			}
		}
		if(!haxe_ui_backend_TextDisplayBase.prototype.validateStyle.call(this)) {
			return measureTextRequired;
		} else {
			return true;
		}
	}
	,measureText: function() {
		if((this.element instanceof HTMLTextAreaElement)) {
			this._textWidth = (js_Boot.__cast(this.element , HTMLTextAreaElement)).scrollWidth;
			this._textHeight = (js_Boot.__cast(this.element , HTMLTextAreaElement)).scrollHeight;
		} else {
			haxe_ui_backend_TextDisplayBase.prototype.measureText.call(this);
		}
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
	}
	,createElement: function() {
		var el = null;
		if(this._displayData.multiline == false) {
			el = window.document.createElement("input");
			el.style.border = "none";
			el.style.outline = "none";
			el.style.whiteSpace = "nowrap";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
		} else {
			el = window.document.createElement("textarea");
			el.style.border = "none";
			el.style.resize = "none";
			el.style.outline = "none";
			el.style.lineHeight = "1.4";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.whiteSpace = "nowrap";
			el.onkeydown = function(e) {
				if(e.keyCode == 9 || e.which == 9) {
					e.preventDefault();
					e.stopImmediatePropagation();
					e.stopPropagation();
					var ta = js_Boot.__cast(el , HTMLTextAreaElement);
					var s = ta.selectionStart;
					ta.value = ta.value.substring(0,ta.selectionStart) + "\t" + ta.value.substring(ta.selectionEnd);
					ta.selectionEnd = s + 1;
					return false;
				}
				return true;
			};
		}
		el.addEventListener("keyup",$bind(this,this.onKeyUp));
		el.addEventListener("scroll",$bind(this,this.onScroll));
		return el;
	}
	,setTempDivData: function(div) {
		var t = this._text;
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.width = "";
		div.innerHTML = this.normalizeText(t);
	}
	,normalizeText: function(text) {
		return StringTools.replace(text,"\\n","\n");
	}
	,__class__: haxe_ui_backend_TextInputBase
});
var haxe_ui_backend_TimerBase = function(delay,callback) {
	this._timer = new haxe_Timer(delay);
	this._timer.run = function() {
		callback();
	};
};
$hxClasses["haxe.ui.backend.TimerBase"] = haxe_ui_backend_TimerBase;
haxe_ui_backend_TimerBase.__name__ = ["haxe","ui","backend","TimerBase"];
haxe_ui_backend_TimerBase.prototype = {
	stop: function() {
		this._timer.stop();
	}
	,__class__: haxe_ui_backend_TimerBase
};
var haxe_ui_backend_html5_EventMapper = function() { };
$hxClasses["haxe.ui.backend.html5.EventMapper"] = haxe_ui_backend_html5_EventMapper;
haxe_ui_backend_html5_EventMapper.__name__ = ["haxe","ui","backend","html5","EventMapper"];
var haxe_ui_validation_ValidationManager = function() {
	this._displayQueue = [];
	this._queue = [];
	this.isValidating = false;
	this.isPending = false;
};
$hxClasses["haxe.ui.validation.ValidationManager"] = haxe_ui_validation_ValidationManager;
haxe_ui_validation_ValidationManager.__name__ = ["haxe","ui","validation","ValidationManager"];
haxe_ui_validation_ValidationManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_validation_ValidationManager.get_instance = function() {
	if(haxe_ui_validation_ValidationManager.instance == null) {
		haxe_ui_validation_ValidationManager.instance = new haxe_ui_validation_ValidationManager();
	}
	return haxe_ui_validation_ValidationManager.instance;
};
haxe_ui_validation_ValidationManager.prototype = {
	registerEvent: function(type,listener) {
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._events == null) {
			this._events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this._events != null) {
			this._events.invoke(event.type,event);
		}
	}
	,dispose: function() {
		this.isValidating = false;
		this._queue.splice(0,this._queue.length);
	}
	,add: function(object) {
		if(this._queue.indexOf(object) != -1) {
			return;
		}
		var queueLength = this._queue.length;
		if(this.isValidating == true) {
			var depth = object.get_depth();
			var min = 0;
			var max = queueLength;
			var i = 0;
			var otherDepth = 0;
			while(max > min) {
				i = min + max >>> 1;
				otherDepth = this._queue[i].get_depth();
				if(otherDepth == depth) {
					break;
				} else if(otherDepth < depth) {
					max = i;
				} else {
					min = i + 1;
				}
			}
			if(otherDepth >= depth) {
				++i;
			}
			this._queue.splice(i,0,object);
		} else {
			this._queue[queueLength] = object;
			if(this.isPending == false) {
				this.isPending = true;
				haxe_ui_Toolkit.callLater($bind(this,this.process));
			}
		}
	}
	,addDisplay: function(item) {
		if(this._displayQueue.indexOf(item) == -1) {
			this._displayQueue.push(item);
		}
	}
	,process: function() {
		if(this.isValidating == true || this.isPending == false) {
			return;
		}
		var queueLength = this._queue.length;
		if(queueLength == 0) {
			this.isPending = false;
			return;
		}
		this.isValidating = true;
		if(queueLength > 1) {
			this._queue.sort($bind(this,this.queueSortFunction));
		}
		this.dispatch(new haxe_ui_core_ValidationEvent("ValidationStart"));
		while(this._queue.length > 0) {
			var item = this._queue.shift();
			if(item.get_depth() < 0) {
				continue;
			}
			item.validate();
		}
		var _g1 = 0;
		var _g = this._displayQueue.length;
		while(_g1 < _g) {
			var i = _g1++;
			var item1 = this._displayQueue[i];
			item1.updateDisplay();
		}
		this._displayQueue.splice(0,this._displayQueue.length);
		this.isValidating = false;
		this.isPending = false;
		this.dispatch(new haxe_ui_core_ValidationEvent("ValidationStop"));
	}
	,queueSortFunction: function(first,second) {
		var difference = second.get_depth() - first.get_depth();
		if(difference > 0) {
			return 1;
		} else if(difference < 0) {
			return -1;
		} else {
			return 0;
		}
	}
	,__class__: haxe_ui_validation_ValidationManager
};
var haxe_ui_backend_html5_HtmlUtils = function() { };
$hxClasses["haxe.ui.backend.html5.HtmlUtils"] = haxe_ui_backend_html5_HtmlUtils;
haxe_ui_backend_html5_HtmlUtils.__name__ = ["haxe","ui","backend","html5","HtmlUtils"];
haxe_ui_backend_html5_HtmlUtils.__properties__ = {get_dpi:"get_dpi"};
haxe_ui_backend_html5_HtmlUtils.px = function(value) {
	return "" + value + "px";
};
haxe_ui_backend_html5_HtmlUtils.color = function(value) {
	return "#" + StringTools.hex(value,6);
};
haxe_ui_backend_html5_HtmlUtils.rgba = function(value,alpha) {
	if(alpha == null) {
		alpha = 1;
	}
	var r = value >> 16 & 255;
	var g = value >> 8 & 255;
	var b = value & 255;
	return "rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")";
};
haxe_ui_backend_html5_HtmlUtils.escape = function(s) {
	s = StringTools.replace(s,"\"","&quot;");
	s = StringTools.replace(s,"'","&#39;");
	s = StringTools.replace(s,"<","&lt;");
	s = StringTools.replace(s,">","&gt;");
	return s;
};
haxe_ui_backend_html5_HtmlUtils.onValidationStop = function(e) {
	if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER != null) {
		haxe_ui_backend_html5_HtmlUtils.removeElement(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER);
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER = null;
	}
};
haxe_ui_backend_html5_HtmlUtils.createDivHelper = function() {
	if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER = window.document.createElement("div");
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.position = "absolute";
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.top = "-99999px";
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.left = "-99999px";
		window.document.body.appendChild(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER);
	}
};
haxe_ui_backend_html5_HtmlUtils.measureText = function(text,addWidth,addHeight,fontSize,fontName) {
	if(fontSize == null) {
		fontSize = -1;
	}
	if(addHeight == null) {
		addHeight = 0;
	}
	if(addWidth == null) {
		addWidth = 0;
	}
	if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
		haxe_ui_backend_html5_HtmlUtils.createDivHelper();
	}
	haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.innerHTML = text;
	if(fontSize > 0) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontSize = "" + fontSize + "px";
	}
	if(fontName != null) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontFamily = fontName;
	}
	return new haxe_ui_util_Size(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.clientWidth + addWidth,haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.clientHeight + addHeight);
};
haxe_ui_backend_html5_HtmlUtils.get_dpi = function() {
	if(haxe_ui_backend_html5_HtmlUtils._dpi != 0) {
		return haxe_ui_backend_html5_HtmlUtils._dpi;
	}
	var div = window.document.createElement("div");
	div.style.width = "1in";
	div.style.height = "1in";
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	window.document.body.appendChild(div);
	var devicePixelRatio = window.devicePixelRatio;
	if(devicePixelRatio == null) {
		devicePixelRatio = 1;
	}
	haxe_ui_backend_html5_HtmlUtils._dpi = div.offsetWidth * devicePixelRatio;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
	return haxe_ui_backend_html5_HtmlUtils._dpi;
};
haxe_ui_backend_html5_HtmlUtils.swapElements = function(el1,el2) {
	el2.parentElement.insertBefore(el2,el1);
};
haxe_ui_backend_html5_HtmlUtils.insertBefore = function(el,before) {
	before.parentElement.insertBefore(before,el);
};
haxe_ui_backend_html5_HtmlUtils.removeElement = function(el) {
	if(el != null && el.parentElement != null) {
		el.parentElement.removeChild(el);
	}
};
var haxe_ui_backend_html5_StyleHelper = function() { };
$hxClasses["haxe.ui.backend.html5.StyleHelper"] = haxe_ui_backend_html5_StyleHelper;
haxe_ui_backend_html5_StyleHelper.__name__ = ["haxe","ui","backend","html5","StyleHelper"];
haxe_ui_backend_html5_StyleHelper.apply = function(component,width,height,style) {
	var element = component.element;
	var css = element.style;
	css.width = "" + width + "px";
	css.height = "" + height + "px";
	if(style.borderLeftSize != null && style.borderLeftSize == style.borderRightSize && style.borderLeftSize == style.borderBottomSize && style.borderLeftSize == style.borderTopSize) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.gt(style.borderLeftSize,haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0))) {
			var tmp = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.borderLeftSize) + "px";
			css.borderWidth = tmp;
			css.borderStyle = "solid";
		} else {
			css.removeProperty("border-width");
			css.removeProperty("border-style");
		}
	} else if(style.borderLeftSize == null && style.borderRightSize == null && style.borderBottomSize == null && style.borderTopSize == null) {
		css.removeProperty("border-width");
		css.removeProperty("border-style");
	} else {
		if(style.borderTopSize != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(style.borderTopSize,haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0))) {
			var tmp1 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.borderTopSize) + "px";
			css.borderTopWidth = tmp1;
			css.borderTopStyle = "solid";
		} else {
			css.removeProperty("border-top-width");
			css.removeProperty("border-top-style");
		}
		if(style.borderLeftSize != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(style.borderLeftSize,haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0))) {
			var tmp2 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.borderLeftSize) + "px";
			css.borderLeftWidth = tmp2;
			css.borderLeftStyle = "solid";
		} else {
			css.removeProperty("border-left-width");
			css.removeProperty("border-left-style");
		}
		if(style.borderBottomSize != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(style.borderBottomSize,haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0))) {
			var tmp3 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.borderBottomSize) + "px";
			css.borderBottomWidth = tmp3;
			css.borderBottomStyle = "solid";
		} else {
			css.removeProperty("border-bottom-width");
			css.removeProperty("border-bottom-style");
		}
		if(style.borderRightSize != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(style.borderRightSize,haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0))) {
			var tmp4 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.borderRightSize) + "px";
			css.borderRightWidth = tmp4;
			css.borderRightStyle = "solid";
		} else {
			css.removeProperty("border-right-width");
			css.removeProperty("border-right-style");
		}
	}
	if(style.borderLeftColor != null && style.borderLeftColor == style.borderRightColor && style.borderLeftColor == style.borderBottomColor && style.borderLeftColor == style.borderTopColor) {
		css.borderColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
	} else if(style.borderLeftColor == null && style.borderRightColor == null && style.borderBottomColor == null && style.borderTopColor == null) {
		css.removeProperty("border-color");
	} else {
		if(style.borderTopColor != null) {
			css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
		} else {
			css.removeProperty("border-top-color");
		}
		if(style.borderLeftColor != null) {
			css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.removeProperty("border-left-color");
		}
		if(style.borderBottomColor != null) {
			css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
		} else {
			css.removeProperty("border-bottom-color");
		}
		if(style.borderRightColor != null) {
			css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
		} else {
			css.removeProperty("border-right-color");
		}
	}
	if(style.backgroundColor != null) {
		if(style.backgroundColorEnd != null && style.backgroundColorEnd != style.backgroundColor) {
			css.removeProperty("background-color");
			var gradientStyle = style.backgroundGradientStyle;
			if(gradientStyle == null) {
				gradientStyle = "vertical";
			}
			if(style.backgroundOpacity != null) {
				if(gradientStyle == "vertical") {
					var tmp5 = "linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity);
					css.background = tmp5 + ")";
				} else if(gradientStyle == "horizontal") {
					var tmp6 = "linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity);
					css.background = tmp6 + ")";
				}
			} else if(gradientStyle == "vertical") {
				var tmp7 = "linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd);
				css.background = tmp7 + ")";
			} else if(gradientStyle == "horizontal") {
				var tmp8 = "linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd);
				css.background = tmp8 + ")";
			}
		} else {
			css.removeProperty("background");
			if(style.backgroundOpacity != null) {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity);
			} else {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor);
			}
		}
	} else {
		css.removeProperty("background");
		css.removeProperty("background-color");
	}
	if(style.borderRadius != null && haxe_ui_util__$Variant_Variant_$Impl_$.gt(style.borderRadius,haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0))) {
		var tmp9 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.borderRadius) + "px";
		css.borderRadius = tmp9;
	} else {
		css.removeProperty("border-radius");
	}
	if(style.backgroundImage != null) {
		if(component.element.nodeName == "BUTTON") {
			css.border = "none";
		}
		haxe_ui_Toolkit.get_assets().getImage(style.backgroundImage,function(imageInfo) {
			if(imageInfo == null) {
				return;
			}
			var imageRect = new haxe_ui_util_Rectangle(0,0,imageInfo.width,imageInfo.height);
			if(style.backgroundImageClipTop != null && style.backgroundImageClipLeft != null && style.backgroundImageClipBottom != null && style.backgroundImageClipRight != null) {
				imageRect = new haxe_ui_util_Rectangle(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.backgroundImageClipLeft),haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.backgroundImageClipTop),haxe_ui_util__$Variant_Variant_$Impl_$.toInt(haxe_ui_util__$Variant_Variant_$Impl_$.subtract(style.backgroundImageClipRight,style.backgroundImageClipLeft)),haxe_ui_util__$Variant_Variant_$Impl_$.toInt(haxe_ui_util__$Variant_Variant_$Impl_$.subtract(style.backgroundImageClipBottom,style.backgroundImageClipTop)));
			}
			var slice = null;
			if(style.backgroundImageSliceTop != null && style.backgroundImageSliceLeft != null && style.backgroundImageSliceBottom != null && style.backgroundImageSliceRight != null) {
				slice = new haxe_ui_util_Rectangle(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.backgroundImageSliceLeft),haxe_ui_util__$Variant_Variant_$Impl_$.toInt(style.backgroundImageSliceTop),haxe_ui_util__$Variant_Variant_$Impl_$.toInt(haxe_ui_util__$Variant_Variant_$Impl_$.subtract(style.backgroundImageSliceRight,style.backgroundImageSliceLeft)),haxe_ui_util__$Variant_Variant_$Impl_$.toInt(haxe_ui_util__$Variant_Variant_$Impl_$.subtract(style.backgroundImageSliceBottom,style.backgroundImageSliceTop)));
			}
			if(slice == null) {
				if(imageRect.width == imageInfo.width && imageRect.height == imageInfo.height) {
					css.backgroundImage = "url(" + imageInfo.data.src + ")";
					if(style.backgroundImageRepeat == null) {
						css.backgroundRepeat = "no-repeat";
					} else if(style.backgroundImageRepeat == "repeat") {
						css.backgroundRepeat = "repeat";
					} else if(style.backgroundImageRepeat == "stretch") {
						css.backgroundRepeat = "no-repeat";
						css.backgroundSize = "" + ("" + width + "px") + " " + ("" + height + "px");
					}
				} else {
					var canvas = window.document.createElement("canvas");
					canvas.width = width;
					canvas.height = height;
					var ctx = canvas.getContext("2d",null);
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,imageRect,new haxe_ui_util_Rectangle(0,0,width,height));
					var data = canvas.toDataURL();
					css.backgroundImage = "url(" + data + ")";
				}
			} else {
				var rects = haxe_ui_util_Slice9.buildRects(width,height,imageRect.width,imageRect.height,slice);
				var srcRects = rects.src;
				var dstRects = rects.dst;
				var canvas1 = window.document.createElement("canvas");
				canvas1.width = width;
				canvas1.height = height;
				var ctx1 = canvas1.getContext("2d",null);
				var _g1 = 0;
				var _g = srcRects.length;
				while(_g1 < _g) {
					var i = _g1++;
					var srcRect = new haxe_ui_util_Rectangle(srcRects[i].left + imageRect.left,srcRects[i].top + imageRect.top,srcRects[i].width,srcRects[i].height);
					var dstRect = dstRects[i];
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx1,imageInfo.data,srcRect,dstRect);
				}
				var data1 = canvas1.toDataURL();
				css.backgroundImage = "url(" + data1 + ")";
			}
		});
	}
};
haxe_ui_backend_html5_StyleHelper.paintBitmap = function(ctx,img,srcRect,dstRect) {
	ctx.drawImage(img,srcRect.left,srcRect.top,srcRect.width,srcRect.height,dstRect.left,dstRect.top,dstRect.width,dstRect.height);
};
var haxe_ui_backend_html5_UserAgent = function() {
	var ua = window.navigator.userAgent;
	if(ua.indexOf("Opera") != -1 || ua.indexOf("OPR") != -1) {
		this._opera = true;
	} else if(ua.indexOf("Chrome") != -1) {
		this._chrome = true;
	} else if(ua.indexOf("Safari") != -1) {
		this._safari = true;
	} else if(ua.indexOf("Firefox") != -1) {
		this._firefox = true;
	} else if(ua.indexOf("MSIE") != -1) {
		this._msie = true;
	} else {
		this._unknown = true;
	}
};
$hxClasses["haxe.ui.backend.html5.UserAgent"] = haxe_ui_backend_html5_UserAgent;
haxe_ui_backend_html5_UserAgent.__name__ = ["haxe","ui","backend","html5","UserAgent"];
haxe_ui_backend_html5_UserAgent.__properties__ = {get_instance:"get_instance"};
haxe_ui_backend_html5_UserAgent.get_instance = function() {
	if(haxe_ui_backend_html5_UserAgent._instance == null) {
		haxe_ui_backend_html5_UserAgent._instance = new haxe_ui_backend_html5_UserAgent();
	}
	return haxe_ui_backend_html5_UserAgent._instance;
};
haxe_ui_backend_html5_UserAgent.prototype = {
	get_opera: function() {
		return this._opera;
	}
	,get_chrome: function() {
		return this._chrome;
	}
	,get_safari: function() {
		return this._safari;
	}
	,get_firefox: function() {
		return this._firefox;
	}
	,get_msie: function() {
		return this._msie;
	}
	,get_unknown: function() {
		return this._unknown;
	}
	,__class__: haxe_ui_backend_html5_UserAgent
	,__properties__: {get_unknown:"get_unknown",get_msie:"get_msie",get_firefox:"get_firefox",get_safari:"get_safari",get_chrome:"get_chrome",get_opera:"get_opera"}
};
var haxe_ui_backend_html5_native_NativeElement = function(component) {
	this.config = null;
	this._component = component;
};
$hxClasses["haxe.ui.backend.html5.native.NativeElement"] = haxe_ui_backend_html5_native_NativeElement;
haxe_ui_backend_html5_native_NativeElement.__name__ = ["haxe","ui","backend","html5","native","NativeElement"];
haxe_ui_backend_html5_native_NativeElement.prototype = {
	create: function() {
		var nodeType = this.getConfigValue("nodeType","div");
		var el = window.document.createElement(nodeType);
		el.style.boxSizing = "border-box";
		var type = this.getConfigValue("type");
		if(type != null) {
			el.setAttribute("type",type);
		}
		var orient = this.getConfigValue("orient");
		if(orient != null) {
			el.setAttribute("orient",orient);
		}
		var style = this.getConfigValue("style");
		if(style != null) {
			var styles = style.split(";");
			var _g = 0;
			while(_g < styles.length) {
				var s = styles[_g];
				++_g;
				s = StringTools.trim(s);
				if(s.length == 0) {
					continue;
				}
				var parts = s.split(":");
				el.style.setProperty(StringTools.trim(parts[0]),StringTools.trim(parts[1]));
			}
		}
		if(nodeType == "input" && type == "range") {
			el.addEventListener("change",$bind(this,this.onChange));
		}
		return el;
	}
	,onChange: function(e) {
		if((this._component instanceof haxe_ui_components_Slider)) {
			var input = this._component.element;
			(js_Boot.__cast(this._component , haxe_ui_components_Slider)).set_pos(parseFloat(input.value));
		}
	}
	,getConfigValue: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		var _this = this.config;
		if((__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) == false) {
			return defaultValue;
		}
		var _this1 = this.config;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	,__class__: haxe_ui_backend_html5_native_NativeElement
};
var haxe_ui_backend_html5_native_LabeledInputElement = function(component) {
	haxe_ui_backend_html5_native_NativeElement.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.LabeledInputElement"] = haxe_ui_backend_html5_native_LabeledInputElement;
haxe_ui_backend_html5_native_LabeledInputElement.__name__ = ["haxe","ui","backend","html5","native","LabeledInputElement"];
haxe_ui_backend_html5_native_LabeledInputElement.__super__ = haxe_ui_backend_html5_native_NativeElement;
haxe_ui_backend_html5_native_LabeledInputElement.prototype = $extend(haxe_ui_backend_html5_native_NativeElement.prototype,{
	create: function() {
		var _gthis = this;
		var type = this.getConfigValue("type","button");
		var input = window.document.createElement("input");
		input.style.display = "inline";
		input.style.verticalAlign = "middle";
		input.style.margin = "0";
		input.style.marginRight = "2px";
		input.type = type;
		var label = window.document.createElement("label");
		label.appendChild(input);
		if(type == "checkbox" || type == "radio") {
			input.addEventListener("change",function(e) {
				e.preventDefault();
				_gthis.onChange(e);
				return false;
			});
		}
		return label;
	}
	,onChange: function(e) {
		var type = this.getConfigValue("type","button");
		if(type == "checkbox" || type == "radio") {
			var label = this._component.element;
			var input = label.getElementsByTagName("input").item(0);
			if(type == "checkbox") {
				var checkbox = this._component;
				checkbox.set_selected(input.checked);
			} else if(type == "radio") {
				var optionbox = this._component;
				optionbox.set_selected(input.checked);
			}
		}
	}
	,__class__: haxe_ui_backend_html5_native_LabeledInputElement
});
var haxe_ui_core_Behaviour = function(component) {
	this.config = null;
	this._component = component;
};
$hxClasses["haxe.ui.core.Behaviour"] = haxe_ui_core_Behaviour;
haxe_ui_core_Behaviour.__name__ = ["haxe","ui","core","Behaviour"];
haxe_ui_core_Behaviour.prototype = {
	set: function(value) {
	}
	,get: function() {
		return null;
	}
	,getDynamic: function() {
		return null;
	}
	,run: function(param) {
	}
	,update: function() {
	}
	,call: function(id) {
		return null;
	}
	,getConfigValue: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		var _this = this.config;
		if((__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) == false) {
			return defaultValue;
		}
		var _this1 = this.config;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	,getConfigValueBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var s = this.getConfigValue(name);
		if(s != null) {
			v = s == "true";
		}
		return v;
	}
	,__class__: haxe_ui_core_Behaviour
};
var haxe_ui_backend_html5_native_behaviours_ElementAttribute = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementAttribute"] = haxe_ui_backend_html5_native_behaviours_ElementAttribute;
haxe_ui_backend_html5_native_behaviours_ElementAttribute.__name__ = ["haxe","ui","backend","html5","native","behaviours","ElementAttribute"];
haxe_ui_backend_html5_native_behaviours_ElementAttribute.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementAttribute.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var el = this._component.element;
		var name = this.getConfigValue("name");
		if(name == null) {
			return;
		}
		var child = this.getConfigValue("child");
		if(child != null) {
			var list = el.getElementsByTagName(child);
			if(list.length == 0) {
				return;
			}
			el = list.item(0);
		}
		if(this.getConfigValueBool("remove",false) == true) {
			if(value != null && (haxe_ui_util__$Variant_Variant_$Impl_$.get_isBool(value) == true && haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value) == true)) {
				el.removeAttribute(name);
			}
			return;
		}
		if(el.nodeName == "INPUT" && value != null) {
			var input = el;
			if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isBool(value) == true && name == "checked") {
				input.checked = haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value);
			} else if(name == "min") {
				input.min = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
			} else if(name == "max") {
				input.max = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
			} else if(name == "value") {
				input.value = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
			}
		} else if(el.nodeName == "PROGRESS" && value != null) {
			var progress = el;
			if(name != "min") {
				if(name == "max") {
					progress.max = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
				} else if(name == "value") {
					progress.value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
				}
			}
		} else {
			el.setAttribute(name,haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
		}
		var removeIfNegative = this.getConfigValueBool("removeIfNegative",false);
		if((value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isBool(value) == true && haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value) == false) && removeIfNegative == true) {
			el.removeAttribute(name);
			return;
		}
	}
	,get: function() {
		var el = this._component.element;
		var name = this.getConfigValue("name");
		if(name == null) {
			return null;
		}
		var child = this.getConfigValue("child");
		if(child != null) {
			var list = el.getElementsByTagName(child);
			if(list.length == 0) {
				return null;
			}
			el = list.item(0);
		}
		var value = null;
		if(el.nodeName == "INPUT") {
			var input = el;
			if(name == "checked") {
				value = haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(input.checked);
			} else if(name == "min") {
				value = haxe_ui_util__$Variant_Variant_$Impl_$.fromString(input.min);
			} else if(name == "max") {
				value = haxe_ui_util__$Variant_Variant_$Impl_$.fromString(input.max);
			} else if(name == "value") {
				value = haxe_ui_util__$Variant_Variant_$Impl_$.fromString(input.value);
			}
		} else if(el.nodeName == "PROGRESS") {
			var progress = el;
			if(name != "min") {
				if(name == "max") {
					value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(progress.max);
				} else if(name == "value") {
					value = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(progress.value);
				}
			}
		} else {
			value = haxe_ui_util__$Variant_Variant_$Impl_$.fromString(el.getAttribute(name));
		}
		return value;
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementAttribute
});
var haxe_ui_backend_html5_native_behaviours_ElementDisabled = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementDisabled"] = haxe_ui_backend_html5_native_behaviours_ElementDisabled;
haxe_ui_backend_html5_native_behaviours_ElementDisabled.__name__ = ["haxe","ui","backend","html5","native","behaviours","ElementDisabled"];
haxe_ui_backend_html5_native_behaviours_ElementDisabled.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementDisabled.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var el = this._component.element;
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value) == true) {
			el.setAttribute("disabled","true");
			var _g = 0;
			var _g1 = el.children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.setAttribute("disabled","true");
			}
		} else {
			el.removeAttribute("disabled");
			var _g2 = 0;
			var _g11 = el.children;
			while(_g2 < _g11.length) {
				var child1 = _g11[_g2];
				++_g2;
				child1.removeAttribute("disabled");
			}
		}
	}
	,get: function() {
		var el = this._component.element;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(el.getAttribute("disabled") == "true");
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementDisabled
});
var haxe_ui_backend_html5_native_behaviours_ElementImage = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementImage"] = haxe_ui_backend_html5_native_behaviours_ElementImage;
haxe_ui_backend_html5_native_behaviours_ElementImage.__name__ = ["haxe","ui","backend","html5","native","behaviours","ElementImage"];
haxe_ui_backend_html5_native_behaviours_ElementImage.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementImage.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var _gthis = this;
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value)) {
			return;
		}
		var el = this._component.element;
		var img = null;
		var list = el.getElementsByTagName("img");
		if(list != null && list.length == 1) {
			img = list.item(0);
		} else {
			img = window.document.createElement("img");
			img.style.display = "inline";
			img.style.verticalAlign = "middle";
			img.style.marginTop = "-1px";
			el.appendChild(img);
		}
		haxe_ui_ToolkitAssets.get_instance().getImage(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value),function(image) {
			if(image != null && image.data != null) {
				img.src = image.data.src;
				var _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
		});
	}
	,get: function() {
		return null;
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementImage
});
var haxe_ui_backend_html5_native_behaviours_ElementPlaceholder = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementPlaceholder"] = haxe_ui_backend_html5_native_behaviours_ElementPlaceholder;
haxe_ui_backend_html5_native_behaviours_ElementPlaceholder.__name__ = ["haxe","ui","backend","html5","native","behaviours","ElementPlaceholder"];
haxe_ui_backend_html5_native_behaviours_ElementPlaceholder.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementPlaceholder.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var el = this._component.element;
		if((el instanceof HTMLTextAreaElement)) {
			(js_Boot.__cast(el , HTMLTextAreaElement)).placeholder = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
		} else if((el instanceof HTMLInputElement)) {
			(js_Boot.__cast(el , HTMLInputElement)).placeholder = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
		}
	}
	,get: function() {
		var el = this._component.element;
		if((el instanceof HTMLTextAreaElement)) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromString((js_Boot.__cast(el , HTMLTextAreaElement)).placeholder);
		} else if((el instanceof HTMLInputElement)) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromString((js_Boot.__cast(el , HTMLInputElement)).placeholder);
		} else {
			return null;
		}
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementPlaceholder
});
var haxe_ui_backend_html5_native_behaviours_ElementScrollLeft = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementScrollLeft"] = haxe_ui_backend_html5_native_behaviours_ElementScrollLeft;
haxe_ui_backend_html5_native_behaviours_ElementScrollLeft.__name__ = ["haxe","ui","backend","html5","native","behaviours","ElementScrollLeft"];
haxe_ui_backend_html5_native_behaviours_ElementScrollLeft.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementScrollLeft.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		this._component.element.scrollLeft = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(this._component.element.scrollLeft);
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementScrollLeft
});
var haxe_ui_backend_html5_native_behaviours_ElementScrollTop = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementScrollTop"] = haxe_ui_backend_html5_native_behaviours_ElementScrollTop;
haxe_ui_backend_html5_native_behaviours_ElementScrollTop.__name__ = ["haxe","ui","backend","html5","native","behaviours","ElementScrollTop"];
haxe_ui_backend_html5_native_behaviours_ElementScrollTop.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementScrollTop.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		this._component.element.scrollTop = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(this._component.element.scrollTop);
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementScrollTop
});
var haxe_ui_backend_html5_native_behaviours_ElementText = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementText"] = haxe_ui_backend_html5_native_behaviours_ElementText;
haxe_ui_backend_html5_native_behaviours_ElementText.__name__ = ["haxe","ui","backend","html5","native","behaviours","ElementText"];
haxe_ui_backend_html5_native_behaviours_ElementText.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementText.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var el = this._component.element;
		el.textContent = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
	}
	,get: function() {
		var el = this._component.element;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(el.textContent);
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementText
});
var haxe_ui_backend_html5_native_behaviours_ElementValue = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementValue"] = haxe_ui_backend_html5_native_behaviours_ElementValue;
haxe_ui_backend_html5_native_behaviours_ElementValue.__name__ = ["haxe","ui","backend","html5","native","behaviours","ElementValue"];
haxe_ui_backend_html5_native_behaviours_ElementValue.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_ElementValue.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var el = this._component.element;
		if((el instanceof HTMLTextAreaElement)) {
			(js_Boot.__cast(el , HTMLTextAreaElement)).value = StringTools.replace(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value),"\\n","\n");
		} else {
			el.setAttribute("value",haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
		}
	}
	,get: function() {
		var el = this._component.element;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(el.textContent);
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_ElementValue
});
var haxe_ui_backend_html5_native_behaviours_SelectDataSource = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.SelectDataSource"] = haxe_ui_backend_html5_native_behaviours_SelectDataSource;
haxe_ui_backend_html5_native_behaviours_SelectDataSource.__name__ = ["haxe","ui","backend","html5","native","behaviours","SelectDataSource"];
haxe_ui_backend_html5_native_behaviours_SelectDataSource.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_SelectDataSource.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var ds = haxe_ui_util__$Variant_Variant_$Impl_$.toDataSource(value);
		var el = this._component.element;
		while(el.childElementCount > 0) el.removeChild(el.children[0]);
		if(ds != null) {
			var _g1 = 0;
			var _g = ds.get_size();
			while(_g1 < _g) {
				var n = _g1++;
				var item = ds.get(n);
				if(item.value != null) {
					var option = window.document.createElement("option");
					option.text = item.value;
					el.appendChild(option);
				}
			}
		}
		this._component.set("dataSource",ds);
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_SelectDataSource
});
var haxe_ui_backend_html5_native_behaviours_SelectedItem = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.SelectedItem"] = haxe_ui_backend_html5_native_behaviours_SelectedItem;
haxe_ui_backend_html5_native_behaviours_SelectedItem.__name__ = ["haxe","ui","backend","html5","native","behaviours","SelectedItem"];
haxe_ui_backend_html5_native_behaviours_SelectedItem.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_SelectedItem.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	getDynamic: function() {
		var data = null;
		if(this._component.element.nodeName == "SELECT") {
			if(this._component.has("dataSource") == true) {
				var selectElement = js_Boot.__cast(this._component.element , HTMLSelectElement);
				var ds = this._component.get("dataSource");
				data = ds.get(selectElement.selectedIndex);
			}
		}
		return data;
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_SelectedItem
});
var haxe_ui_backend_html5_native_behaviours_SpanText = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.html5.native.behaviours.SpanText"] = haxe_ui_backend_html5_native_behaviours_SpanText;
haxe_ui_backend_html5_native_behaviours_SpanText.__name__ = ["haxe","ui","backend","html5","native","behaviours","SpanText"];
haxe_ui_backend_html5_native_behaviours_SpanText.__super__ = haxe_ui_core_Behaviour;
haxe_ui_backend_html5_native_behaviours_SpanText.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var el = this._component.element;
		var span = this.getSpan(el);
		var checkbox = this.getInput(el,"checkbox");
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value)) {
			haxe_ui_backend_html5_HtmlUtils.removeElement(span);
			if(checkbox != null) {
				checkbox.style.marginTop = "-15px";
			}
			return;
		}
		if(span == null) {
			span = window.document.createElement("span");
			span.style.display = "inline-block";
			span.style.verticalAlign = "middle";
			var style = this.getConfigValue("style");
			if(style != null) {
				var styles = style.split(";");
				var _g = 0;
				while(_g < styles.length) {
					var s = styles[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length == 0) {
						continue;
					}
					var parts = s.split(":");
					span.style.setProperty(StringTools.trim(parts[0]),StringTools.trim(parts[1]));
				}
			}
			if(checkbox != null) {
				checkbox.style.marginTop = "0";
			}
			el.appendChild(span);
		}
		var invalidate = false;
		if(this._component.get_autoWidth() == true) {
			this._component.element.style.width = null;
			invalidate = true;
		}
		if(this._component.get_autoHeight() == true) {
			this._component.element.style.height = null;
			invalidate = true;
		}
		span.textContent = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
		if(invalidate == true) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
	}
	,getSpan: function(el) {
		var span = null;
		var list = el.getElementsByTagName("span");
		if(list.length != 0) {
			span = list.item(0);
		}
		return span;
	}
	,getInput: function(el,type) {
		var input = null;
		var list = el.getElementsByTagName("input");
		if(list.length != 0) {
			var _g1 = 0;
			var _g = list.length;
			while(_g1 < _g) {
				var n = _g1++;
				var child = list.item(n);
				if((child instanceof HTMLInputElement) && (js_Boot.__cast(child , HTMLInputElement)).type == type) {
					input = child;
					break;
				}
			}
		}
		return input;
	}
	,__class__: haxe_ui_backend_html5_native_behaviours_SpanText
});
var haxe_ui_layouts_ILayout = function() { };
$hxClasses["haxe.ui.layouts.ILayout"] = haxe_ui_layouts_ILayout;
haxe_ui_layouts_ILayout.__name__ = ["haxe","ui","layouts","ILayout"];
var haxe_ui_layouts_Layout = function() {
};
$hxClasses["haxe.ui.layouts.Layout"] = haxe_ui_layouts_Layout;
haxe_ui_layouts_Layout.__name__ = ["haxe","ui","layouts","Layout"];
haxe_ui_layouts_Layout.__interfaces__ = [haxe_ui_layouts_ILayout];
haxe_ui_layouts_Layout.prototype = {
	get_component: function() {
		return this._component;
	}
	,set_component: function(value) {
		this._component = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,refresh: function() {
		if(this._component != null && this._component.get_isReady() == true) {
			this.resizeChildren();
			this._component.handlePreReposition();
			this.repositionChildren();
			this._component.handlePostReposition();
		}
	}
	,autoSize: function() {
		if(this.get_component().get_isReady() == false) {
			return false;
		}
		var calculatedWidth = null;
		var calculatedHeight = null;
		if(this.get_component().get_autoWidth() == true || this.get_component().get_autoHeight() == true) {
			var size = this.calcAutoSize();
			if(this.get_component().get_autoWidth() == true) {
				calculatedWidth = size.width;
			}
			if(this.get_component().get_autoHeight() == true) {
				calculatedHeight = size.height;
			}
			this.get_component().resizeComponent(calculatedWidth,calculatedHeight);
		}
		if(calculatedWidth == null) {
			return calculatedHeight != null;
		} else {
			return true;
		}
	}
	,marginTop: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginTop == null) {
			return 0;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(child.get_style().marginTop);
	}
	,marginLeft: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginLeft == null) {
			return 0;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(child.get_style().marginLeft);
	}
	,marginBottom: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginBottom == null) {
			return 0;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(child.get_style().marginBottom);
	}
	,marginRight: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginRight == null) {
			return 0;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(child.get_style().marginRight);
	}
	,hidden: function(c) {
		if(c == null) {
			c = this.get_component();
		}
		return c.get_hidden();
	}
	,horizontalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().horizontalAlign == null) {
			return "left";
		}
		return child.get_style().horizontalAlign;
	}
	,verticalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().verticalAlign == null) {
			return "top";
		}
		return child.get_style().verticalAlign;
	}
	,get_paddingLeft: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingLeft == null) {
			return 0;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().paddingLeft);
	}
	,get_paddingTop: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingTop == null) {
			return 0;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().paddingTop);
	}
	,get_paddingBottom: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingBottom == null) {
			return 0;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().paddingBottom);
	}
	,get_paddingRight: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingRight == null) {
			return 0;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().paddingRight);
	}
	,get_horizontalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().horizontalSpacing == null) {
			return 0;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().horizontalSpacing);
	}
	,get_verticalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().verticalSpacing == null) {
			return 0;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().verticalSpacing);
	}
	,get_innerWidth: function() {
		if(this.get_component() == null) {
			return 0;
		}
		return this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
	}
	,get_innerHeight: function() {
		if(this.get_component() == null) {
			return 0;
		}
		var padding = 0;
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingTop != null) {
			padding = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(haxe_ui_util__$Variant_Variant_$Impl_$.add(this.get_component().get_style().paddingTop,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(padding)));
		}
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingBottom != null) {
			padding = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(haxe_ui_util__$Variant_Variant_$Impl_$.add(this.get_component().get_style().paddingBottom,haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(padding)));
		}
		var icy = this.get_component().get_componentHeight() - padding;
		return icy;
	}
	,resizeChildren: function() {
	}
	,repositionChildren: function() {
	}
	,get_usableSize: function() {
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_util_Size(ucx,ucy);
	}
	,get_usableWidth: function() {
		return this.get_usableSize().width;
	}
	,get_usableHeight: function() {
		return this.get_usableSize().height;
	}
	,calcAutoWidth: function() {
		return this.calcAutoSize().width;
	}
	,calcAutoHeight: function() {
		return this.calcAutoSize().height;
	}
	,calcAutoSize: function(exclusions) {
		var x1 = 16777215;
		var x2 = 0;
		var y1 = 16777215;
		var y2 = 0;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false || this.excluded(exclusions,child) == true) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_left() < x1) {
					x1 = child.get_left();
				}
				if(child.get_componentWidth() != null && child.get_left() + child.get_componentWidth() > x2) {
					x2 = child.get_left() + child.get_componentWidth();
				}
			}
			if(child.get_percentHeight() == null) {
				if(child.get_top() < y1) {
					y1 = child.get_top();
				}
				if(child.get_componentHeight() != null && child.get_top() + child.get_componentHeight() > y2) {
					y2 = child.get_top() + child.get_componentHeight();
				}
			}
		}
		if(x1 == 16777215) {
			x1 = 0;
		}
		if(y1 == 16777215) {
			y1 = 0;
		}
		var w = x2 - x1 + (this.get_paddingLeft() + this.get_paddingRight());
		var h = y2 - y1 + (this.get_paddingTop() + this.get_paddingBottom());
		return new haxe_ui_util_Size(w,h);
	}
	,excluded: function(exclusions,child) {
		if(exclusions == null) {
			return false;
		}
		return exclusions.indexOf(child) != -1;
	}
	,__class__: haxe_ui_layouts_Layout
	,__properties__: {get_usableHeight:"get_usableHeight",get_usableWidth:"get_usableWidth",get_usableSize:"get_usableSize",get_innerHeight:"get_innerHeight",get_innerWidth:"get_innerWidth",get_verticalSpacing:"get_verticalSpacing",get_horizontalSpacing:"get_horizontalSpacing",get_paddingRight:"get_paddingRight",get_paddingBottom:"get_paddingBottom",get_paddingTop:"get_paddingTop",get_paddingLeft:"get_paddingLeft",set_component:"set_component",get_component:"get_component"}
};
var haxe_ui_layouts_DefaultLayout = function() {
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.DefaultLayout"] = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DefaultLayout.__name__ = ["haxe","ui","layouts","DefaultLayout"];
haxe_ui_layouts_DefaultLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_DefaultLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	resizeChildren: function() {
		var usableSize = this.get_usableSize();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				cx = usableSize.width * child.get_percentWidth() / 100 - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				cy = usableSize.height * child.get_percentHeight() / 100 - this.marginTop(child) - this.marginBottom(child);
			}
			child.resizeComponent(cx,cy);
		}
	}
	,repositionChildren: function() {
		var usableSize = this.get_component().get_layout().get_usableSize();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			var ypos = 0;
			var _g2 = this.horizontalAlign(child);
			switch(_g2) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginRight(child));
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			var _g3 = this.verticalAlign(child);
			switch(_g3) {
			case "bottom":
				ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginBottom(child));
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos,ypos);
		}
	}
	,__class__: haxe_ui_layouts_DefaultLayout
});
var haxe_ui_backend_html5_native_layouts_ButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.layouts.ButtonLayout"] = haxe_ui_backend_html5_native_layouts_ButtonLayout;
haxe_ui_backend_html5_native_layouts_ButtonLayout.__name__ = ["haxe","ui","backend","html5","native","layouts","ButtonLayout"];
haxe_ui_backend_html5_native_layouts_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_backend_html5_native_layouts_ButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	calcAutoSize: function(exclusions) {
		var textSize = haxe_ui_backend_html5_HtmlUtils.measureText(this.get_component().get_text(),0,0,haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_component().get_style().fontSize),this.get_component().get_style().fontName);
		var iconCX = this.getIconWidth();
		var iconCY = this.getIconHeight();
		var cx = textSize.width;
		var cy = textSize.height;
		var iconPosition = this.get_component().get_style().iconPosition;
		if(iconPosition == "top" || iconPosition == "bottom") {
			if(iconCX > cx) {
				cx = iconCX;
			}
			cy += haxe_ui_util__$Variant_Variant_$Impl_$.addFloat(iconCY,this.get_component().get_style().verticalSpacing);
		} else {
			cx += haxe_ui_util__$Variant_Variant_$Impl_$.addFloat(iconCX,this.get_component().get_style().horizontalSpacing);
			if(iconCY > cy) {
				cy = iconCY;
			}
		}
		var size = new haxe_ui_util_Size(cx,cy);
		size.width += this.get_paddingLeft() + this.get_paddingRight() + 6;
		size.height += this.get_paddingTop() + this.get_paddingBottom() + 2;
		return size;
	}
	,repositionChildren: function() {
		var el = this.get_component().element;
		if(el.childElementCount == 2) {
			var first = el.firstElementChild;
			var last = el.lastElementChild;
			var _g = this.get_component().get_style().iconPosition;
			if(_g == null) {
				if((first instanceof HTMLImageElement) == false) {
					haxe_ui_backend_html5_HtmlUtils.swapElements(first,last);
				}
			} else {
				switch(_g) {
				case "bottom":case "right":
					if((last instanceof HTMLImageElement) == false) {
						haxe_ui_backend_html5_HtmlUtils.swapElements(first,last);
					}
					break;
				case "left":case "top":
					if((first instanceof HTMLImageElement) == false) {
						haxe_ui_backend_html5_HtmlUtils.swapElements(first,last);
					}
					break;
				}
			}
			var img = this.getIcon();
			if(img != null) {
				var _g1 = this.get_component().get_style().iconPosition;
				if(_g1 == null) {
					var tmp = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().horizontalSpacing) + "px";
					img.style.marginRight = tmp;
				} else {
					switch(_g1) {
					case "bottom":
						var tmp1 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().verticalSpacing) + "px";
						img.style.marginTop = tmp1;
						break;
					case "left":
						var tmp2 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().horizontalSpacing) + "px";
						img.style.marginRight = tmp2;
						break;
					case "right":
						var tmp3 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().horizontalSpacing) + "px";
						img.style.marginLeft = tmp3;
						break;
					case "top":
						var tmp4 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().verticalSpacing) + "px";
						img.style.marginBottom = tmp4;
						break;
					default:
						var tmp5 = "" + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this._component.get_style().horizontalSpacing) + "px";
						img.style.marginRight = tmp5;
					}
				}
			}
			var text = this.getText();
			if(text != null) {
				var _g11 = this.get_component().get_style().iconPosition;
				if(_g11 == null) {
					text.style.display = "inline-block";
				} else {
					switch(_g11) {
					case "left":case "right":
						text.style.display = "inline-block";
						break;
					case "bottom":case "top":
						text.style.display = "block";
						break;
					}
				}
			}
		}
	}
	,getIconWidth: function() {
		var cx = 0;
		var icon = this.getIcon();
		if(icon != null) {
			cx = icon.offsetWidth;
		}
		return cx;
	}
	,getIconHeight: function() {
		var cy = 0;
		var icon = this.getIcon();
		if(icon != null) {
			cy = icon.offsetHeight;
		}
		return cy;
	}
	,getIcon: function() {
		var img = null;
		var el = this.get_component().element;
		var list = el.getElementsByTagName("img");
		if(list != null && list.length == 1) {
			img = list.item(0);
		}
		return img;
	}
	,getText: function() {
		var span = null;
		var el = this.get_component().element;
		var list = el.getElementsByTagName("span");
		if(list != null && list.length == 1) {
			span = list.item(0);
		}
		return span;
	}
	,__class__: haxe_ui_backend_html5_native_layouts_ButtonLayout
});
var haxe_ui_layouts_DelegateLayoutSize = function() {
};
$hxClasses["haxe.ui.layouts.DelegateLayoutSize"] = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_layouts_DelegateLayoutSize.__name__ = ["haxe","ui","layouts","DelegateLayoutSize"];
haxe_ui_layouts_DelegateLayoutSize.prototype = {
	get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_usableWidthModifier: function() {
		return 0;
	}
	,get_usableHeightModifier: function() {
		return 0;
	}
	,getString: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		var _this = this.config;
		if((__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) == false) {
			return defaultValue;
		}
		var _this1 = this.config;
		if(__map_reserved[name] != null) {
			return _this1.getReserved(name);
		} else {
			return _this1.h[name];
		}
	}
	,getInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return Std.parseInt(v);
	}
	,getBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return v == "true";
	}
	,__class__: haxe_ui_layouts_DelegateLayoutSize
	,__properties__: {get_usableHeightModifier:"get_usableHeightModifier",get_usableWidthModifier:"get_usableWidthModifier",get_height:"get_height",get_width:"get_width"}
};
var haxe_ui_backend_html5_native_size_ButtonSize = function() {
	haxe_ui_layouts_DelegateLayoutSize.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.size.ButtonSize"] = haxe_ui_backend_html5_native_size_ButtonSize;
haxe_ui_backend_html5_native_size_ButtonSize.__name__ = ["haxe","ui","backend","html5","native","size","ButtonSize"];
haxe_ui_backend_html5_native_size_ButtonSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_backend_html5_native_size_ButtonSize.prototype = $extend(haxe_ui_layouts_DelegateLayoutSize.prototype,{
	get_width: function() {
		var size = haxe_ui_backend_html5_HtmlUtils.measureText(this.component.get_text(),0,0,haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.component.get_style().fontSize),this.component.get_style().fontName);
		var iconCX = this.getIconWidth();
		var cx = size.width;
		var iconPosition = this.component.get_style().iconPosition;
		if(iconPosition == "top" || iconPosition == "bottom") {
			if(iconCX > cx) {
				cx = iconCX;
			}
		} else {
			cx += haxe_ui_util__$Variant_Variant_$Impl_$.addFloat(iconCX,this.component.get_style().horizontalSpacing);
		}
		return cx + this.getInt("incrementWidthBy");
	}
	,get_height: function() {
		var size = haxe_ui_backend_html5_HtmlUtils.measureText(this.component.get_text(),0,0,haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.component.get_style().fontSize),this.component.get_style().fontName);
		var iconCY = this.getIconHeight();
		var cy = size.height;
		var iconPosition = this.component.get_style().iconPosition;
		if(iconPosition == "top" || iconPosition == "bottom") {
			cy += haxe_ui_util__$Variant_Variant_$Impl_$.addFloat(iconCY,this.component.get_style().verticalSpacing);
		} else if(iconCY > cy) {
			cy = iconCY;
		}
		return cy + this.getInt("incrementHeightBy");
	}
	,getIconWidth: function() {
		var cx = 0;
		var icon = this.getIcon();
		if(icon != null) {
			cx = icon.offsetWidth;
		}
		return cx;
	}
	,getIconHeight: function() {
		var cy = 0;
		var icon = this.getIcon();
		if(icon != null) {
			cy = icon.offsetHeight;
		}
		return cy;
	}
	,getIcon: function() {
		var img = null;
		var el = this.component.element;
		var list = el.getElementsByTagName("img");
		if(list != null && list.length == 1) {
			img = list.item(0);
		}
		return img;
	}
	,__class__: haxe_ui_backend_html5_native_size_ButtonSize
});
var haxe_ui_backend_html5_native_size_ComponentSize = function() {
	haxe_ui_layouts_DelegateLayoutSize.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.size.ComponentSize"] = haxe_ui_backend_html5_native_size_ComponentSize;
haxe_ui_backend_html5_native_size_ComponentSize.__name__ = ["haxe","ui","backend","html5","native","size","ComponentSize"];
haxe_ui_backend_html5_native_size_ComponentSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_backend_html5_native_size_ComponentSize.prototype = $extend(haxe_ui_layouts_DelegateLayoutSize.prototype,{
	get_width: function() {
		var w = this.component.get_componentWidth();
		if(w == null || w <= 0) {
			w = this.getInt("defaultWidth");
		}
		return w;
	}
	,get_height: function() {
		var h = this.component.get_componentHeight();
		if(h == null || h <= 0) {
			h = this.getInt("defaultHeight");
		}
		return h;
	}
	,__class__: haxe_ui_backend_html5_native_size_ComponentSize
});
var haxe_ui_backend_html5_native_size_ElementSize = function() {
	haxe_ui_layouts_DelegateLayoutSize.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.size.ElementSize"] = haxe_ui_backend_html5_native_size_ElementSize;
haxe_ui_backend_html5_native_size_ElementSize.__name__ = ["haxe","ui","backend","html5","native","size","ElementSize"];
haxe_ui_backend_html5_native_size_ElementSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_backend_html5_native_size_ElementSize.prototype = $extend(haxe_ui_layouts_DelegateLayoutSize.prototype,{
	get_width: function() {
		var w = this.component.element.offsetWidth;
		if((this.component instanceof haxe_ui_components_VSlider)) {
			if(w == this.component.element.offsetHeight) {
				w = 21;
			}
		} else if((this.component instanceof haxe_ui_components_VProgress)) {
			if(this.component.element.offsetWidth > this.component.element.offsetHeight) {
				w = this.component.element.offsetHeight;
			}
		}
		return w;
	}
	,get_height: function() {
		var h = this.component.element.offsetHeight;
		if((this.component instanceof haxe_ui_components_VProgress)) {
			if(this.component.element.offsetWidth > this.component.element.offsetHeight) {
				h = this.component.element.offsetWidth;
			}
		}
		return h;
	}
	,__class__: haxe_ui_backend_html5_native_size_ElementSize
});
var haxe_ui_backend_html5_native_size_FontHeight = function() {
	haxe_ui_layouts_DelegateLayoutSize.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.size.FontHeight"] = haxe_ui_backend_html5_native_size_FontHeight;
haxe_ui_backend_html5_native_size_FontHeight.__name__ = ["haxe","ui","backend","html5","native","size","FontHeight"];
haxe_ui_backend_html5_native_size_FontHeight.__super__ = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_backend_html5_native_size_FontHeight.prototype = $extend(haxe_ui_layouts_DelegateLayoutSize.prototype,{
	get_width: function() {
		return this.component.get_width();
	}
	,get_height: function() {
		return haxe_ui_backend_html5_HtmlUtils.measureText("|").height + this.getInt("incrementBy");
	}
	,__class__: haxe_ui_backend_html5_native_size_FontHeight
});
var haxe_ui_backend_html5_native_size_TextSize = function() {
	haxe_ui_layouts_DelegateLayoutSize.call(this);
};
$hxClasses["haxe.ui.backend.html5.native.size.TextSize"] = haxe_ui_backend_html5_native_size_TextSize;
haxe_ui_backend_html5_native_size_TextSize.__name__ = ["haxe","ui","backend","html5","native","size","TextSize"];
haxe_ui_backend_html5_native_size_TextSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_backend_html5_native_size_TextSize.prototype = $extend(haxe_ui_layouts_DelegateLayoutSize.prototype,{
	get_width: function() {
		var size = haxe_ui_backend_html5_HtmlUtils.measureText(this.component.get_text(),0,0,haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.component.get_style().fontSize),this.component.get_style().fontName);
		return size.width + this.getInt("incrementWidthBy");
	}
	,get_height: function() {
		var size = haxe_ui_backend_html5_HtmlUtils.measureText(this.component.get_text(),0,0,haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.component.get_style().fontSize),this.component.get_style().fontName);
		return size.height + this.getInt("incrementHeightBy");
	}
	,__class__: haxe_ui_backend_html5_native_size_TextSize
});
var haxe_ui_backend_html5_util_FontDetect = function() {
};
$hxClasses["haxe.ui.backend.html5.util.FontDetect"] = haxe_ui_backend_html5_util_FontDetect;
haxe_ui_backend_html5_util_FontDetect.__name__ = ["haxe","ui","backend","html5","util","FontDetect"];
haxe_ui_backend_html5_util_FontDetect.init = function() {
	if(haxe_ui_backend_html5_util_FontDetect._initialized == true) {
		return;
	}
	haxe_ui_backend_html5_util_FontDetect._initialized = true;
	var body = window.document.body;
	var firstChild = window.document.body.firstChild;
	var div = window.document.createElement("div");
	div.id = "fontdetectHelper";
	haxe_ui_backend_html5_util_FontDetect.span = window.document.createElement("span");
	haxe_ui_backend_html5_util_FontDetect.span.innerText = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	div.appendChild(haxe_ui_backend_html5_util_FontDetect.span);
	body.insertBefore(div,firstChild);
	div.style.position = "absolute";
	div.style.visibility = "hidden";
	div.style.top = "-200px";
	div.style.left = "-100000px";
	div.style.width = "100000px";
	div.style.height = "200px";
	div.style.fontSize = "100px";
};
haxe_ui_backend_html5_util_FontDetect.onFontLoaded = function(cssFontName,onLoad,onFail,options) {
	if(cssFontName == null) {
		return;
	}
	var msInterval = 10;
	if(options != null && options.msInterval != null) {
		msInterval = options.msInterval;
	}
	var msTimeout = 2000;
	if(options != null && options.msTimeout != null) {
		msTimeout = options.msTimeout;
	}
	if(onLoad == null && onFail == null) {
		return;
	}
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
		if(onLoad != null) {
			onLoad(cssFontName);
		}
		return;
	}
	var utStart = new Date().getTime();
	var idInterval = 0;
	idInterval = window.setInterval(function() {
		if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
			window.clearInterval(idInterval);
			if(onLoad != null) {
				onLoad(cssFontName);
			}
			return;
		} else {
			var utNow = new Date().getTime();
			if(utNow - utStart > msTimeout) {
				window.clearInterval(idInterval);
				if(onFail != null) {
					onFail(cssFontName);
				}
			}
		}
	},msInterval);
};
haxe_ui_backend_html5_util_FontDetect.isFontLoaded = function(cssFontName) {
	var wThisFont = 0;
	var wPrevFont = 0;
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	var _g1 = 0;
	var _g = haxe_ui_backend_html5_util_FontDetect._aFallbackFonts.length;
	while(_g1 < _g) {
		var ix = _g1++;
		haxe_ui_backend_html5_util_FontDetect.span.style.fontFamily = cssFontName + "," + haxe_ui_backend_html5_util_FontDetect._aFallbackFonts[ix];
		wThisFont = haxe_ui_backend_html5_util_FontDetect.span.offsetWidth;
		if(ix > 0 && wThisFont != wPrevFont) {
			return false;
		}
		wPrevFont = wThisFont;
	}
	return true;
};
haxe_ui_backend_html5_util_FontDetect.prototype = {
	__class__: haxe_ui_backend_html5_util_FontDetect
};
var haxe_ui_focus_IFocusable = function() { };
$hxClasses["haxe.ui.focus.IFocusable"] = haxe_ui_focus_IFocusable;
haxe_ui_focus_IFocusable.__name__ = ["haxe","ui","focus","IFocusable"];
haxe_ui_focus_IFocusable.prototype = {
	__class__: haxe_ui_focus_IFocusable
	,__properties__: {set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"}
};
var haxe_ui_core_InteractiveComponent = function() {
	this._allowFocus = true;
	this._focus = false;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.core.InteractiveComponent"] = haxe_ui_core_InteractiveComponent;
haxe_ui_core_InteractiveComponent.__name__ = ["haxe","ui","core","InteractiveComponent"];
haxe_ui_core_InteractiveComponent.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_core_InteractiveComponent.__super__ = haxe_ui_core_Component;
haxe_ui_core_InteractiveComponent.prototype = $extend(haxe_ui_core_Component.prototype,{
	get_focus: function() {
		return this._focus;
	}
	,set_focus: function(value) {
		if(this._focus == value || this.get_allowFocus() == false) {
			return value;
		}
		this._focus = value;
		if(this._focus == true) {
			this.addClass(":active");
		} else {
			this.removeClass(":active");
		}
		return value;
	}
	,get_allowFocus: function() {
		return this._allowFocus;
	}
	,set_allowFocus: function(value) {
		if(this._allowFocus == value) {
			return value;
		}
		this._allowFocus = value;
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_InteractiveComponent();
	}
	,__class__: haxe_ui_core_InteractiveComponent
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"})
});
var haxe_ui_components_Button = function() {
	this._selected = false;
	this._down = false;
	this.repeatInterval = 50;
	this.repeater = false;
	this.remainPressed = false;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Button"] = haxe_ui_components_Button;
haxe_ui_components_Button.__name__ = ["haxe","ui","components","Button"];
haxe_ui_components_Button.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Button.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	createDefaults: function() {
		haxe_ui_core_InteractiveComponent.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_ButtonDefaultTextBehaviour(this);
		if(__map_reserved["text"] != null) {
			_g.setReserved("text",value);
		} else {
			_g.h["text"] = value;
		}
		var value1 = new haxe_ui_components_ButtonDefaultIconBehaviour(this);
		if(__map_reserved["icon"] != null) {
			_g.setReserved("icon",value1);
		} else {
			_g.h["icon"] = value1;
		}
		this.defaultBehaviours(_g);
		this._defaultLayout = new haxe_ui_components_ButtonLayout();
	}
	,createChildren: function() {
		this.registerEvent("mouseover",$bind(this,this._onMouseOver));
		this.registerEvent("mouseout",$bind(this,this._onMouseOut));
		this.registerEvent("mousedown",$bind(this,this._onMouseDown));
	}
	,destroyChildren: function() {
		haxe_ui_core_InteractiveComponent.prototype.destroyChildren.call(this);
		this.unregisterEvent("mouseover",$bind(this,this._onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this._onMouseOut));
		this.unregisterEvent("mousedown",$bind(this,this._onMouseDown));
		var label = this.findComponent(null,haxe_ui_components_Label);
		if(label != null) {
			this.removeComponent(label);
			label = null;
		}
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon != null) {
			this.removeComponent(icon);
			icon = null;
		}
	}
	,set_text: function(value) {
		value = haxe_ui_core_InteractiveComponent.prototype.set_text.call(this,value);
		this.invalidateComponent("data");
		return value;
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		if(style.icon != null) {
			this.set_icon(style.icon);
		}
		var label = this.findComponent(null,haxe_ui_components_Label);
		if(label != null && (label.customStyle.color != style.color || label.customStyle.fontName != style.fontName || label.customStyle.fontSize != style.fontSize || label.customStyle.cursor != style.cursor)) {
			label.customStyle.color = style.color;
			label.customStyle.fontName = style.fontName;
			label.customStyle.fontSize = style.fontSize;
			label.customStyle.cursor = style.cursor;
			label.invalidateComponent("style");
		}
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon != null && icon.customStyle.cursor != style.cursor) {
			icon.customStyle.cursor = style.cursor;
			icon.invalidateComponent("style");
		}
	}
	,validateData: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviourGet("text")) != this._text) {
			this.behaviourSet("text",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._text));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviourGet("icon")) != this._iconResource) {
			this.behaviourSet("icon",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._iconResource));
		}
	}
	,get_icon: function() {
		return this._iconResource;
	}
	,set_icon: function(value) {
		if(this._iconResource == value) {
			return value;
		}
		this._iconResource = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_toggle: function() {
		return this._toggle;
	}
	,set_toggle: function(value) {
		if(value == this._toggle) {
			return value;
		}
		if(value == false) {
			this.unregisterEvent("click",$bind(this,this._onMouseClick));
			this.set_selected(false);
		} else {
			this.registerEvent("click",$bind(this,this._onMouseClick));
		}
		this._toggle = value;
		return value;
	}
	,_onMouseOver: function(event) {
		if(this._toggle == true && this.hasClass(":down")) {
			return;
		}
		if(event.buttonDown == false || this._down == false) {
			this.addClass(":hover");
		} else {
			this.addClass(":down");
		}
	}
	,_onMouseOut: function(event) {
		if(this._toggle == true && this._selected == true) {
			return;
		}
		if(this.remainPressed == false) {
			this.removeClass(":down");
		}
		this.removeClass(":hover");
	}
	,_onMouseDown: function(event) {
		if(haxe_ui_focus_FocusManager.get_instance().get_focusInfo() != null && haxe_ui_focus_FocusManager.get_instance().get_focusInfo().currentFocus != null) {
			haxe_ui_focus_FocusManager.get_instance().get_focusInfo().currentFocus.set_focus(false);
		}
		this._down = true;
		this.addClass(":down");
		this.get_screen().registerEvent("mouseup",$bind(this,this._onMouseUp));
		if(this.repeater == true) {
			this._repeatTimer = new haxe_ui_util_Timer(this.repeatInterval,$bind(this,this._onRepeatTimer));
		}
	}
	,_onRepeatTimer: function() {
		if(this.hasClass(":hover") && this._down == true) {
			var event = new haxe_ui_core_MouseEvent("click");
			this.dispatch(event);
		}
	}
	,_onMouseUp: function(event) {
		event.cancel();
		this._down = false;
		this.get_screen().unregisterEvent("mouseup",$bind(this,this._onMouseUp));
		if(this._toggle == true) {
			return;
		}
		this.removeClass(":down");
		if(event.touchEvent == false && this.hitTest(event.screenX,event.screenY)) {
			this.addClass(":hover");
		}
		if(this._repeatTimer != null) {
			this._repeatTimer.stop();
			this._repeatTimer = null;
		}
	}
	,_onMouseClick: function(event) {
		this._selected = !this._selected;
		if(this._selected == false) {
			this.removeClass(":down");
		}
	}
	,get_selected: function() {
		return this._selected;
	}
	,set_selected: function(value) {
		if(value == this._selected || this._toggle == false) {
			return value;
		}
		this._selected = value;
		if(this._selected == false) {
			this.removeClass(":down");
		} else {
			this.addClass(":down");
		}
		this.removeClass(":hover");
		return value;
	}
	,get_iconPosition: function() {
		if(this.get_style() == null || this.get_style().iconPosition == null) {
			return null;
		}
		return this.get_style().iconPosition;
	}
	,set_iconPosition: function(value) {
		if(this.customStyle.iconPosition == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.iconPosition = value;
		this.invalidateComponent("style");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,get_fontSize: function() {
		if(this.get_style() == null || this.get_style().fontSize == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.get_style().fontSize);
	}
	,set_fontSize: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.customStyle.fontSize) == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.fontSize = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value);
		this.invalidateComponent("style");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,get_textAlign: function() {
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.customStyle.textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.textAlign = value;
		this.invalidateComponent("style");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.remainPressed = this.remainPressed;
		c.repeater = this.repeater;
		c.repeatInterval = this.repeatInterval;
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		c.set_toggle(this.get_toggle());
		if(this.get_iconPosition() != null) {
			c.set_iconPosition(this.get_iconPosition());
		}
		if(this.get_fontSize() != null) {
			c.set_fontSize(this.get_fontSize());
		}
		if(this.get_textAlign() != null) {
			c.set_textAlign(this.get_textAlign());
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Button();
	}
	,__class__: haxe_ui_components_Button
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_iconPosition:"set_iconPosition",get_iconPosition:"get_iconPosition",set_selected:"set_selected",get_selected:"get_selected",set_toggle:"set_toggle",get_toggle:"get_toggle",set_icon:"set_icon",get_icon:"get_icon"})
});
var haxe_ui_components_ButtonDefaultTextBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ButtonDefaultTextBehaviour"] = haxe_ui_components_ButtonDefaultTextBehaviour;
haxe_ui_components_ButtonDefaultTextBehaviour.__name__ = ["haxe","ui","components","ButtonDefaultTextBehaviour"];
haxe_ui_components_ButtonDefaultTextBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ButtonDefaultTextBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value)) {
			return;
		}
		var button = this._component;
		var label = button.findComponent(null,haxe_ui_components_Label);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("button-label");
			label.scriptAccess = false;
			button.addComponent(label);
		}
		label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
	}
	,__class__: haxe_ui_components_ButtonDefaultTextBehaviour
});
var haxe_ui_components_ButtonDefaultIconBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ButtonDefaultIconBehaviour"] = haxe_ui_components_ButtonDefaultIconBehaviour;
haxe_ui_components_ButtonDefaultIconBehaviour.__name__ = ["haxe","ui","components","ButtonDefaultIconBehaviour"];
haxe_ui_components_ButtonDefaultIconBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ButtonDefaultIconBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	get: function() {
		var button = this._component;
		var icon = button.findComponent(null,haxe_ui_components_Image);
		if(icon == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(icon.get_resource());
	}
	,set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value)) {
			return;
		}
		var button = this._component;
		var icon = button.findComponent(null,haxe_ui_components_Image);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.addClass("icon");
			icon.set_id("button-icon");
			icon.scriptAccess = false;
			button.addComponentAt(icon,0);
		}
		icon.set_resource(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
	}
	,__class__: haxe_ui_components_ButtonDefaultIconBehaviour
});
var haxe_ui_components_ButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.ButtonLayout"] = haxe_ui_components_ButtonLayout;
haxe_ui_components_ButtonLayout.__name__ = ["haxe","ui","components","ButtonLayout"];
haxe_ui_components_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_ButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	get_iconPosition: function() {
		if(this.get_component().get_style() == null || this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var label = this.get_component().findComponent("button-label");
		var icon = this.get_component().findComponent("button-icon");
		var _g = this.get_iconPosition();
		switch(_g) {
		case "far-right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if(this.get_iconPosition() == "far-right") {
					if(cx + this.get_paddingLeft() + this.get_paddingRight() < this.get_component().get_componentWidth()) {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
					} else {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					}
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "left":case "right":
			if(label != null && icon != null) {
				var cx1 = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x1 = this.get_component().get_componentWidth() / 2 - cx1 / 2 | 0;
				if(this.get_iconPosition() == "right") {
					label.set_left(x1 + this.marginLeft(label) - this.marginRight(label));
					x1 += this.get_horizontalSpacing() + label.get_componentWidth();
					icon.set_left(x1 + this.marginLeft(icon) - this.marginRight(icon));
				} else {
					icon.set_left(x1 + this.marginLeft(icon) - this.marginRight(icon));
					x1 += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x1 + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "bottom":case "top":
			if(label != null && icon != null) {
				var cy = label.get_componentHeight() + icon.get_componentHeight() + this.get_verticalSpacing();
				var y = this.get_component().get_componentHeight() / 2 - cy / 2 | 0;
				if(this.get_iconPosition() == "bottom") {
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
					y += this.get_verticalSpacing() + label.get_componentHeight();
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
				} else {
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
					y += this.get_verticalSpacing() + icon.get_componentHeight();
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
				}
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
			} else if(label != null) {
				label.set_left((this.get_component().get_componentWidth() / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		}
	}
	,getTextAlignPos: function(label,usableWidth) {
		var _g = (js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign();
		switch(_g) {
		case "left":
			return this.marginLeft(label) + this.get_paddingLeft();
		case "right":
			return usableWidth - label.get_componentWidth() - this.marginRight(label) - this.get_paddingRight();
		default:
			return (usableWidth / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label);
		}
	}
	,__class__: haxe_ui_components_ButtonLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components_CheckBox = function() {
	this._selected = false;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.CheckBox"] = haxe_ui_components_CheckBox;
haxe_ui_components_CheckBox.__name__ = ["haxe","ui","components","CheckBox"];
haxe_ui_components_CheckBox.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBox.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	createDefaults: function() {
		haxe_ui_core_InteractiveComponent.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_CheckBoxDefaultTextBehaviour(this);
		if(__map_reserved["text"] != null) {
			_g.setReserved("text",value);
		} else {
			_g.h["text"] = value;
		}
		var value1 = new haxe_ui_components_CheckBoxDefaultSelectedBehaviour(this);
		if(__map_reserved["selected"] != null) {
			_g.setReserved("selected",value1);
		} else {
			_g.h["selected"] = value1;
		}
		this.defaultBehaviours(_g);
		this._defaultLayout = new haxe_ui_layouts_HorizontalLayout();
	}
	,createChildren: function() {
		var checkboxValue = this.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(checkboxValue == null) {
			checkboxValue = new haxe_ui_components_CheckBoxValue();
			checkboxValue.set_id("checkbox-value");
			checkboxValue.addClass("checkbox-value");
			this.addComponent(checkboxValue);
			checkboxValue.registerEvent("click",$bind(this,this._onClick));
			checkboxValue.registerEvent("mouseover",$bind(this,this._onMouseOver));
			checkboxValue.registerEvent("mouseout",$bind(this,this._onMouseOut));
		}
	}
	,destroyChildren: function() {
		var value = this.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(value != null) {
			this.removeComponent(value);
			value = null;
		}
		var label = this.findComponent(null,haxe_ui_components_Label);
		if(label != null) {
			this.removeComponent(label);
			label = null;
		}
	}
	,get_value: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this.get_selected());
	}
	,set_value: function(value) {
		this.set_selected(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value));
		return value;
	}
	,set_text: function(value) {
		if(this._text == value) {
			return value;
		}
		this.invalidateComponent("data");
		this._text = value;
		return value;
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		var label = this.findComponent(null,haxe_ui_components_Label);
		if(label != null && (label.customStyle.color != style.color || label.customStyle.fontName != style.fontName || label.customStyle.fontSize != style.fontSize || label.customStyle.cursor != style.cursor)) {
			label.customStyle.color = style.color;
			label.customStyle.fontName = style.fontName;
			label.customStyle.fontSize = style.fontSize;
			label.customStyle.cursor = style.cursor;
			label.invalidateComponent("style");
		}
	}
	,validateData: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviourGet("text")) != this._text) {
			this.behaviourSet("text",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._text));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviourGet("selected")) != this._selected) {
			this.behaviourSet("selected",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._selected));
			var event = new haxe_ui_core_UIEvent("change");
			this.dispatch(event);
		}
	}
	,set_selected: function(value) {
		if(value == this._selected) {
			return value;
		}
		this.invalidateComponent("data");
		this._selected = value;
		return value;
	}
	,get_selected: function() {
		return this._selected;
	}
	,toggleSelected: function() {
		return this.set_selected(!this.get_selected());
	}
	,_onClick: function(event) {
		this.toggleSelected();
		var event1 = new haxe_ui_core_UIEvent("change");
		this.dispatch(event1);
	}
	,_onMouseOver: function(event) {
		this.addClass(":hover");
		var value = this.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(value != null) {
			value.addClass(":hover");
		}
	}
	,_onMouseOut: function(event) {
		this.removeClass(":hover");
		var value = this.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(value != null) {
			value.removeClass(":hover");
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBox();
	}
	,__class__: haxe_ui_components_CheckBox
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components_CheckBoxDefaultTextBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.CheckBoxDefaultTextBehaviour"] = haxe_ui_components_CheckBoxDefaultTextBehaviour;
haxe_ui_components_CheckBoxDefaultTextBehaviour.__name__ = ["haxe","ui","components","CheckBoxDefaultTextBehaviour"];
haxe_ui_components_CheckBoxDefaultTextBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_CheckBoxDefaultTextBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value)) {
			return;
		}
		var checkbox = this._component;
		var label = checkbox.findComponent(null,haxe_ui_components_Label);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("checkbox-label");
			label.addClass("checkbox-label");
			label.registerEvent("click",$bind(checkbox,checkbox._onClick));
			label.registerEvent("mouseover",$bind(checkbox,checkbox._onMouseOver));
			label.registerEvent("mouseout",$bind(checkbox,checkbox._onMouseOut));
			checkbox.addComponent(label);
		}
		label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
	}
	,get: function() {
		var checkbox = this._component;
		var label = checkbox.findComponent(null,haxe_ui_components_Label);
		if(label == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(label.get_text());
	}
	,__class__: haxe_ui_components_CheckBoxDefaultTextBehaviour
});
var haxe_ui_components_CheckBoxDefaultSelectedBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.CheckBoxDefaultSelectedBehaviour"] = haxe_ui_components_CheckBoxDefaultSelectedBehaviour;
haxe_ui_components_CheckBoxDefaultSelectedBehaviour.__name__ = ["haxe","ui","components","CheckBoxDefaultSelectedBehaviour"];
haxe_ui_components_CheckBoxDefaultSelectedBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_CheckBoxDefaultSelectedBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var checkbox = this._component;
		var checkboxValue = checkbox.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(checkboxValue == null) {
			return;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value) == true) {
			checkboxValue.addClass(":selected");
		} else {
			checkboxValue.removeClass(":selected");
		}
	}
	,get: function() {
		var checkbox = this._component;
		var checkboxValue = checkbox.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(checkboxValue == null) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false);
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(checkboxValue.hasClass(":selected"));
	}
	,__class__: haxe_ui_components_CheckBoxDefaultSelectedBehaviour
});
var haxe_ui_components_CheckBoxValue = function() {
	haxe_ui_core_InteractiveComponent.call(this);
	var icon = this.findComponent(null,haxe_ui_components_Image);
	if(icon == null) {
		icon = new haxe_ui_components_Image();
		icon.set_id("checkbox-icon");
		icon.addClass("checkbox-icon");
		this.addComponent(icon);
	}
};
$hxClasses["haxe.ui.components.CheckBoxValue"] = haxe_ui_components_CheckBoxValue;
haxe_ui_components_CheckBoxValue.__name__ = ["haxe","ui","components","CheckBoxValue"];
haxe_ui_components_CheckBoxValue.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBoxValue.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon != null) {
			icon.set_resource(style.icon);
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBoxValue();
	}
	,__class__: haxe_ui_components_CheckBoxValue
});
var haxe_ui_components_Column = function() {
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components.Column"] = haxe_ui_components_Column;
haxe_ui_components_Column.__name__ = ["haxe","ui","components","Column"];
haxe_ui_components_Column.__super__ = haxe_ui_components_Button;
haxe_ui_components_Column.prototype = $extend(haxe_ui_components_Button.prototype,{
	get_sortable: function() {
		return this.hasClass("sortable");
	}
	,set_sortable: function(value) {
		if(value == true) {
			this.addClass("sortable");
		} else {
			this.removeClass("sortable");
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Column();
	}
	,__class__: haxe_ui_components_Column
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_sortable:"set_sortable",get_sortable:"get_sortable"})
});
var haxe_ui_core_IDataComponent = function() { };
$hxClasses["haxe.ui.core.IDataComponent"] = haxe_ui_core_IDataComponent;
haxe_ui_core_IDataComponent.__name__ = ["haxe","ui","core","IDataComponent"];
haxe_ui_core_IDataComponent.prototype = {
	__class__: haxe_ui_core_IDataComponent
	,__properties__: {set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"}
};
var haxe_ui_components_DropDown = function() {
	this._listSize = 4;
	this._requireSelection = false;
	this._selectedIndex = -1;
	haxe_ui_components_Button.call(this);
	this.set_toggle(true);
	this.registerEvent("click",$bind(this,this.onMouseClick));
};
$hxClasses["haxe.ui.components.DropDown"] = haxe_ui_components_DropDown;
haxe_ui_components_DropDown.__name__ = ["haxe","ui","components","DropDown"];
haxe_ui_components_DropDown.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_components_DropDown.__super__ = haxe_ui_components_Button;
haxe_ui_components_DropDown.prototype = $extend(haxe_ui_components_Button.prototype,{
	createDefaults: function() {
		haxe_ui_components_Button.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_DropDownDefaultDataSourceBehaviour(this);
		if(__map_reserved["dataSource"] != null) {
			_g.setReserved("dataSource",value);
		} else {
			_g.h["dataSource"] = value;
		}
		var value1 = new haxe_ui_components_DropDownDefaultSelectedItemBehaviour(this);
		if(__map_reserved["selectedItem"] != null) {
			_g.setReserved("selectedItem",value1);
		} else {
			_g.h["selectedItem"] = value1;
		}
		this.defaultBehaviours(_g);
	}
	,create: function() {
		haxe_ui_components_Button.prototype.create.call(this);
	}
	,createChildren: function() {
		haxe_ui_components_Button.prototype.createChildren.call(this);
	}
	,destroyChildren: function() {
		haxe_ui_components_Button.prototype.destroyChildren.call(this);
		this.unregisterEvent("click",$bind(this,this.onMouseClick));
	}
	,onReady: function() {
		haxe_ui_components_Button.prototype.onReady.call(this);
		if(this._itemRenderer == null) {
			this.addComponent(new haxe_ui_core_BasicItemRenderer());
		}
	}
	,onDestroy: function() {
		this.hideList();
	}
	,get_dataSource: function() {
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		if(this._dataSource == value) {
			return value;
		}
		this.invalidateComponent("data");
		this._dataSource = value;
		return value;
	}
	,get_selectedIndex: function() {
		return this._selectedIndex;
	}
	,set_selectedIndex: function(value) {
		if(this._dataSource == null || value >= this._dataSource.get_size()) {
			return value;
		}
		if(this._selectedIndex == value) {
			return value;
		}
		this.invalidateComponent("data");
		this._selectedIndex = value;
		return this._selectedIndex;
	}
	,get_requireSelection: function() {
		return this._requireSelection;
	}
	,set_requireSelection: function(value) {
		if(this._requireSelection == value) {
			return value;
		}
		this.invalidateComponent("data");
		this._requireSelection = value;
		return value;
	}
	,get_listWidth: function() {
		return this._listWidth;
	}
	,set_listWidth: function(value) {
		this._listWidth = value;
		return value;
	}
	,get_listHeight: function() {
		return this._listHeight;
	}
	,set_listHeight: function(value) {
		this._listHeight = value;
		return value;
	}
	,get_listSize: function() {
		return this._listSize;
	}
	,set_listSize: function(value) {
		this._listSize = value;
		return value;
	}
	,get_listStyleNames: function() {
		return this._listStyleNames;
	}
	,set_listStyleNames: function(value) {
		this._listStyleNames = value;
		return value;
	}
	,addComponent: function(child) {
		var r = null;
		if((child instanceof haxe_ui_core_ItemRenderer) && this._itemRenderer == null) {
			this._itemRenderer = js_Boot.__cast(child , haxe_ui_core_ItemRenderer);
		} else {
			r = haxe_ui_components_Button.prototype.addComponent.call(this,child);
		}
		return r;
	}
	,onMouseClick: function(event) {
		if(this.get_native() == true) {
			return;
		}
		if(this.get_selected() == true) {
			this.showList();
		} else {
			this.hideList();
		}
	}
	,get_selectedItem: function() {
		return this.behaviourGetDynamic("selectedItem");
	}
	,onItemChange: function(event) {
		if(this._listview.get_selectedItem().get_data().value != null) {
			this.set_selectedIndex(this._dataSource.indexOf(this._listview.get_selectedItem().get_data()));
		}
		this.set_selected(false);
		this.onMouseClick(null);
		this.dispatch(new haxe_ui_core_UIEvent("change"));
	}
	,onScreenMouseDown: function(event) {
		if(this.hitTest(event.screenX,event.screenY) == true) {
			return;
		}
		if(this._listview != null && this._listview.hitTest(event.screenX,event.screenY) == true) {
			return;
		}
		this.set_selected(!this.get_selected());
		this.onMouseClick(null);
	}
	,showList: function() {
		if(this._listview == null) {
			this._listview = new haxe_ui_containers_ListView();
			if(this._itemRenderer != null) {
				this._listview.addComponent(this._itemRenderer);
			}
			this._listview.addClass("popup");
			if(this.get_id() != null) {
				this._listview.set_id(this.get_id() + "-popup");
				this._listview.addClass(this.get_id() + "-popup");
			}
			if(this._listStyleNames != null) {
				var _g = 0;
				var _g1 = this._listStyleNames.split(" ");
				while(_g < _g1.length) {
					var s = _g1[_g];
					++_g;
					this._listview.addClass(s);
				}
			}
			if(this._dataSource != null) {
				this._listview.set_dataSource(this._dataSource);
			}
			this._listview.registerEvent("change",$bind(this,this.onItemChange));
		}
		haxe_ui_core_Screen.get_instance().addComponent(this._listview);
		this._listview.set_left(this.get_screenLeft());
		this._listview.set_top(this.get_screenTop() + this.get_componentHeight());
		if(this._listWidth == null) {
			this._listview.set_width(Math.floor(this.get_componentWidth()));
		} else {
			this._listview.set_width(this._listWidth);
		}
		var listHeight = this._listHeight;
		if(this._listHeight == null) {
			var n = this._listSize;
			if(n > this._listview.get_itemCount()) {
				n = this._listview.get_itemCount();
			}
			this._listview.syncValidation();
			listHeight = n * this._listview.get_itemHeight() + (this._listview.get_layout().get_paddingTop() + this._listview.get_layout().get_paddingBottom());
		}
		this._listview.set_height(listHeight);
		this._listview.syncValidation();
		if(this._listview.get_screenTop() + this._listview.get_height() > haxe_ui_core_Screen.get_instance().get_height()) {
			this._listview.set_top(this.get_screenTop() - this._listview.get_height());
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,hideList: function() {
		if(this._listview != null) {
			if(this._listview.get_selectedItem() != null) {
				this._listview.get_selectedItem().removeClass(":hover");
			}
			haxe_ui_core_Screen.get_instance().removeComponent(this._listview);
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,validateData: function() {
		if(this._listview != null) {
			this._listview.set_dataSource(this._dataSource);
		}
		this.behaviourSet("dataSource",haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource(this._dataSource));
		if(this._dataSource != null) {
			if(this._requireSelection == true && this._selectedIndex < 0 && this._dataSource.get_size() > 0) {
				this._selectedIndex = 0;
			}
			if(this._selectedIndex >= 0) {
				this._text = this._dataSource.get(this._selectedIndex).value;
			}
		}
		haxe_ui_components_Button.prototype.validateData.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if(this._dataSource != null) {
			c.set_dataSource(this._dataSource.clone());
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_DropDown();
	}
	,getProperty: function(name) {
		if(name == "selectedIndex") {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(this.get_selectedIndex());
		}
		return haxe_ui_components_Button.prototype.getProperty.call(this,name);
	}
	,setProperty: function(name,v) {
		if(name == "selectedIndex") {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(this.set_selectedIndex(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		}
		return haxe_ui_components_Button.prototype.setProperty.call(this,name,v);
	}
	,__class__: haxe_ui_components_DropDown
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{get_selectedItem:"get_selectedItem",set_listStyleNames:"set_listStyleNames",get_listStyleNames:"get_listStyleNames",set_listSize:"set_listSize",get_listSize:"get_listSize",set_listHeight:"set_listHeight",get_listHeight:"get_listHeight",set_listWidth:"set_listWidth",get_listWidth:"get_listWidth",set_requireSelection:"set_requireSelection",get_requireSelection:"get_requireSelection",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"})
});
var haxe_ui_components_DropDownDefaultDataSourceBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.DropDownDefaultDataSourceBehaviour"] = haxe_ui_components_DropDownDefaultDataSourceBehaviour;
haxe_ui_components_DropDownDefaultDataSourceBehaviour.__name__ = ["haxe","ui","components","DropDownDefaultDataSourceBehaviour"];
haxe_ui_components_DropDownDefaultDataSourceBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_DropDownDefaultDataSourceBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
	}
	,__class__: haxe_ui_components_DropDownDefaultDataSourceBehaviour
});
var haxe_ui_components_DropDownDefaultSelectedItemBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.DropDownDefaultSelectedItemBehaviour"] = haxe_ui_components_DropDownDefaultSelectedItemBehaviour;
haxe_ui_components_DropDownDefaultSelectedItemBehaviour.__name__ = ["haxe","ui","components","DropDownDefaultSelectedItemBehaviour"];
haxe_ui_components_DropDownDefaultSelectedItemBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_DropDownDefaultSelectedItemBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	getDynamic: function() {
		var dropDown = js_Boot.__cast(this._component , haxe_ui_components_DropDown);
		var lv = dropDown._listview;
		if(dropDown.get_dataSource() == null || dropDown._selectedIndex == -1) {
			return null;
		}
		return dropDown.get_dataSource().get(dropDown._selectedIndex);
	}
	,__class__: haxe_ui_components_DropDownDefaultSelectedItemBehaviour
});
var haxe_ui_components_HGrid = function() {
	haxe_ui_core_Component.call(this);
	this.set_rows(1);
};
$hxClasses["haxe.ui.components.HGrid"] = haxe_ui_components_HGrid;
haxe_ui_components_HGrid.__name__ = ["haxe","ui","components","HGrid"];
haxe_ui_components_HGrid.__super__ = haxe_ui_core_Component;
haxe_ui_components_HGrid.prototype = $extend(haxe_ui_core_Component.prototype,{
	createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		this._defaultLayout = new haxe_ui_layouts_HorizontalGridLayout();
	}
	,get_rows: function() {
		return this._rows;
	}
	,set_rows: function(value) {
		if(this._rows != value) {
			this._rows = value;
			(js_Boot.__cast(this.get_layout() , haxe_ui_layouts_HorizontalGridLayout)).set_rows(value);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_rows(this.get_rows());
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HGrid();
	}
	,__class__: haxe_ui_components_HGrid
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_rows:"set_rows",get_rows:"get_rows"})
});
var haxe_ui_components_Progress = function() {
	this._indeterminate = false;
	this._rangeEnd = 0;
	this._rangeStart = 0;
	this._max = 100;
	this._min = 0;
	this._pos = 0;
	haxe_ui_core_InteractiveComponent.call(this);
	this.set_allowFocus(false);
};
$hxClasses["haxe.ui.components.Progress"] = haxe_ui_components_Progress;
haxe_ui_components_Progress.__name__ = ["haxe","ui","components","Progress"];
haxe_ui_components_Progress.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Progress.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	createDefaults: function() {
		haxe_ui_core_InteractiveComponent.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_ProgressDefaultMinBehaviour(this);
		if(__map_reserved["min"] != null) {
			_g.setReserved("min",value);
		} else {
			_g.h["min"] = value;
		}
		var value1 = new haxe_ui_components_ProgressDefaultMaxBehaviour(this);
		if(__map_reserved["max"] != null) {
			_g.setReserved("max",value1);
		} else {
			_g.h["max"] = value1;
		}
		var value2 = new haxe_ui_components_ProgressDefaultPosBehaviour(this);
		if(__map_reserved["pos"] != null) {
			_g.setReserved("pos",value2);
		} else {
			_g.h["pos"] = value2;
		}
		var value3 = new haxe_ui_components_ProgressDefaultRangeStartBehaviour(this);
		if(__map_reserved["rangeStart"] != null) {
			_g.setReserved("rangeStart",value3);
		} else {
			_g.h["rangeStart"] = value3;
		}
		var value4 = new haxe_ui_components_ProgressDefaultRangeEndBehaviour(this);
		if(__map_reserved["rangeEnd"] != null) {
			_g.setReserved("rangeEnd",value4);
		} else {
			_g.h["rangeEnd"] = value4;
		}
		var value5 = new haxe_ui_components_ProgressDefaultIndeterminateBehaviour(this);
		if(__map_reserved["indeterminate"] != null) {
			_g.setReserved("indeterminate",value5);
		} else {
			_g.h["indeterminate"] = value5;
		}
		this.defaultBehaviours(_g);
	}
	,createChildren: function() {
		if(this._value == null) {
			this._value = new haxe_ui_core_Component();
			this._value.set_id("progress-value");
			this._value.addClass("progress-value",false);
			this.addComponent(this._value);
		}
	}
	,destroyChildren: function() {
		if(this._value != null) {
			this.removeComponent(this._value);
			this._value = null;
		}
	}
	,get_value: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_pos());
	}
	,set_value: function(value) {
		this.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value));
		return value;
	}
	,get_pos: function() {
		return this._pos;
	}
	,set_pos: function(value) {
		if(this._ready) {
			if(value < this._min) {
				value = this._min;
			}
			if(value > this._max) {
				value = this._max;
			}
		}
		if(value == this._pos) {
			return value;
		}
		this.invalidateComponent("data");
		this._pos = value;
		return value;
	}
	,get_min: function() {
		return this._min;
	}
	,set_min: function(value) {
		if(value == this._min) {
			return value;
		}
		this._min = value;
		this.behaviourSet("min",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		return value;
	}
	,get_max: function() {
		return this._max;
	}
	,set_max: function(value) {
		if(value == this._max) {
			return value;
		}
		this._max = value;
		this.behaviourSet("max",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		return value;
	}
	,get_rangeStart: function() {
		return this._rangeStart;
	}
	,set_rangeStart: function(value) {
		if(this._ready) {
			if(value < this._min) {
				value = this._min;
			}
			if(value >= this._rangeEnd) {
				value = this._rangeEnd;
			}
		}
		this._rangeStart = value;
		return value;
	}
	,get_rangeEnd: function() {
		return this._rangeEnd;
	}
	,set_rangeEnd: function(value) {
		if(this._ready) {
			if(value > this._max) {
				value = this._max;
			}
			if(value <= this._rangeStart) {
				value = this._rangeStart;
			}
		}
		this._rangeEnd = value;
		this.behaviourSet("rangeEnd",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(value));
		return value;
	}
	,get_indeterminate: function() {
		return this._indeterminate;
	}
	,set_indeterminate: function(value) {
		if(value == this._indeterminate) {
			return value;
		}
		this._indeterminate = value;
		this.behaviourSet("indeterminate",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(value));
		return value;
	}
	,validateData: function() {
		var minValue = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("min"));
		var maxValue = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("max"));
		var indeterminateValue = haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviourGet("indeterminate"));
		if(indeterminateValue != this._indeterminate) {
			this.behaviourSet("indeterminate",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._indeterminate));
		}
		if(minValue != this._min) {
			this.behaviourSet("min",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._min));
		}
		if(maxValue != this._max) {
			this.behaviourSet("max",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._max));
		}
		if(this._indeterminate == false) {
			var posValue = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("pos"));
			if(posValue != this._pos) {
				this.behaviourSet("pos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._pos));
				var changeEvent = new haxe_ui_core_UIEvent("change");
				this.dispatch(changeEvent);
				this.handleBindings(["value"]);
			}
		} else {
			var rangeStartValue = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("rangeStart"));
			var rangeEndValue = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("rangeEnd"));
			if(rangeStartValue != this._rangeStart) {
				this.behaviourSet("rangeStart",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._rangeStart));
			}
			if(rangeEndValue != this._rangeEnd) {
				this.behaviourSet("rangeEnd",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._rangeEnd));
			}
		}
	}
	,getProperty: function(name) {
		switch(name) {
		case "indeterminate":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this.get_indeterminate());
		case "max":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_max());
		case "min":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_min());
		case "pos":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_pos());
		case "rangeEnd":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_rangeEnd());
		case "rangeStart":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_rangeStart());
		}
		return haxe_ui_core_InteractiveComponent.prototype.getProperty.call(this,name);
	}
	,setProperty: function(name,v) {
		switch(name) {
		case "indeterminate":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this.set_indeterminate(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(v)));
		case "max":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_max(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "min":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_min(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "pos":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "rangeEnd":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_rangeEnd(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "rangeStart":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_rangeStart(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		}
		return haxe_ui_core_InteractiveComponent.prototype.setProperty.call(this,name,v);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_pos(this.get_pos());
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		c.set_rangeStart(this.get_rangeStart());
		c.set_rangeEnd(this.get_rangeEnd());
		c.set_indeterminate(this.get_indeterminate());
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Progress();
	}
	,__class__: haxe_ui_components_Progress
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_indeterminate:"set_indeterminate",get_indeterminate:"get_indeterminate",set_rangeEnd:"set_rangeEnd",get_rangeEnd:"get_rangeEnd",set_rangeStart:"set_rangeStart",get_rangeStart:"get_rangeStart",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_pos:"set_pos",get_pos:"get_pos"})
});
var haxe_ui_components_HProgress = function() {
	haxe_ui_components_Progress.call(this);
};
$hxClasses["haxe.ui.components.HProgress"] = haxe_ui_components_HProgress;
haxe_ui_components_HProgress.__name__ = ["haxe","ui","components","HProgress"];
haxe_ui_components_HProgress.__super__ = haxe_ui_components_Progress;
haxe_ui_components_HProgress.prototype = $extend(haxe_ui_components_Progress.prototype,{
	createDefaults: function() {
		haxe_ui_components_Progress.prototype.createDefaults.call(this);
		this._defaultLayout = new haxe_ui_components_HProgressLayout();
	}
	,createChildren: function() {
		haxe_ui_components_Progress.prototype.createChildren.call(this);
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(150);
		}
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(20);
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Progress.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HProgress();
	}
	,__class__: haxe_ui_components_HProgress
});
var haxe_ui_components_HProgressLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.HProgressLayout"] = haxe_ui_components_HProgressLayout;
haxe_ui_components_HProgressLayout.__name__ = ["haxe","ui","components","HProgressLayout"];
haxe_ui_components_HProgressLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_HProgressLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var value = this.get_component().findComponent("progress-value");
		var progress = this.get_component();
		if(value != null) {
			var ucx = this.get_usableWidth();
			var cx = 0;
			if(progress.get_indeterminate() == false) {
				cx = (progress.get_pos() - progress.get_min()) / (progress.get_max() - progress.get_min()) * ucx;
			} else {
				cx = (progress.get_rangeEnd() - progress.get_rangeStart() - progress.get_min()) / (progress.get_max() - progress.get_min()) * ucx;
			}
			if(cx < 0) {
				cx = 0;
			} else if(cx > ucx) {
				cx = ucx;
			}
			if(cx == 0) {
				value.set_componentWidth(0);
				value.set_hidden(true);
			} else {
				value.set_componentWidth(cx);
				value.set_hidden(false);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var value = this.get_component().findComponent("progress-value");
		var progress = this.get_component();
		if(value != null) {
			if(progress.get_indeterminate() == true) {
				var ucx = this.get_usableWidth();
				value.set_left(this.get_paddingLeft() + (progress.get_rangeStart() - progress.get_min()) / (progress.get_max() - progress.get_min()) * ucx);
			}
		}
	}
	,__class__: haxe_ui_components_HProgressLayout
});
var haxe_ui_components_Scroll = function() {
	this._mouseDownOffset = -1;
	this._incrementSize = 20;
	this._pageSize = 0;
	this._max = 100;
	this._min = 0;
	this._pos = 0;
	haxe_ui_core_InteractiveComponent.call(this);
	this.set_allowFocus(false);
};
$hxClasses["haxe.ui.components.Scroll"] = haxe_ui_components_Scroll;
haxe_ui_components_Scroll.__name__ = ["haxe","ui","components","Scroll"];
haxe_ui_components_Scroll.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Scroll.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	createDefaults: function() {
		haxe_ui_core_InteractiveComponent.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_ScrollDefaultMinBehaviour(this);
		if(__map_reserved["min"] != null) {
			_g.setReserved("min",value);
		} else {
			_g.h["min"] = value;
		}
		var value1 = new haxe_ui_components_ScrollDefaultMaxBehaviour(this);
		if(__map_reserved["max"] != null) {
			_g.setReserved("max",value1);
		} else {
			_g.h["max"] = value1;
		}
		var value2 = new haxe_ui_components_ScrollDefaultPosBehaviour(this);
		if(__map_reserved["pos"] != null) {
			_g.setReserved("pos",value2);
		} else {
			_g.h["pos"] = value2;
		}
		var value3 = new haxe_ui_components_ScrollDefaultPageSizeBehaviour(this);
		if(__map_reserved["pageSize"] != null) {
			_g.setReserved("pageSize",value3);
		} else {
			_g.h["pageSize"] = value3;
		}
		this.defaultBehaviours(_g);
	}
	,createChildren: function() {
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(100);
		}
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(100);
		}
		this.registerEvent("mousedown",$bind(this,this._onMouseDown));
		if(this._deincButton == null) {
			this._deincButton = new haxe_ui_components_Button();
			this._deincButton.scriptAccess = false;
			this._deincButton.customStyle.native = false;
			this._deincButton.set_id("scroll-deinc-button");
			this._deincButton.addClass("deinc");
			this._deincButton.set_allowFocus(false);
			this._deincButton.repeater = true;
			this._deincButton.registerEvent("click",$bind(this,this._onDeinc));
			this.addComponent(this._deincButton);
		}
		if(this._incButton == null) {
			this._incButton = new haxe_ui_components_Button();
			this._incButton.scriptAccess = false;
			this._incButton.customStyle.native = false;
			this._incButton.set_id("scroll-inc-button");
			this._incButton.addClass("inc");
			this._incButton.set_allowFocus(false);
			this._incButton.repeater = true;
			this._incButton.registerEvent("click",$bind(this,this._onInc));
			this.addComponent(this._incButton);
		}
		if(this._thumb == null) {
			this._thumb = new haxe_ui_components_Button();
			this._thumb.scriptAccess = false;
			this._thumb.customStyle.native = false;
			this._thumb.set_id("scroll-thumb-button");
			this._thumb.addClass("thumb");
			this._thumb.set_allowFocus(false);
			this._thumb.remainPressed = true;
			this._thumb.registerEvent("mousedown",$bind(this,this._onThumbMouseDown));
			this.addComponent(this._thumb);
		}
	}
	,get_value: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_pos());
	}
	,set_value: function(value) {
		this.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value));
		return value;
	}
	,validateData: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("min")) != this._min) {
			this.behaviourSet("min",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._min));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("max")) != this._max) {
			this.behaviourSet("max",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._max));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("pageSize")) != this._pageSize) {
			this.behaviourSet("pageSize",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._pageSize));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("pos")) != this._pos) {
			this.behaviourSet("pos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._pos));
			var changeEvent = new haxe_ui_core_UIEvent("change");
			this.dispatch(changeEvent);
			this.handleBindings(["value"]);
		}
	}
	,get_pos: function() {
		return this._pos;
	}
	,set_pos: function(value) {
		if(this._ready) {
			if(value < this._min) {
				value = this._min;
			}
			if(value > this._max) {
				value = this._max;
			}
		}
		if(value != this._pos) {
			this._pos = value;
			this.invalidateComponent("data");
		}
		return value;
	}
	,animatePos: function(value) {
		if(this.get_animatable() == false) {
			this.set_pos(value);
			return;
		}
		var animationId = this.getClassProperty("animation.pos");
		if(animationId == null) {
			this.set_pos(value);
			return;
		}
		var tmp = haxe_ui_animation_AnimationManager.get_instance();
		var _g = new haxe_ds_StringMap();
		if(__map_reserved["target"] != null) {
			_g.setReserved("target",this);
		} else {
			_g.h["target"] = this;
		}
		var _g1 = new haxe_ds_StringMap();
		if(__map_reserved["pos"] != null) {
			_g1.setReserved("pos",value);
		} else {
			_g1.h["pos"] = value;
		}
		tmp.run(animationId,_g,_g1);
	}
	,get_min: function() {
		return this._min;
	}
	,set_min: function(value) {
		if(value != this._min) {
			this._min = value;
			if(this._pos < this._min) {
				this._pos = this._min;
			}
			this.invalidateComponent("data");
		}
		return value;
	}
	,get_max: function() {
		return this._max;
	}
	,set_max: function(value) {
		if(value != this._max) {
			this._max = value;
			if(this._pos > this._max) {
				this._pos = this._max;
			}
			this.invalidateComponent("data");
		}
		return value;
	}
	,get_pageSize: function() {
		return this._pageSize;
	}
	,set_pageSize: function(value) {
		if(value == this._pageSize) {
			return value;
		}
		this._pageSize = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_incrementSize: function() {
		return this._incrementSize;
	}
	,set_incrementSize: function(value) {
		if(this._incrementSize == value) {
			return value;
		}
		this._incrementSize = value;
		return value;
	}
	,_onDeinc: function(event) {
		this.deincrementValue();
	}
	,_onInc: function(event) {
		this.incrementValue();
	}
	,_onThumbMouseDown: function(event) {
		this.get_screen().registerEvent("mouseup",$bind(this,this._onScreenMouseUp));
		this.get_screen().registerEvent("mousemove",$bind(this,this._onScreenMouseMove));
	}
	,_onScreenMouseMove: function(event) {
	}
	,_onScreenMouseUp: function(event) {
		this._mouseDownOffset = -1;
		this.get_screen().unregisterEvent("mouseup",$bind(this,this._onScreenMouseUp));
		this.get_screen().unregisterEvent("mousemove",$bind(this,this._onScreenMouseMove));
	}
	,_onMouseDown: function(event) {
	}
	,deincrementValue: function() {
		this.animatePos(this.get_pos() - this._incrementSize);
	}
	,incrementValue: function() {
		this.animatePos(this.get_pos() + this._incrementSize);
	}
	,getProperty: function(name) {
		switch(name) {
		case "incrementSize":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_incrementSize());
		case "max":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_max());
		case "min":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_min());
		case "pageSize":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_pageSize());
		case "pos":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_pos());
		}
		return haxe_ui_core_InteractiveComponent.prototype.getProperty.call(this,name);
	}
	,setProperty: function(name,v) {
		switch(name) {
		case "incrementSize":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_incrementSize(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "max":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_max(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "min":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_min(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "pageSize":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_pageSize(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "pos":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		}
		return haxe_ui_core_InteractiveComponent.prototype.setProperty.call(this,name,v);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_pos(this.get_pos());
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		c.set_pageSize(this.get_pageSize());
		c.set_incrementSize(this.get_incrementSize());
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Scroll();
	}
	,__class__: haxe_ui_components_Scroll
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_incrementSize:"set_incrementSize",get_incrementSize:"get_incrementSize",set_pageSize:"set_pageSize",get_pageSize:"get_pageSize",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_pos:"set_pos",get_pos:"get_pos"})
});
var haxe_ui_components_HScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.HScroll"] = haxe_ui_components_HScroll;
haxe_ui_components_HScroll.__name__ = ["haxe","ui","components","HScroll"];
haxe_ui_components_HScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_HScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayout = new haxe_ui_components_HScrollLayout();
	}
	,_onThumbMouseDown: function(event) {
		haxe_ui_components_Scroll.prototype._onThumbMouseDown.call(this,event);
		this._mouseDownOffset = event.screenX - this._thumb.get_left() + this.get_layout().get_paddingLeft();
	}
	,_onScreenMouseMove: function(event) {
		haxe_ui_components_Scroll.prototype._onScreenMouseMove.call(this,event);
		if(this._mouseDownOffset == -1) {
			return;
		}
		var xpos = event.screenX - this._mouseDownOffset;
		var minX = 0;
		if(this._deincButton != null && this._deincButton.get_hidden() == false) {
			minX = this._deincButton.get_componentWidth() + this.get_layout().get_horizontalSpacing();
		}
		var maxX = this.get_layout().get_usableWidth() - this._thumb.get_componentWidth();
		if(this._deincButton != null && this._deincButton.get_hidden() == false) {
			maxX += this._deincButton.get_componentWidth() + this.get_layout().get_horizontalSpacing();
		}
		if(xpos < minX) {
			xpos = minX;
		} else if(xpos > maxX) {
			xpos = maxX;
		}
		var ucx = this.get_layout().get_usableWidth();
		ucx -= this._thumb.get_componentWidth();
		var m = this.get_max() - this.get_min() | 0;
		var v = xpos - minX;
		var newValue = this.get_min() + v / ucx * m;
		this.set_pos(newValue);
	}
	,_onMouseDown: function(event) {
		if(event.screenX < this._thumb.get_screenLeft()) {
			this.animatePos(this.get_pos() - this.get_pageSize());
		} else if(event.screenX > this._thumb.get_screenLeft() + this._thumb.get_componentWidth()) {
			this.animatePos(this.get_pos() + this.get_pageSize());
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HScroll();
	}
	,__class__: haxe_ui_components_HScroll
});
var haxe_ui_components_HScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.HScrollLayout"] = haxe_ui_components_HScrollLayout;
haxe_ui_components_HScrollLayout.__name__ = ["haxe","ui","components","HScrollLayout"];
haxe_ui_components_HScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_HScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = this.get_component();
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var ucx = this.get_usableWidth();
			var thumbWidth = scroll.get_pageSize() / m * ucx;
			if(thumbWidth < this.get_innerHeight()) {
				thumbWidth = this.get_innerHeight();
			} else if(thumbWidth > ucx) {
				thumbWidth = ucx;
			}
			if(thumbWidth > 0 && isNaN(thumbWidth) == false) {
				thumb.set_componentWidth(thumbWidth);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_left(this.get_component().get_componentWidth() - inc.get_componentWidth() - this.get_paddingRight());
		}
		var scroll = this.get_component();
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableWidth();
			u -= thumb.get_componentWidth();
			var x = (scroll.get_pos() - scroll.get_min()) / m * u;
			x += this.get_paddingLeft();
			if(deinc != null && this.hidden(deinc) == false) {
				x += deinc.get_componentWidth() + this.get_horizontalSpacing();
			}
			thumb.set_left(x);
		}
	}
	,get_usableWidth: function() {
		var ucx = this.get_innerWidth();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucx -= deinc.get_componentWidth() + this.get_horizontalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucx -= inc.get_componentWidth() + this.get_horizontalSpacing();
		}
		return ucx;
	}
	,__class__: haxe_ui_components_HScrollLayout
});
var haxe_ui_components_Slider = function() {
	this._mouseDownOffset = -1;
	this._rangeEnd = 0;
	this._rangeStart = 0;
	this._max = 100;
	this._min = 0;
	this._pos = 0;
	this._round = false;
	haxe_ui_core_InteractiveComponent.call(this);
	this.set_allowFocus(false);
	this._behaviourUpdateOrder = ["min","max","pos"];
};
$hxClasses["haxe.ui.components.Slider"] = haxe_ui_components_Slider;
haxe_ui_components_Slider.__name__ = ["haxe","ui","components","Slider"];
haxe_ui_components_Slider.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Slider.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	createDefaults: function() {
		haxe_ui_core_InteractiveComponent.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_SliderDefaultMinBehaviour(this);
		if(__map_reserved["min"] != null) {
			_g.setReserved("min",value);
		} else {
			_g.h["min"] = value;
		}
		var value1 = new haxe_ui_components_SliderDefaultMaxBehaviour(this);
		if(__map_reserved["max"] != null) {
			_g.setReserved("max",value1);
		} else {
			_g.h["max"] = value1;
		}
		var value2 = new haxe_ui_components_SliderDefaultPosBehaviour(this);
		if(__map_reserved["pos"] != null) {
			_g.setReserved("pos",value2);
		} else {
			_g.h["pos"] = value2;
		}
		var value3 = new haxe_ui_components_SliderDefaultRangeStartBehaviour(this);
		if(__map_reserved["rangeStart"] != null) {
			_g.setReserved("rangeStart",value3);
		} else {
			_g.h["rangeStart"] = value3;
		}
		var value4 = new haxe_ui_components_SliderDefaultRangeEndBehaviour(this);
		if(__map_reserved["rangeEnd"] != null) {
			_g.setReserved("rangeEnd",value4);
		} else {
			_g.h["rangeEnd"] = value4;
		}
		this.defaultBehaviours(_g);
	}
	,createChildren: function() {
		haxe_ui_core_InteractiveComponent.prototype.createChildren.call(this);
		if(this._valueBackground == null) {
			this._valueBackground = new haxe_ui_core_Component();
			this._valueBackground.set_id("slider-value-background");
			this._valueBackground.addClass("slider-value-background");
			this.addComponent(this._valueBackground);
			this._valueBackground.registerEvent("mousedown",$bind(this,this._onValueBackgroundMouseDown));
		}
		if(this._value == null) {
			this._value = new haxe_ui_core_Component();
			this._value.set_id("slider-value");
			this._value.addClass("slider-value");
			this._valueBackground.addComponent(this._value);
			this._value.registerEvent("mousedown",$bind(this,this._onValueMouseDown));
		}
		if(this._rangeEndThumb == null) {
			this._rangeEndThumb = new haxe_ui_components_Button();
			this._rangeEndThumb.scriptAccess = false;
			this._rangeEndThumb.customStyle.native = false;
			this._rangeEndThumb.set_id("slider-range-end-button");
			this._rangeEndThumb.addClass("slider-button");
			this._rangeEndThumb.remainPressed = true;
			this.addComponent(this._rangeEndThumb);
			this._rangeEndThumb.registerEvent("mousedown",$bind(this,this._onRangeEndThumbMouseDown));
		}
	}
	,destroyChildren: function() {
		if(this._valueBackground != null) {
			if(this._value != null) {
				this._valueBackground.removeComponent(this._value);
				this._value = null;
			}
			this.removeComponent(this._valueBackground);
			this._valueBackground = null;
		}
		if(this._rangeEndThumb != null) {
			this.removeComponent(this._rangeEndThumb);
			this._rangeEndThumb = null;
		}
		if(this._rangeStartThumb != null) {
			this.removeComponent(this._rangeStartThumb);
			this._rangeStartThumb = null;
		}
	}
	,get_value: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_pos());
	}
	,set_value: function(value) {
		this.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value));
		return value;
	}
	,get_round: function() {
		return this._round;
	}
	,set_round: function(value) {
		this._round = value;
		return value;
	}
	,get_pos: function() {
		if(this._round == true) {
			return Math.round(this._pos);
		}
		return this._pos;
	}
	,set_pos: function(value) {
		this._pos = value;
		this.invalidateComponent("data");
		return value;
	}
	,animatePos: function(value,callback) {
		if(this.get_animatable() == false) {
			this.set_pos(value);
			return;
		}
		var animationId = this.getClassProperty("animation.pos");
		if(animationId == null) {
			this.set_pos(value);
			return;
		}
		if(this._currentAnimation != null) {
			this._currentAnimation.stop();
		}
		var tmp = haxe_ui_animation_AnimationManager.get_instance();
		var _g = new haxe_ds_StringMap();
		if(__map_reserved["target"] != null) {
			_g.setReserved("target",this);
		} else {
			_g.h["target"] = this;
		}
		var _g1 = new haxe_ds_StringMap();
		if(__map_reserved["pos"] != null) {
			_g1.setReserved("pos",value);
		} else {
			_g1.h["pos"] = value;
		}
		this._currentAnimation = tmp.run(animationId,_g,_g1,callback);
	}
	,get_min: function() {
		return this._min;
	}
	,set_min: function(value) {
		this._min = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_max: function() {
		return this._max;
	}
	,set_max: function(value) {
		this._max = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_rangeStart: function() {
		if(this._round == true) {
			return Math.round(this._rangeStart);
		}
		return this._rangeStart;
	}
	,set_rangeStart: function(value) {
		if(this._ready) {
			if(value < this._min) {
				value = this._min;
			}
			if(value >= this._rangeEnd - 1) {
				value = this._rangeEnd - 1;
			}
		}
		if(value != this._rangeStart) {
			if(this._rangeStartThumb == null) {
				this._rangeStartThumb = new haxe_ui_components_Button();
				this._rangeStartThumb.scriptAccess = false;
				this._rangeStartThumb.set_native(false);
				this._rangeStartThumb.set_id("slider-range-start-button");
				this._rangeStartThumb.addClass("slider-button");
				this._rangeStartThumb.remainPressed = true;
				this._rangeStartThumb.registerEvent("mousedown",$bind(this,this._onRangeStartThumbMouseDown));
				this.addComponent(this._rangeStartThumb);
			}
			this._rangeStart = value;
			this.invalidateComponent("data");
		}
		return value;
	}
	,animateRangeStart: function(value) {
		if(this.get_animatable() == false) {
			this.set_rangeStart(value);
			return;
		}
		var animationId = this.getClassProperty("animation.rangeStart");
		if(animationId == null) {
			this.set_rangeStart(value);
			return;
		}
		var tmp = haxe_ui_animation_AnimationManager.get_instance();
		var _g = new haxe_ds_StringMap();
		if(__map_reserved["target"] != null) {
			_g.setReserved("target",this);
		} else {
			_g.h["target"] = this;
		}
		var _g1 = new haxe_ds_StringMap();
		if(__map_reserved["rangeStart"] != null) {
			_g1.setReserved("rangeStart",value);
		} else {
			_g1.h["rangeStart"] = value;
		}
		tmp.run(animationId,_g,_g1);
	}
	,get_rangeEnd: function() {
		if(this._round == true) {
			return Math.round(this._rangeEnd);
		}
		return this._rangeEnd;
	}
	,set_rangeEnd: function(value) {
		if(this._ready) {
			if(value > this._max) {
				value = this._max;
			}
			if(value <= this._rangeStart + 1) {
				value = this._rangeStart + 1;
			}
		}
		if(value != this._rangeEnd) {
			this._rangeEnd = value;
			this.invalidateComponent("data");
		}
		return value;
	}
	,animateRangeEnd: function(value) {
		if(this.get_animatable() == false) {
			this.set_rangeEnd(value);
			return;
		}
		var animationId = this.getClassProperty("animation.rangeEnd");
		if(animationId == null) {
			this.set_rangeEnd(value);
			return;
		}
		var tmp = haxe_ui_animation_AnimationManager.get_instance();
		var _g = new haxe_ds_StringMap();
		if(__map_reserved["target"] != null) {
			_g.setReserved("target",this);
		} else {
			_g.h["target"] = this;
		}
		var _g1 = new haxe_ds_StringMap();
		if(__map_reserved["rangeEnd"] != null) {
			_g1.setReserved("rangeEnd",value);
		} else {
			_g1.h["rangeEnd"] = value;
		}
		tmp.run(animationId,_g,_g1);
	}
	,setRange: function(start,end) {
		var invalidate = false;
		if(start != this._rangeStart) {
			this._rangeStart = start;
			invalidate = true;
		}
		if(end != this._rangeEnd) {
			this._rangeEnd = end;
			invalidate = true;
		}
		if(invalidate == true) {
			this.invalidateComponent("data");
		}
	}
	,validateData: function() {
		var notifyChange = false;
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("min")) != this._min) {
			this.behaviourSet("min",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._min));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("max")) != this._max) {
			this.behaviourSet("max",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._max));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("rangeEnd")) != this._rangeEnd) {
			this.behaviourSet("rangeEnd",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._rangeEnd));
			notifyChange = true;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("rangeStart")) != this._rangeStart) {
			this.behaviourSet("rangeStart",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._rangeStart));
			notifyChange = true;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("pos")) != this._pos) {
			this.behaviourSet("pos",haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._pos));
			notifyChange = true;
		}
		if(notifyChange == true) {
			var changeEvent = new haxe_ui_core_UIEvent("change");
			this.dispatch(changeEvent);
			this.handleBindings(["value","pos"]);
		}
	}
	,_onValueBackgroundMouseDown: function(event) {
	}
	,_onValueMouseDown: function(event) {
		this._activeThumb = null;
		this.get_screen().registerEvent("mouseup",$bind(this,this._onScreenMouseUp));
		this.get_screen().registerEvent("mousemove",$bind(this,this._onScreenMouseMove));
	}
	,_onRangeEndThumbMouseDown: function(event) {
		this._activeThumb = this._rangeEndThumb;
		this.get_screen().registerEvent("mouseup",$bind(this,this._onScreenMouseUp));
		this.get_screen().registerEvent("mousemove",$bind(this,this._onScreenMouseMove));
	}
	,_onRangeStartThumbMouseDown: function(event) {
		this._activeThumb = this._rangeStartThumb;
		this.get_screen().registerEvent("mouseup",$bind(this,this._onScreenMouseUp));
		this.get_screen().registerEvent("mousemove",$bind(this,this._onScreenMouseMove));
	}
	,_onScreenMouseMove: function(event) {
		if(this._mouseDownOffset == -1) {
			return;
		}
		if(this._currentAnimation != null && event.buttonDown == true) {
			this._currentAnimation.stop();
		}
	}
	,_onScreenMouseUp: function(event) {
		this._mouseDownOffset = -1;
		this._activeThumb = null;
		this.get_screen().unregisterEvent("mouseup",$bind(this,this._onScreenMouseUp));
		this.get_screen().unregisterEvent("mousemove",$bind(this,this._onScreenMouseMove));
	}
	,getProperty: function(name) {
		switch(name) {
		case "max":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_max());
		case "min":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_min());
		case "pos":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_pos());
		case "rangeEnd":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_rangeEnd());
		case "rangeStart":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.get_rangeStart());
		case "round":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this.get_round());
		}
		return haxe_ui_core_InteractiveComponent.prototype.getProperty.call(this,name);
	}
	,setProperty: function(name,v) {
		switch(name) {
		case "max":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_max(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "min":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_min(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "pos":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "rangeEnd":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_rangeEnd(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "rangeStart":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this.set_rangeStart(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		case "round":
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this.set_round(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(v)));
		}
		return haxe_ui_core_InteractiveComponent.prototype.setProperty.call(this,name,v);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_round(this.get_round());
		c.set_pos(this.get_pos());
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		c.set_rangeStart(this.get_rangeStart());
		c.set_rangeEnd(this.get_rangeEnd());
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Slider();
	}
	,__class__: haxe_ui_components_Slider
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_rangeEnd:"set_rangeEnd",get_rangeEnd:"get_rangeEnd",set_rangeStart:"set_rangeStart",get_rangeStart:"get_rangeStart",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_pos:"set_pos",get_pos:"get_pos",set_round:"set_round",get_round:"get_round"})
});
var haxe_ui_components_HSlider = function() {
	haxe_ui_components_Slider.call(this);
};
$hxClasses["haxe.ui.components.HSlider"] = haxe_ui_components_HSlider;
haxe_ui_components_HSlider.__name__ = ["haxe","ui","components","HSlider"];
haxe_ui_components_HSlider.__super__ = haxe_ui_components_Slider;
haxe_ui_components_HSlider.prototype = $extend(haxe_ui_components_Slider.prototype,{
	createDefaults: function() {
		haxe_ui_components_Slider.prototype.createDefaults.call(this);
		this._defaultLayout = new haxe_ui_components_HSliderLayout();
	}
	,createChildren: function() {
		haxe_ui_components_Slider.prototype.createChildren.call(this);
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(150);
		}
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(20);
		}
		var tmp = this._valueBackground != null;
	}
	,_onValueBackgroundMouseDown: function(event) {
		var _gthis = this;
		haxe_ui_components_Slider.prototype._onValueBackgroundMouseDown.call(this,event);
		if(this._value.hitTest(event.screenX,event.screenY) == false) {
			if(this.get_rangeEnd() != this.get_rangeStart()) {
				if(event.screenX < this._rangeStartThumb.get_screenLeft()) {
					this._activeThumb = this._rangeStartThumb;
					var xpos = event.screenX - this._valueBackground.get_screenLeft() - this._activeThumb.get_componentWidth() / 2 - this._valueBackground.get_paddingLeft();
					this.animateRangeStart(this.calcPosFromCoord(xpos));
					this._onRangeStartThumbMouseDown(event);
				} else if(event.screenX > this._rangeEndThumb.get_screenLeft() + this._rangeEndThumb.get_componentWidth()) {
					this._activeThumb = this._rangeEndThumb;
					var xpos1 = event.screenX - this._valueBackground.get_screenLeft() - this._activeThumb.get_componentWidth() / 2 - this._valueBackground.get_paddingLeft();
					this.animateRangeEnd(this.calcPosFromCoord(xpos1));
					this._onRangeEndThumbMouseDown(event);
				}
			} else {
				this._activeThumb = this._rangeEndThumb;
				var xpos2 = event.screenX - this._valueBackground.get_screenLeft() - this._activeThumb.get_componentWidth() / 2 - this._valueBackground.get_paddingLeft();
				this.animatePos(this.calcPosFromCoord(xpos2),function() {
					if(_gthis._activeThumb != null) {
						var tmp = _gthis._activeThumb.get_componentWidth() / 2;
						var tmp1 = _gthis._valueBackground.get_paddingLeft();
						_gthis._mouseDownOffset = tmp + tmp1;
					}
				});
				this._onRangeEndThumbMouseDown(event);
			}
		}
	}
	,_onValueMouseDown: function(event) {
		var _gthis = this;
		haxe_ui_components_Slider.prototype._onValueMouseDown.call(this,event);
		if(this.get_rangeEnd() != this.get_rangeStart()) {
			this._mouseDownOffset = event.screenX - this._value.get_left();
		} else {
			this._activeThumb = this._rangeEndThumb;
			var xpos = event.screenX - this._valueBackground.get_screenLeft() - this._activeThumb.get_componentWidth() / 2 - this._valueBackground.get_paddingLeft();
			this.animatePos(this.calcPosFromCoord(xpos),function() {
				if(_gthis._activeThumb != null) {
					var tmp = _gthis._activeThumb.get_componentWidth() / 2;
					var tmp1 = _gthis._valueBackground.get_paddingLeft();
					_gthis._mouseDownOffset = tmp + tmp1;
				}
			});
			this._onRangeEndThumbMouseDown(event);
		}
	}
	,_onRangeEndThumbMouseDown: function(event) {
		haxe_ui_components_Slider.prototype._onRangeEndThumbMouseDown.call(this,event);
		this._mouseDownOffset = event.screenX - this._activeThumb.get_screenLeft() + this._valueBackground.get_paddingLeft();
	}
	,_onRangeStartThumbMouseDown: function(event) {
		haxe_ui_components_Slider.prototype._onRangeStartThumbMouseDown.call(this,event);
		this._mouseDownOffset = event.screenX - this._activeThumb.get_screenLeft() + this._valueBackground.get_paddingLeft();
	}
	,_onScreenMouseMove: function(event) {
		haxe_ui_components_Slider.prototype._onScreenMouseMove.call(this,event);
		if(this._mouseDownOffset == -1) {
			return;
		}
		if(this._activeThumb != null) {
			var xpos = event.screenX - this._valueBackground.get_screenLeft() - this._mouseDownOffset;
			if(this.get_rangeEnd() != this.get_rangeStart()) {
				if(this._activeThumb == this._rangeEndThumb) {
					this.set_rangeEnd(this.calcPosFromCoord(xpos));
				} else if(this._activeThumb == this._rangeStartThumb) {
					this.set_rangeStart(this.calcPosFromCoord(xpos));
				}
			} else {
				this.set_pos(this.calcPosFromCoord(xpos));
			}
		} else {
			var diff = this.get_rangeEnd() - this.get_rangeStart();
			var xpos1 = event.screenX - this._mouseDownOffset;
			this._activeThumb = this._rangeStartThumb;
			var start = this.calcPosFromCoord(xpos1 - this._activeThumb.get_componentWidth() / 2 - this._valueBackground.get_paddingLeft());
			this._activeThumb = null;
			if(start + diff > this.get_max()) {
				return;
			}
			var end = start + diff;
			this.setRange(start,end);
		}
	}
	,calcPosFromCoord: function(xpos) {
		var minX = -(this._activeThumb.get_componentWidth() / 2);
		var maxX = this.get_layout().get_usableWidth() - this._activeThumb.get_componentWidth() / 2 - (this._valueBackground.get_paddingLeft() + this._valueBackground.get_paddingRight());
		if(xpos < minX) {
			xpos = minX;
		} else if(xpos > maxX) {
			xpos = maxX;
		}
		var ucx = this.get_layout().get_usableWidth() - (this._valueBackground.get_paddingLeft() + this._valueBackground.get_paddingRight());
		var m = this.get_max() - this.get_min();
		var v = xpos - minX;
		var newValue = this.get_min() + v / ucx * m;
		return newValue;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Slider.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HSlider();
	}
	,__class__: haxe_ui_components_HSlider
});
var haxe_ui_components_HSliderLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.HSliderLayout"] = haxe_ui_components_HSliderLayout;
haxe_ui_components_HSliderLayout.__name__ = ["haxe","ui","components","HSliderLayout"];
haxe_ui_components_HSliderLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_HSliderLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var background = this.get_component().findComponent("slider-value-background");
		var value = null;
		if(background != null) {
			value = background.findComponent("slider-value");
		}
		var slider = this.get_component();
		if(value != null) {
			var ucx = background.get_layout().get_usableWidth();
			var cx = 0;
			if(slider.get_rangeStart() == slider.get_rangeEnd()) {
				cx = (slider.get_pos() - slider.get_min()) / (slider.get_max() - slider.get_min()) * ucx;
			} else {
				cx = (slider.get_rangeEnd() - slider.get_rangeStart() - slider.get_min()) / (slider.get_max() - slider.get_min()) * ucx;
			}
			if(cx < 0) {
				cx = 0;
			} else if(cx > ucx) {
				cx = ucx;
			}
			if(cx == 0) {
				value.set_componentWidth(cx);
				if(value.get_hidden() == false) {
					value.set_hidden(true);
					value.invalidateComponent("style");
				}
			} else {
				value.set_componentWidth(cx);
				if(value.get_hidden() == true) {
					value.set_hidden(false);
					value.invalidateComponent("style");
				}
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var background = this.get_component().findComponent("slider-value-background");
		var value = null;
		if(background != null) {
			value = background.findComponent("slider-value");
		}
		var slider = this.get_component();
		if(value != null) {
			var rangeStartButton = null;
			var rangeEndButton = this.get_component().findComponent("slider-range-end-button");
			var x = 0;
			if(slider.get_rangeStart() != slider.get_rangeEnd()) {
				rangeStartButton = this.get_component().findComponent("slider-range-start-button");
				var ucx = background.get_layout().get_usableWidth();
				x = (slider.get_rangeStart() - slider.get_min()) / (slider.get_max() - slider.get_min()) * ucx;
			}
			value.set_left(x + background.get_layout().get_paddingLeft());
			if(rangeStartButton != null) {
				rangeStartButton.set_left(x);
			}
			if(rangeEndButton != null) {
				rangeEndButton.set_left(this.get_paddingLeft() + value.get_left() + value.get_componentWidth() - rangeEndButton.get_componentWidth() / 2);
			}
		}
	}
	,__class__: haxe_ui_components_HSliderLayout
});
var haxe_ui_components_Image = function() {
	this._imageVerticalAlign = "center";
	this._imageHorizontalAlign = "center";
	this._scaleMode = "fill";
	this._resource = null;
	this._originalSize = new haxe_ui_util_Size();
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Image"] = haxe_ui_components_Image;
haxe_ui_components_Image.__name__ = ["haxe","ui","components","Image"];
haxe_ui_components_Image.__super__ = haxe_ui_core_Component;
haxe_ui_components_Image.prototype = $extend(haxe_ui_core_Component.prototype,{
	createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_ImageDefaultResourceBehaviour(this);
		if(__map_reserved["resource"] != null) {
			_g.setReserved("resource",value);
		} else {
			_g.h["resource"] = value;
		}
		this.defaultBehaviours(_g);
		this._defaultLayout = new haxe_ui_components_ImageLayout();
	}
	,get_value: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromDynamic(this.get_resource());
	}
	,set_value: function(value) {
		if(value == null) {
			return null;
		}
		this.set_resource(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
		return value;
	}
	,get_resource: function() {
		return this._resource;
	}
	,set_resource: function(value) {
		if(this._resource == value) {
			return value;
		}
		this._resource = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_scaleMode: function() {
		return this._scaleMode;
	}
	,set_scaleMode: function(value) {
		if(value == this._scaleMode) {
			return value;
		}
		this._scaleMode = value;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,get_imageHorizontalAlign: function() {
		return this._imageHorizontalAlign;
	}
	,set_imageHorizontalAlign: function(value) {
		if(value == this._imageHorizontalAlign) {
			return value;
		}
		this._imageHorizontalAlign = value;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,get_imageVerticalAlign: function() {
		return this._imageVerticalAlign;
	}
	,set_imageVerticalAlign: function(value) {
		if(value == this._imageVerticalAlign) {
			return value;
		}
		this._imageVerticalAlign = value;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,validateData: function() {
		var resourceValue = this.behaviourGetDynamic("resource");
		if(resourceValue != this._resource) {
			this.behaviourSet("resource",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._resource));
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_resource() != null) {
			c.set_resource(this.get_resource());
		}
		c.set_scaleMode(this.get_scaleMode());
		c.set_imageHorizontalAlign(this.get_imageHorizontalAlign());
		c.set_imageVerticalAlign(this.get_imageVerticalAlign());
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Image();
	}
	,getProperty: function(name) {
		if(name == "resource") {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this.get_resource());
		}
		return haxe_ui_core_Component.prototype.getProperty.call(this,name);
	}
	,setProperty: function(name,v) {
		if(name == "resource") {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this.set_resource(haxe_ui_util__$Variant_Variant_$Impl_$.toString(v)));
		}
		return haxe_ui_core_Component.prototype.setProperty.call(this,name,v);
	}
	,__class__: haxe_ui_components_Image
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_imageVerticalAlign:"set_imageVerticalAlign",get_imageVerticalAlign:"get_imageVerticalAlign",set_imageHorizontalAlign:"set_imageHorizontalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",set_scaleMode:"set_scaleMode",get_scaleMode:"get_scaleMode",set_resource:"set_resource",get_resource:"get_resource"})
});
var haxe_ui_components_ImageLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.ImageLayout"] = haxe_ui_components_ImageLayout;
haxe_ui_components_ImageLayout.__name__ = ["haxe","ui","components","ImageLayout"];
haxe_ui_components_ImageLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_ImageLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	get_imageScaleMode: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_scaleMode();
	}
	,get_imageHorizontalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageHorizontalAlign();
	}
	,get_imageVerticalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageVerticalAlign();
	}
	,resizeChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var usz = this.get_usableSize();
			var image = this._component;
			var imageDisplay = image.getImageDisplay();
			var maxWidth = this.get_usableSize().width;
			var maxHeight = this.get_usableSize().height;
			if(this.get_component().get_autoWidth() == true) {
				maxWidth = -1;
			}
			if(this._component.get_autoHeight() == true) {
				maxHeight = -1;
			}
			var scaleW = maxWidth != -1 ? maxWidth / image._originalSize.width : 1;
			var scaleH = maxHeight != -1 ? maxHeight / image._originalSize.height : 1;
			if(this.get_imageScaleMode() != "fill") {
				var scale;
				var _g = this.get_imageScaleMode();
				switch(_g) {
				case "fitheight":
					scale = scaleH;
					break;
				case "fitinside":
					scale = scaleW < scaleH ? scaleW : scaleH;
					break;
				case "fitoutside":
					scale = scaleW > scaleH ? scaleW : scaleH;
					break;
				case "fitwidth":
					scale = scaleW;
					break;
				default:
					scale = 1;
				}
				imageDisplay.set_imageWidth(image._originalSize.width * scale);
				imageDisplay.set_imageHeight(image._originalSize.height * scale);
			} else {
				imageDisplay.set_imageWidth(image._originalSize.width * scaleW);
				imageDisplay.set_imageHeight(image._originalSize.height * scaleH);
			}
			this.updateClipRect(usz);
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = this._component;
			var imageDisplay = this._component.getImageDisplay();
			var _g = image.get_imageHorizontalAlign();
			switch(_g) {
			case "center":
				imageDisplay.set_left((this._component.get_componentWidth() - imageDisplay.get_imageWidth()) / 2);
				break;
			case "left":
				imageDisplay.set_left(this.get_paddingLeft());
				break;
			case "right":
				imageDisplay.set_left(this._component.get_componentWidth() - imageDisplay.get_imageWidth() - this.get_paddingRight());
				break;
			}
			var _g1 = image.get_imageVerticalAlign();
			switch(_g1) {
			case "bottom":
				imageDisplay.set_top(this._component.get_componentHeight() - imageDisplay.get_imageHeight() - this.get_paddingBottom());
				break;
			case "center":
				imageDisplay.set_top((this._component.get_componentHeight() - imageDisplay.get_imageHeight()) / 2);
				break;
			case "top":
				imageDisplay.set_top(this.get_paddingTop());
				break;
			}
			this.updateClipRect(this.get_usableSize());
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasImageDisplay()) {
			size.width += this.get_component().getImageDisplay().get_imageWidth();
			size.height += this.get_component().getImageDisplay().get_imageHeight();
		}
		return size;
	}
	,updateClipRect: function(usz) {
		var imageDisplay = this._component.getImageDisplay();
		var rc = imageDisplay.get_imageClipRect();
		if(rc == null) {
			rc = new haxe_ui_util_Rectangle();
		}
		if(imageDisplay.get_imageWidth() > usz.width || imageDisplay.get_imageHeight() > usz.height) {
			rc.top = this.get_paddingLeft();
			rc.left = this.get_paddingTop();
			rc.width = usz.width;
			rc.height = usz.height;
		} else {
			rc = null;
		}
		imageDisplay.set_imageClipRect(rc);
	}
	,__class__: haxe_ui_components_ImageLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_imageVerticalAlign:"get_imageVerticalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",get_imageScaleMode:"get_imageScaleMode"})
});
var haxe_ui_components_ImageDefaultResourceBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ImageDefaultResourceBehaviour"] = haxe_ui_components_ImageDefaultResourceBehaviour;
haxe_ui_components_ImageDefaultResourceBehaviour.__name__ = ["haxe","ui","components","ImageDefaultResourceBehaviour"];
haxe_ui_components_ImageDefaultResourceBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ImageDefaultResourceBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(this._value == value) {
			return;
		}
		this._value = value;
		var image = this._component;
		if(value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value) || haxe_ui_util__$Variant_Variant_$Impl_$.toString(value) == "null") {
			image.removeImageDisplay();
			return;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(value)) {
			var resource = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
			if(!StringTools.startsWith(resource,"http://")) {
				haxe_ui_Toolkit.get_assets().getImage(resource,function(imageInfo) {
					if(imageInfo != null) {
						var display = image.getImageDisplay();
						if(display != null) {
							display.set_imageInfo(imageInfo);
							image._originalSize = new haxe_ui_util_Size(imageInfo.width,imageInfo.height);
							if(image.autoSize() == true && image.parentComponent != null) {
								var _this = image.parentComponent;
								if(!(_this._layout == null || _this._layoutLocked == true)) {
									_this.invalidateComponent("layout");
								}
							}
							image.validateLayout();
							display.validate();
						}
					}
				});
			}
		}
	}
	,getDynamic: function() {
		return this._value;
	}
	,__class__: haxe_ui_components_ImageDefaultResourceBehaviour
});
var haxe_ui_components_Label = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Label"] = haxe_ui_components_Label;
haxe_ui_components_Label.__name__ = ["haxe","ui","components","Label"];
haxe_ui_components_Label.__super__ = haxe_ui_core_Component;
haxe_ui_components_Label.prototype = $extend(haxe_ui_core_Component.prototype,{
	createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_LabelDefaultTextBehaviour(this);
		if(__map_reserved["text"] != null) {
			_g.setReserved("text",value);
		} else {
			_g.h["text"] = value;
		}
		this.defaultBehaviours(_g);
		this._defaultLayout = new haxe_ui_components_LabelLayout();
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		value = haxe_ui_core_Component.prototype.set_text.call(this,value);
		this.invalidateComponent("data");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,applyStyle: function(style) {
		haxe_ui_core_Component.prototype.applyStyle.call(this,style);
		if(this.hasTextDisplay() == true) {
			this.getTextDisplay().set_textStyle(style);
		}
	}
	,validateData: function() {
		this.behaviourSet("text",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._text));
		this.handleBindings(["text","value"]);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Label();
	}
	,get_textAlign: function() {
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.customStyle.textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style();
		}
		this.customStyle.textAlign = value;
		this.invalidateComponent("style");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,__class__: haxe_ui_components_Label
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_textAlign:"set_textAlign",get_textAlign:"get_textAlign"})
});
var haxe_ui_components_LabelLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.LabelLayout"] = haxe_ui_components_LabelLayout;
haxe_ui_components_LabelLayout.__name__ = ["haxe","ui","components","LabelLayout"];
haxe_ui_components_LabelLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_LabelLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		if(this.get_component().get_autoWidth() == false) {
			this.get_component().getTextDisplay().set_width(this.get_component().get_componentWidth() - this.get_paddingLeft() - this.get_paddingRight());
			this.get_component().getTextDisplay().set_wordWrap(true);
		}
		if(this.get_component().get_autoHeight() == true) {
			this.get_component().getTextDisplay().set_height(this.get_component().getTextDisplay().get_textHeight());
		} else {
			this.get_component().getTextDisplay().set_height(this.get_component().get_height());
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasTextDisplay() == true) {
			this.get_component().getTextDisplay().set_left(this.get_paddingLeft());
			this.get_component().getTextDisplay().set_top(this.get_paddingTop());
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextDisplay() == true) {
			size.width += this.get_component().getTextDisplay().get_textWidth();
			size.height += this.get_component().getTextDisplay().get_textHeight();
		}
		return size;
	}
	,textAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().textAlign == null) {
			return "left";
		}
		return child.get_style().textAlign;
	}
	,__class__: haxe_ui_components_LabelLayout
});
var haxe_ui_components_LabelDefaultTextBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.LabelDefaultTextBehaviour"] = haxe_ui_components_LabelDefaultTextBehaviour;
haxe_ui_components_LabelDefaultTextBehaviour.__name__ = ["haxe","ui","components","LabelDefaultTextBehaviour"];
haxe_ui_components_LabelDefaultTextBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_LabelDefaultTextBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value)) {
			value = haxe_ui_util__$Variant_Variant_$Impl_$.fromString("");
		}
		var label = this._component;
		label.getTextDisplay().set_text("" + haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
		if(label.isInvalid("display") == false) {
			label.invalidateComponent("display");
		}
	}
	,__class__: haxe_ui_components_LabelDefaultTextBehaviour
});
var haxe_ui_components_OptionBox = function() {
	this._selected = false;
	haxe_ui_core_InteractiveComponent.call(this);
	if(haxe_ui_components_OptionBox._groups == null) {
		haxe_ui_components_OptionBox._groups = new haxe_ds_StringMap();
	}
	this.set_groupName("defaultGroup");
};
$hxClasses["haxe.ui.components.OptionBox"] = haxe_ui_components_OptionBox;
haxe_ui_components_OptionBox.__name__ = ["haxe","ui","components","OptionBox"];
haxe_ui_components_OptionBox.optionInGroup = function(value,option) {
	var exists = false;
	var _this = haxe_ui_components_OptionBox._groups;
	var arr = __map_reserved[value] != null ? _this.getReserved(value) : _this.h[value];
	if(arr != null) {
		var _g = 0;
		while(_g < arr.length) {
			var test = arr[_g];
			++_g;
			if(test == option) {
				exists = true;
				break;
			}
		}
	}
	return exists;
};
haxe_ui_components_OptionBox.getGroupOptions = function(group) {
	var _this = haxe_ui_components_OptionBox._groups;
	if(__map_reserved[group] != null) {
		return _this.getReserved(group);
	} else {
		return _this.h[group];
	}
};
haxe_ui_components_OptionBox.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_OptionBox.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	createDefaults: function() {
		haxe_ui_core_InteractiveComponent.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_OptionBoxDefaultTextBehaviour(this);
		if(__map_reserved["text"] != null) {
			_g.setReserved("text",value);
		} else {
			_g.h["text"] = value;
		}
		var value1 = new haxe_ui_components_OptionBoxDefaultSelectedBehaviour(this);
		if(__map_reserved["selected"] != null) {
			_g.setReserved("selected",value1);
		} else {
			_g.h["selected"] = value1;
		}
		this.defaultBehaviours(_g);
		this._defaultLayout = new haxe_ui_layouts_HorizontalLayout();
	}
	,createChildren: function() {
		var optionboxValue = this.findComponent(null,haxe_ui_components_OptionBoxValue);
		if(optionboxValue == null) {
			optionboxValue = new haxe_ui_components_OptionBoxValue();
			optionboxValue.set_id("optionbox-value");
			optionboxValue.addClass("optionbox-value");
			this.addComponent(optionboxValue);
			optionboxValue.registerEvent("click",$bind(this,this._onClick));
			optionboxValue.registerEvent("mouseover",$bind(this,this._onMouseOver));
			optionboxValue.registerEvent("mouseout",$bind(this,this._onMouseOut));
		}
	}
	,destroyChildren: function() {
		var value = this.findComponent(null,haxe_ui_components_OptionBoxValue);
		if(value != null) {
			this.removeComponent(value);
			value = null;
		}
		var label = this.findComponent(null,haxe_ui_components_Label);
		if(label != null) {
			this.removeComponent(label);
			label = null;
		}
	}
	,get_value: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this.get_selected());
	}
	,set_value: function(value) {
		this.set_selected(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value));
		return value;
	}
	,set_text: function(value) {
		if(this._text == value) {
			return value;
		}
		this.invalidateComponent("data");
		this._text = value;
		return value;
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		var label = this.findComponent(null,haxe_ui_components_Label);
		if(label != null && (label.customStyle.color != style.color || label.customStyle.fontName != style.fontName || label.customStyle.fontSize != style.fontSize || label.customStyle.cursor != style.cursor)) {
			label.customStyle.color = style.color;
			label.customStyle.fontName = style.fontName;
			label.customStyle.fontSize = style.fontSize;
			label.customStyle.cursor = style.cursor;
			label.invalidateComponent("style");
		}
	}
	,validateData: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviourGet("text")) != this._text) {
			this.behaviourSet("text",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._text));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviourGet("selected")) != this._selected) {
			this.behaviourSet("selected",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._selected));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviourGet("group")) != this._groupName) {
			this.behaviourSet("group",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._groupName));
		}
	}
	,set_selected: function(value) {
		if(value == this._selected) {
			return value;
		}
		if(this._groupName != null && value == false) {
			var _this = haxe_ui_components_OptionBox._groups;
			var key = this._groupName;
			var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			var hasSelection = false;
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var option = arr[_g];
					++_g;
					if(option != this && option.get_selected() == true) {
						hasSelection = true;
						break;
					}
				}
			}
			if(hasSelection == false) {
				return value;
			}
		}
		this.invalidateComponent("data");
		this._selected = value;
		if(this._groupName != null && value == true) {
			var _this1 = haxe_ui_components_OptionBox._groups;
			var key1 = this._groupName;
			var arr1 = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
			if(arr1 != null) {
				var _g1 = 0;
				while(_g1 < arr1.length) {
					var option1 = arr1[_g1];
					++_g1;
					if(option1 != this) {
						option1.set_selected(false);
					}
				}
			}
		}
		return value;
	}
	,get_selected: function() {
		return this._selected;
	}
	,toggleSelected: function() {
		return this.set_selected(!this.get_selected());
	}
	,get_groupName: function() {
		return this._groupName;
	}
	,set_groupName: function(value) {
		if(value != null) {
			var _this = haxe_ui_components_OptionBox._groups;
			var arr = __map_reserved[value] != null ? _this.getReserved(value) : _this.h[value];
			if(arr != null) {
				HxOverrides.remove(arr,this);
			}
		}
		this.invalidateComponent("data");
		this._groupName = value;
		var _this1 = haxe_ui_components_OptionBox._groups;
		var arr1 = __map_reserved[value] != null ? _this1.getReserved(value) : _this1.h[value];
		if(arr1 == null) {
			arr1 = [];
		}
		if(haxe_ui_components_OptionBox.optionInGroup(value,this) == false) {
			arr1.push(this);
		}
		var _this2 = haxe_ui_components_OptionBox._groups;
		if(__map_reserved[value] != null) {
			_this2.setReserved(value,arr1);
		} else {
			_this2.h[value] = arr1;
		}
		return value;
	}
	,get_selectedOption: function() {
		var arr = haxe_ui_components_OptionBox.getGroupOptions(this._groupName);
		var selectionOption = null;
		if(arr != null) {
			var _g = 0;
			while(_g < arr.length) {
				var test = arr[_g];
				++_g;
				if(test.get_selected() == true) {
					selectionOption = test;
					break;
				}
			}
		}
		return selectionOption;
	}
	,_onClick: function(event) {
		this.toggleSelected();
	}
	,_onMouseOver: function(event) {
		this.addClass(":hover");
		var value = this.findComponent(null,haxe_ui_components_OptionBoxValue);
		if(value != null) {
			value.addClass(":hover");
		}
	}
	,_onMouseOut: function(event) {
		this.removeClass(":hover");
		var value = this.findComponent(null,haxe_ui_components_OptionBoxValue);
		if(value != null) {
			value.removeClass(":hover");
		}
	}
	,getProperty: function(name) {
		if(name == "selected") {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this.get_selected());
		}
		return haxe_ui_core_InteractiveComponent.prototype.getProperty.call(this,name);
	}
	,setProperty: function(name,v) {
		if(name == "selected") {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this.set_selected(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(v)));
		}
		return haxe_ui_core_InteractiveComponent.prototype.setProperty.call(this,name,v);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if(this.get_groupName() != null) {
			c.set_groupName(this.get_groupName());
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_OptionBox();
	}
	,__class__: haxe_ui_components_OptionBox
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{get_selectedOption:"get_selectedOption",set_groupName:"set_groupName",get_groupName:"get_groupName",set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components_OptionBoxDefaultTextBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.OptionBoxDefaultTextBehaviour"] = haxe_ui_components_OptionBoxDefaultTextBehaviour;
haxe_ui_components_OptionBoxDefaultTextBehaviour.__name__ = ["haxe","ui","components","OptionBoxDefaultTextBehaviour"];
haxe_ui_components_OptionBoxDefaultTextBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_OptionBoxDefaultTextBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var optionbox = this._component;
		var label = optionbox.findComponent(null,haxe_ui_components_Label);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("optionbox-label");
			label.addClass("optionbox-label");
			label.registerEvent("click",$bind(optionbox,optionbox._onClick));
			label.registerEvent("mouseover",$bind(optionbox,optionbox._onMouseOver));
			label.registerEvent("mouseout",$bind(optionbox,optionbox._onMouseOut));
			optionbox.addComponent(label);
		}
		label.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
	}
	,get: function() {
		var optionbox = this._component;
		var label = optionbox.findComponent(null,haxe_ui_components_Label);
		if(label == null) {
			return null;
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(label.get_text());
	}
	,__class__: haxe_ui_components_OptionBoxDefaultTextBehaviour
});
var haxe_ui_components_OptionBoxDefaultSelectedBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.OptionBoxDefaultSelectedBehaviour"] = haxe_ui_components_OptionBoxDefaultSelectedBehaviour;
haxe_ui_components_OptionBoxDefaultSelectedBehaviour.__name__ = ["haxe","ui","components","OptionBoxDefaultSelectedBehaviour"];
haxe_ui_components_OptionBoxDefaultSelectedBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_OptionBoxDefaultSelectedBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var optionbox = this._component;
		var optionboxValue = optionbox.findComponent(null,haxe_ui_components_OptionBoxValue);
		if(optionboxValue == null) {
			return;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value) == true) {
			optionboxValue.addClass(":selected");
		} else {
			optionboxValue.removeClass(":selected");
		}
	}
	,get: function() {
		var optionbox = this._component;
		var optionboxValue = optionbox.findComponent(null,haxe_ui_components_OptionBoxValue);
		if(optionboxValue == null) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false);
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(optionboxValue.hasClass(":selected"));
	}
	,__class__: haxe_ui_components_OptionBoxDefaultSelectedBehaviour
});
var haxe_ui_components_OptionBoxValue = function() {
	haxe_ui_core_InteractiveComponent.call(this);
	this._icon = new haxe_ui_components_Image();
	this._icon.set_id("optionbox-icon");
	this._icon.addClass("optionbox-icon");
	this.addComponent(this._icon);
};
$hxClasses["haxe.ui.components.OptionBoxValue"] = haxe_ui_components_OptionBoxValue;
haxe_ui_components_OptionBoxValue.__name__ = ["haxe","ui","components","OptionBoxValue"];
haxe_ui_components_OptionBoxValue.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_OptionBoxValue.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		if(this._icon != null) {
			this._icon.set_resource(style.icon);
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_OptionBoxValue();
	}
	,__class__: haxe_ui_components_OptionBoxValue
});
var haxe_ui_components_ProgressDefaultMinBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ProgressDefaultMinBehaviour"] = haxe_ui_components_ProgressDefaultMinBehaviour;
haxe_ui_components_ProgressDefaultMinBehaviour.__name__ = ["haxe","ui","components","ProgressDefaultMinBehaviour"];
haxe_ui_components_ProgressDefaultMinBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ProgressDefaultMinBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		var progress = this._component;
		if(!(progress._layout == null || progress._layoutLocked == true)) {
			progress.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_ProgressDefaultMinBehaviour
});
var haxe_ui_components_ProgressDefaultMaxBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ProgressDefaultMaxBehaviour"] = haxe_ui_components_ProgressDefaultMaxBehaviour;
haxe_ui_components_ProgressDefaultMaxBehaviour.__name__ = ["haxe","ui","components","ProgressDefaultMaxBehaviour"];
haxe_ui_components_ProgressDefaultMaxBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ProgressDefaultMaxBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var progress = this._component;
		if(!(progress._layout == null || progress._layoutLocked == true)) {
			progress.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_ProgressDefaultMaxBehaviour
});
var haxe_ui_components_ProgressDefaultPosBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ProgressDefaultPosBehaviour"] = haxe_ui_components_ProgressDefaultPosBehaviour;
haxe_ui_components_ProgressDefaultPosBehaviour.__name__ = ["haxe","ui","components","ProgressDefaultPosBehaviour"];
haxe_ui_components_ProgressDefaultPosBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ProgressDefaultPosBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var progress = this._component;
		if(!(progress._layout == null || progress._layoutLocked == true)) {
			progress.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_ProgressDefaultPosBehaviour
});
var haxe_ui_components_ProgressDefaultRangeStartBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ProgressDefaultRangeStartBehaviour"] = haxe_ui_components_ProgressDefaultRangeStartBehaviour;
haxe_ui_components_ProgressDefaultRangeStartBehaviour.__name__ = ["haxe","ui","components","ProgressDefaultRangeStartBehaviour"];
haxe_ui_components_ProgressDefaultRangeStartBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ProgressDefaultRangeStartBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var progress = this._component;
		if(!(progress._layout == null || progress._layoutLocked == true)) {
			progress.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_ProgressDefaultRangeStartBehaviour
});
var haxe_ui_components_ProgressDefaultRangeEndBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ProgressDefaultRangeEndBehaviour"] = haxe_ui_components_ProgressDefaultRangeEndBehaviour;
haxe_ui_components_ProgressDefaultRangeEndBehaviour.__name__ = ["haxe","ui","components","ProgressDefaultRangeEndBehaviour"];
haxe_ui_components_ProgressDefaultRangeEndBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ProgressDefaultRangeEndBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var progress = this._component;
		if(!(progress._layout == null || progress._layoutLocked == true)) {
			progress.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_ProgressDefaultRangeEndBehaviour
});
var haxe_ui_components_ProgressDefaultIndeterminateBehaviour = function(component) {
	this._value = false;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ProgressDefaultIndeterminateBehaviour"] = haxe_ui_components_ProgressDefaultIndeterminateBehaviour;
haxe_ui_components_ProgressDefaultIndeterminateBehaviour.__name__ = ["haxe","ui","components","ProgressDefaultIndeterminateBehaviour"];
haxe_ui_components_ProgressDefaultIndeterminateBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ProgressDefaultIndeterminateBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value);
		var progress = this._component;
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value) == true) {
			this.startIndeterminateAnimation(progress);
		} else {
			this.stopIndeterminateAnimation(progress);
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._value);
	}
	,startIndeterminateAnimation: function(progress) {
		var animationId = progress.getClassProperty("animation.indeterminate");
		if(animationId == null) {
			return;
		}
		var tmp = haxe_ui_animation_AnimationManager.get_instance();
		var _g = new haxe_ds_StringMap();
		if(__map_reserved["target"] != null) {
			_g.setReserved("target",progress);
		} else {
			_g.h["target"] = progress;
		}
		this._animation = tmp.loop(animationId,_g);
	}
	,stopIndeterminateAnimation: function(progress) {
		if(this._animation != null) {
			this._animation.stop();
			this._animation = null;
		}
	}
	,__class__: haxe_ui_components_ProgressDefaultIndeterminateBehaviour
});
var haxe_ui_components_ScrollDefaultMinBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ScrollDefaultMinBehaviour"] = haxe_ui_components_ScrollDefaultMinBehaviour;
haxe_ui_components_ScrollDefaultMinBehaviour.__name__ = ["haxe","ui","components","ScrollDefaultMinBehaviour"];
haxe_ui_components_ScrollDefaultMinBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ScrollDefaultMinBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var scroll = this._component;
		if(!(scroll._layout == null || scroll._layoutLocked == true)) {
			scroll.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_ScrollDefaultMinBehaviour
});
var haxe_ui_components_ScrollDefaultMaxBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ScrollDefaultMaxBehaviour"] = haxe_ui_components_ScrollDefaultMaxBehaviour;
haxe_ui_components_ScrollDefaultMaxBehaviour.__name__ = ["haxe","ui","components","ScrollDefaultMaxBehaviour"];
haxe_ui_components_ScrollDefaultMaxBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ScrollDefaultMaxBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var scroll = this._component;
		if(!(scroll._layout == null || scroll._layoutLocked == true)) {
			scroll.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_ScrollDefaultMaxBehaviour
});
var haxe_ui_components_ScrollDefaultPosBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ScrollDefaultPosBehaviour"] = haxe_ui_components_ScrollDefaultPosBehaviour;
haxe_ui_components_ScrollDefaultPosBehaviour.__name__ = ["haxe","ui","components","ScrollDefaultPosBehaviour"];
haxe_ui_components_ScrollDefaultPosBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ScrollDefaultPosBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var scroll = this._component;
		if(!(scroll._layout == null || scroll._layoutLocked == true)) {
			scroll.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_ScrollDefaultPosBehaviour
});
var haxe_ui_components_ScrollDefaultPageSizeBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.ScrollDefaultPageSizeBehaviour"] = haxe_ui_components_ScrollDefaultPageSizeBehaviour;
haxe_ui_components_ScrollDefaultPageSizeBehaviour.__name__ = ["haxe","ui","components","ScrollDefaultPageSizeBehaviour"];
haxe_ui_components_ScrollDefaultPageSizeBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_ScrollDefaultPageSizeBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var scroll = this._component;
		if(!(scroll._layout == null || scroll._layoutLocked == true)) {
			scroll.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_ScrollDefaultPageSizeBehaviour
});
var haxe_ui_components_SliderDefaultMinBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.SliderDefaultMinBehaviour"] = haxe_ui_components_SliderDefaultMinBehaviour;
haxe_ui_components_SliderDefaultMinBehaviour.__name__ = ["haxe","ui","components","SliderDefaultMinBehaviour"];
haxe_ui_components_SliderDefaultMinBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_SliderDefaultMinBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var slider = this._component;
		if(!(slider._layout == null || slider._layoutLocked == true)) {
			slider.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_SliderDefaultMinBehaviour
});
var haxe_ui_components_SliderDefaultMaxBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.SliderDefaultMaxBehaviour"] = haxe_ui_components_SliderDefaultMaxBehaviour;
haxe_ui_components_SliderDefaultMaxBehaviour.__name__ = ["haxe","ui","components","SliderDefaultMaxBehaviour"];
haxe_ui_components_SliderDefaultMaxBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_SliderDefaultMaxBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var slider = this._component;
		if(!(slider._layout == null || slider._layoutLocked == true)) {
			slider.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_SliderDefaultMaxBehaviour
});
var haxe_ui_components_SliderDefaultPosBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.SliderDefaultPosBehaviour"] = haxe_ui_components_SliderDefaultPosBehaviour;
haxe_ui_components_SliderDefaultPosBehaviour.__name__ = ["haxe","ui","components","SliderDefaultPosBehaviour"];
haxe_ui_components_SliderDefaultPosBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_SliderDefaultPosBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var slider = this._component;
		if(!(slider._layout == null || slider._layoutLocked == true)) {
			slider.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_SliderDefaultPosBehaviour
});
var haxe_ui_components_SliderDefaultRangeStartBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.SliderDefaultRangeStartBehaviour"] = haxe_ui_components_SliderDefaultRangeStartBehaviour;
haxe_ui_components_SliderDefaultRangeStartBehaviour.__name__ = ["haxe","ui","components","SliderDefaultRangeStartBehaviour"];
haxe_ui_components_SliderDefaultRangeStartBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_SliderDefaultRangeStartBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var slider = this._component;
		if(!(slider._layout == null || slider._layoutLocked == true)) {
			slider.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_SliderDefaultRangeStartBehaviour
});
var haxe_ui_components_SliderDefaultRangeEndBehaviour = function(component) {
	this._value = 0;
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.SliderDefaultRangeEndBehaviour"] = haxe_ui_components_SliderDefaultRangeEndBehaviour;
haxe_ui_components_SliderDefaultRangeEndBehaviour.__name__ = ["haxe","ui","components","SliderDefaultRangeEndBehaviour"];
haxe_ui_components_SliderDefaultRangeEndBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_SliderDefaultRangeEndBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
		var slider = this._component;
		if(!(slider._layout == null || slider._layoutLocked == true)) {
			slider.invalidateComponent("layout");
		}
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(this._value);
	}
	,__class__: haxe_ui_components_SliderDefaultRangeEndBehaviour
});
var haxe_ui_components_Spacer = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Spacer"] = haxe_ui_components_Spacer;
haxe_ui_components_Spacer.__name__ = ["haxe","ui","components","Spacer"];
haxe_ui_components_Spacer.__super__ = haxe_ui_core_Component;
haxe_ui_components_Spacer.prototype = $extend(haxe_ui_core_Component.prototype,{
	cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Spacer();
	}
	,__class__: haxe_ui_components_Spacer
});
var haxe_ui_components_Switch = function() {
	this._down = false;
	this._unselectedText = "Off";
	this._selectedText = "On";
	this._selected = false;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Switch"] = haxe_ui_components_Switch;
haxe_ui_components_Switch.__name__ = ["haxe","ui","components","Switch"];
haxe_ui_components_Switch.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Switch.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	createDefaults: function() {
		haxe_ui_core_InteractiveComponent.prototype.createDefaults.call(this);
		this._defaultLayout = new haxe_ui_components_SwitchLayout();
	}
	,createChildren: function() {
		var _gthis = this;
		if(this._button == null) {
			this._label = new haxe_ui_components_Label();
			this._label.set_id("switch-label");
			this._label.addClass("switch-label");
			this._label.set_text(this._unselectedText);
			this.addComponent(this._label);
			this._button = new haxe_ui_components_Button();
			this._button.set_id("switch-button");
			this._button.addClass("switch-button");
			this._button.set_onClick(function(e) {
				_gthis.set_selected(!_gthis.get_selected());
			});
			this.addComponent(this._button);
		}
		this.registerEvent("mouseover",$bind(this,this._onMouseOver));
		this.registerEvent("mouseout",$bind(this,this._onMouseOut));
		this.registerEvent("mousedown",$bind(this,this._onMouseDown));
	}
	,destroyChildren: function() {
		haxe_ui_core_InteractiveComponent.prototype.destroyChildren.call(this);
		this.unregisterEvent("mouseover",$bind(this,this._onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this._onMouseOut));
		this.unregisterEvent("mousedown",$bind(this,this._onMouseDown));
		if(this._button != null) {
			this.removeComponent(this._button);
			this._button = null;
		}
	}
	,get_value: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._selected);
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		if(this._button != null) {
			this._button.customStyle.borderRadius = style.borderRadius;
		}
	}
	,validateData: function() {
		if(this._selected == false) {
			this._label.set_text(this._unselectedText);
			this._label.removeClass(":selected");
			this.removeClass(":selected");
		} else {
			this._label.set_text(this._selectedText);
			this._label.addClass(":selected");
			this.addClass(":selected");
		}
		var event = new haxe_ui_core_UIEvent("change");
		this.dispatch(event);
	}
	,get_selected: function() {
		return this._selected;
	}
	,set_selected: function(value) {
		if(value == this._selected) {
			return value;
		}
		this.invalidateComponent("data");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		this._selected = value;
		return value;
	}
	,get_selectedText: function() {
		return this._selectedText;
	}
	,set_selectedText: function(value) {
		this._selectedText = value;
		if(this._ready && this._selected == true) {
			this._label.set_text(this._selectedText);
		}
		return value;
	}
	,get_unselectedText: function() {
		return this._unselectedText;
	}
	,set_unselectedText: function(value) {
		this._unselectedText = value;
		if(this._ready && this._selected == false) {
			this._label.set_text(this._unselectedText);
		}
		return value;
	}
	,_onMouseOver: function(event) {
		if(this._down == false) {
			this.addClass(":hover");
		}
	}
	,_onMouseOut: function(event) {
		this.removeClass(":hover");
	}
	,_onMouseDown: function(event) {
		if(haxe_ui_focus_FocusManager.get_instance().get_focusInfo() != null && haxe_ui_focus_FocusManager.get_instance().get_focusInfo().currentFocus != null) {
			haxe_ui_focus_FocusManager.get_instance().get_focusInfo().currentFocus.set_focus(false);
		}
		this._down = true;
		this._mouseDownOffsetX = event.screenX;
		this._mouseDownOffsetY = event.screenY;
		this.get_screen().registerEvent("mouseup",$bind(this,this._onMouseUp));
	}
	,_onMouseUp: function(event) {
		this._down = false;
		var x1 = event.screenX;
		var y1 = event.screenY;
		var x2 = this._mouseDownOffsetX;
		var y2 = this._mouseDownOffsetY;
		if(Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)) < 5) {
			this.set_selected(!this.get_selected());
		} else {
			this.set_selected(event.screenX - (this.get_screenLeft() + this.get_componentWidth()) / 2 > 0);
		}
		if(this.hitTest(event.screenX,event.screenY)) {
			this.addClass(":hover");
		}
		this.get_screen().unregisterEvent("mouseup",$bind(this,this._onMouseUp));
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Switch();
	}
	,__class__: haxe_ui_components_Switch
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_unselectedText:"set_unselectedText",get_unselectedText:"get_unselectedText",set_selectedText:"set_selectedText",get_selectedText:"get_selectedText",set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components_SwitchLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.SwitchLayout"] = haxe_ui_components_SwitchLayout;
haxe_ui_components_SwitchLayout.__name__ = ["haxe","ui","components","SwitchLayout"];
haxe_ui_components_SwitchLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_SwitchLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var switchComp = this._component;
		var button = switchComp.findComponent("switch-button");
		var label = switchComp.findComponent("switch-label");
		if(button == null || label == null) {
			return;
		}
		button.set_top(this.get_paddingTop());
		label.set_top(this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2);
		if(switchComp.get_selected() == true) {
			button.set_left(switchComp.get_componentWidth() - button.get_componentWidth() - this.get_paddingRight());
			label.set_left(button.get_componentWidth() / 2 - label.get_componentWidth() / 2);
		} else {
			button.set_left(this.get_paddingLeft());
			label.set_left(button.get_left() + button.get_componentWidth() + button.get_componentWidth() / 2 - label.get_componentWidth() / 2);
		}
	}
	,__class__: haxe_ui_components_SwitchLayout
});
var haxe_ui_components_TabBar = function() {
	this._selectedIndex = -1;
	var _gthis = this;
	haxe_ui_core_Component.call(this);
	this.registerEvent("mousewheel",function(e) {
		if(e.delta < 0) {
			_gthis.scrollLeft();
		} else {
			_gthis.scrollRight();
		}
	});
};
$hxClasses["haxe.ui.components.TabBar"] = haxe_ui_components_TabBar;
haxe_ui_components_TabBar.__name__ = ["haxe","ui","components","TabBar"];
haxe_ui_components_TabBar.__super__ = haxe_ui_core_Component;
haxe_ui_components_TabBar.prototype = $extend(haxe_ui_core_Component.prototype,{
	createContainer: function() {
		if(this._container == null) {
			this._container = new haxe_ui_containers_HBox();
			this._container.set_id("tabbar-contents");
			this._container.addClass("tabbar-contents");
			this.addComponent(this._container);
		}
	}
	,createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		this._defaultLayout = new haxe_ui_components_TabBarLayout();
	}
	,addComponent: function(child) {
		var v = null;
		if(child != this._container && child.get_id() != "tabbar-scroll-left" && child.get_id() != "tabbar-scroll-right") {
			this.createContainer();
			child.addClass("tabbar-button");
			child.registerEvent("mousedown",$bind(this,this._onButtonMouseDown));
			v = this._container.addComponent(child);
			if(this._selectedIndex == -1) {
				this.set_selectedIndex(0);
			}
		} else {
			v = haxe_ui_core_Component.prototype.addComponent.call(this,child);
		}
		return v;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		var v = null;
		if(child != this._container) {
			v = this._container.removeComponent(child,dispose,invalidate);
		} else {
			v = haxe_ui_core_Component.prototype.removeComponent.call(this,child,dispose,invalidate);
		}
		return v;
	}
	,removeAllButtons: function() {
		if(this._container != null) {
			this._container.removeAllComponents();
		}
	}
	,removeButton: function(index) {
		if(this._container != null) {
			var selection = this.get_selectedIndex();
			this.resetSelection();
			this._container.removeComponentAt(index);
			if(selection > this._container.get_childComponents().length - 1) {
				selection = this._container.get_childComponents().length - 1;
			}
			this.set_selectedIndex(selection);
		}
	}
	,validateLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateLayout.call(this);
		if(this.get_native() == true || this._container == null) {
			return b;
		}
		if(this._containerPosition == null) {
			this._containerPosition = this.get_layout().get_paddingLeft();
		}
		if(this._container.get_width() > this.get_layout().get_usableWidth() && this.get_layout().get_usableWidth() > 0) {
			this.showScrollButtons();
			this._container.set_left(this._containerPosition);
		} else {
			this.hideScrollButtons();
			this._containerPosition = null;
		}
		return b;
	}
	,showScrollButtons: function() {
		var _gthis = this;
		if(this._scrollLeft == null) {
			this._scrollLeft = new haxe_ui_components_Button();
			this._scrollLeft.set_id("tabbar-scroll-left");
			this._scrollLeft.addClass("tabbar-scroll-left");
			this._scrollLeft.set_includeInLayout(false);
			this._scrollLeft.repeater = true;
			this.addComponent(this._scrollLeft);
			this._scrollLeft.set_onClick(function(e) {
				_gthis.scrollLeft();
			});
		} else {
			this._scrollLeft.show();
		}
		if(this._scrollRight == null) {
			this._scrollRight = new haxe_ui_components_Button();
			this._scrollRight.set_id("tabbar-scroll-right");
			this._scrollRight.addClass("tabbar-scroll-right");
			this._scrollRight.set_includeInLayout(false);
			this._scrollRight.repeater = true;
			this.addComponent(this._scrollRight);
			this._scrollRight.set_onClick(function(e1) {
				_gthis.scrollRight();
			});
		} else {
			this._scrollRight.show();
		}
	}
	,scrollLeft: function() {
		var x = this._container.get_left() + 20;
		if(x > this.get_layout().get_paddingLeft()) {
			x = this.get_layout().get_paddingLeft();
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	,scrollRight: function() {
		var x = this._container.get_left() - 20;
		var max = -(this._container.get_width() - this.get_width());
		var left = this.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
		var right = this.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
		if(left != null && left.get_hidden() == false) {
			max -= left.get_width();
			max -= this.get_layout().get_horizontalSpacing();
		}
		if(right != null && right.get_hidden() == false) {
			max -= right.get_width();
		}
		if(x < max) {
			x = max;
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	,hideScrollButtons: function() {
		if(this._scrollLeft != null) {
			this._scrollLeft.hide();
		}
		if(this._scrollRight != null) {
			this._scrollRight.hide();
		}
	}
	,invalidateComponentIndex: function() {
		this.invalidateComponent("index");
	}
	,validateInternal: function() {
		var dataInvalid = this.isInvalid("data");
		var indexInvalid = this.isInvalid("index");
		if(dataInvalid || indexInvalid) {
			this.validateIndex();
		}
		haxe_ui_core_Component.prototype.validateInternal.call(this);
	}
	,validateData: function() {
		var event = new haxe_ui_core_UIEvent("change");
		event.target = this;
		this.dispatch(event);
	}
	,validateIndex: function() {
		if(this._container == null) {
			return;
		}
		var button = js_Boot.__cast(this._container.getComponentAt(this._selectedIndex) , haxe_ui_components_Button);
		if(button != null) {
			if(this._currentButton != null) {
				this._currentButton.removeClass("tabbar-button-selected");
			}
			this._currentButton = button;
			this._currentButton.addClass("tabbar-button-selected");
			var rangeMin = Math.abs(this._container.get_left());
			var rangeMax = rangeMin + this.get_width();
			if(this._currentButton.get_left() < rangeMin || this._currentButton.get_left() + this._currentButton.get_width() > rangeMax) {
				var max = -(this._container.get_width() - this.get_width());
				var x = -this._currentButton.get_left() + this.get_layout().get_paddingLeft();
				var left = this.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
				var right = this.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
				if(left != null && left.get_hidden() == false) {
					max -= left.get_width();
					max -= this.get_layout().get_horizontalSpacing();
				}
				if(right != null && right.get_hidden() == false) {
					max -= right.get_width();
				}
				if(x < max) {
					x = max;
				}
				this._containerPosition = x;
				this._container.set_left(x);
			}
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
	}
	,get_selectedIndex: function() {
		return this._selectedIndex;
	}
	,set_selectedIndex: function(value) {
		if(value < 0 || this._selectedIndex == value || this._container == null) {
			return value;
		}
		if(this._selectedIndex != -1) {
			this.dispatch(new haxe_ui_core_UIEvent("beforeChange"));
		}
		this._selectedIndex = value;
		this.invalidateComponent("data");
		this.invalidateComponent("index");
		return value;
	}
	,get_selectedButton: function() {
		if(this._selectedIndex < 0) {
			return null;
		}
		return js_Boot.__cast(this._container.get_childComponents()[this._selectedIndex] , haxe_ui_components_Button);
	}
	,get_buttonCount: function() {
		if(this._container == null) {
			return 0;
		}
		return this._container.get_childComponents().length;
	}
	,resetSelection: function() {
		this._selectedIndex = -1;
		this._currentButton = null;
	}
	,_onButtonMouseDown: function(event) {
		if(event.target == this._currentButton) {
			return;
		}
		this.set_selectedIndex(this._container.getComponentIndex(event.target));
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TabBar();
	}
	,getProperty: function(name) {
		if(name == "selectedIndex") {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(this.get_selectedIndex());
		}
		return haxe_ui_core_Component.prototype.getProperty.call(this,name);
	}
	,setProperty: function(name,v) {
		if(name == "selectedIndex") {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(this.set_selectedIndex(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(v)));
		}
		return haxe_ui_core_Component.prototype.setProperty.call(this,name,v);
	}
	,__class__: haxe_ui_components_TabBar
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{get_buttonCount:"get_buttonCount",get_selectedButton:"get_selectedButton",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
var haxe_ui_components_TabBarLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.TabBarLayout"] = haxe_ui_components_TabBarLayout;
haxe_ui_components_TabBarLayout.__name__ = ["haxe","ui","components","TabBarLayout"];
haxe_ui_components_TabBarLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_TabBarLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var left = this._component.findComponent("tabbar-scroll-left");
		var right = this._component.findComponent("tabbar-scroll-right");
		if(left != null && this.hidden(left) == false) {
			var x = this._component.get_width() - left.get_width();
			if(right != null) {
				x -= right.get_width();
			}
			left.set_left(x);
			left.set_top(this._component.get_height() / 2 - left.get_height() / 2);
		}
		if(right != null && this.hidden(right) == false) {
			right.set_left(this._component.get_width() - right.get_width());
			right.set_top(this._component.get_height() / 2 - right.get_height() / 2);
		}
	}
	,__class__: haxe_ui_components_TabBarLayout
});
var haxe_ui_components_TextArea = function() {
	this._wrap = true;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextArea"] = haxe_ui_components_TextArea;
haxe_ui_components_TextArea.__name__ = ["haxe","ui","components","TextArea"];
haxe_ui_components_TextArea.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_components_TextArea.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextArea.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	get_empty: function() {
		if(this._text != null) {
			return this._text.length == 0;
		} else {
			return true;
		}
	}
	,get_placeholder: function() {
		return this._placeholder;
	}
	,set_placeholder: function(value) {
		if(this._placeholder == value) {
			return value;
		}
		this.invalidateComponent("data");
		this._placeholder = value;
		return value;
	}
	,get_wrap: function() {
		return this._wrap;
	}
	,set_wrap: function(value) {
		if(value == this._wrap) {
			return value;
		}
		this.invalidateComponent("data");
		this._wrap = value;
		return value;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this.invalidateComponent("data");
		value = haxe_ui_core_InteractiveComponent.prototype.set_text.call(this,value);
		return value;
	}
	,set_focus: function(value) {
		if(this._focus == value || this.get_allowFocus() == false) {
			return value;
		}
		this.invalidateComponent("data");
		haxe_ui_core_InteractiveComponent.prototype.set_focus.call(this,value);
		return value;
	}
	,createDefaults: function() {
		haxe_ui_core_InteractiveComponent.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_TextAreaDefaultTextBehaviour(this);
		if(__map_reserved["text"] != null) {
			_g.setReserved("text",value);
		} else {
			_g.h["text"] = value;
		}
		var value1 = new haxe_ui_components_TextAreaDefaultPlaceholderBehaviour(this);
		if(__map_reserved["placeholder"] != null) {
			_g.setReserved("placeholder",value1);
		} else {
			_g.h["placeholder"] = value1;
		}
		var value2 = new haxe_ui_components_TextAreaDefaultWrapBehaviour(this);
		if(__map_reserved["wrap"] != null) {
			_g.setReserved("wrap",value2);
		} else {
			_g.h["wrap"] = value2;
		}
		this.defaultBehaviours(_g);
		this._defaultLayout = new haxe_ui_components_TextAreaLayout();
	}
	,createChildren: function() {
		var _gthis = this;
		haxe_ui_core_InteractiveComponent.prototype.createChildren.call(this);
		this.getTextInput().set_multiline(true);
		this.getTextInput().get_data().onChangedCallback = function() {
			if(_gthis.getTextInput().get_text() != _gthis._text && _gthis.hasClass(":empty") == false) {
				var tmp = _gthis.getTextInput().get_text();
				_gthis.set_text(tmp);
			}
		};
		this.getTextInput().get_data().onScrollCallback = function() {
			if(_gthis._hscroll != null) {
				_gthis._hscroll.set_pos(_gthis.getTextInput().get_hscrollPos());
			}
			if(_gthis._vscroll != null) {
				_gthis._vscroll.set_pos(_gthis.getTextInput().get_vscrollPos());
			}
		};
		this.registerEvent("mousewheel",$bind(this,this._onMouseWheel));
		this.registerEvent("mousedown",$bind(this,this._onMouseDown));
		this.registerEvent("change",$bind(this,this._onTextChanged));
	}
	,destroyChildren: function() {
		haxe_ui_core_InteractiveComponent.prototype.destroyChildren.call(this);
		this.getTextInput().get_data().onChangedCallback = null;
		this.getTextInput().get_data().onScrollCallback = null;
		this.unregisterEvent("mousewheel",$bind(this,this._onMouseWheel));
		this.unregisterEvent("mousedown",$bind(this,this._onMouseDown));
		this.unregisterEvent("change",$bind(this,this._onTextChanged));
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		if(this.hasTextInput() == true) {
			this.getTextInput().set_textStyle(style);
		}
	}
	,checkScrolls: function() {
		if(this.get_native() == true) {
			return;
		}
		var textInput = this.getTextInput();
		if(textInput.get_textWidth() > textInput.get_width()) {
			if(this._hscroll == null) {
				this._hscroll = new haxe_ui_components_HScroll();
				this._hscroll.set_id("textarea-hscroll");
				this.addComponent(this._hscroll);
				this._hscroll.registerEvent("change",$bind(this,this._onScrollChange));
			}
			this._hscroll.set_max(textInput.get_hscrollMax());
			this._hscroll.set_pos(textInput.get_hscrollPos());
			this._hscroll.set_pageSize(textInput.get_hscrollPageSize());
			this._hscroll.show();
		} else if(this._hscroll != null) {
			this._hscroll.hide();
		}
		if(textInput.get_textHeight() > textInput.get_height()) {
			if(this._vscroll == null) {
				this._vscroll = new haxe_ui_components_VScroll();
				this._vscroll.set_id("textarea-vscroll");
				this.addComponent(this._vscroll);
				this._vscroll.registerEvent("change",$bind(this,this._onScrollChange));
			}
			this._vscroll.set_max(textInput.get_vscrollMax());
			this._vscroll.set_pos(textInput.get_vscrollPos());
			this._vscroll.set_pageSize(textInput.get_vscrollPageSize());
			this._vscroll.show();
		} else if(this._vscroll != null) {
			this._vscroll.hide();
		}
	}
	,_onMouseWheel: function(event) {
		if(this._vscroll != null) {
			if(event.delta > 0) {
				var _g = this._vscroll;
				_g.set_pos(_g.get_pos() - 60);
			} else if(event.delta < 0) {
				var _g1 = this._vscroll;
				_g1.set_pos(_g1.get_pos() + 60);
			}
		}
	}
	,_onMouseDown: function(event) {
		haxe_ui_focus_FocusManager.get_instance().set_focus(this);
	}
	,_onTextChanged: function(event) {
		this.set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviourGet("text")));
	}
	,_onScrollChange: function(e) {
		if(this._hscroll != null) {
			this.getTextInput().set_hscrollPos(this._hscroll.get_pos());
		}
		if(this._vscroll != null) {
			this.getTextInput().set_vscrollPos(this._vscroll.get_pos());
		}
	}
	,invalidateComponentScroll: function() {
		this.invalidateComponent("scroll");
	}
	,validateInternal: function() {
		var dataInvalid = this.isInvalid("data");
		var scrollInvalid = this.isInvalid("scroll");
		var layoutInvalid = this.isInvalid("layout");
		haxe_ui_core_InteractiveComponent.prototype.validateInternal.call(this);
		if(scrollInvalid || layoutInvalid || dataInvalid) {
			this.validateScroll();
		}
	}
	,validateScroll: function() {
		this.checkScrolls();
	}
	,validateData: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviourGet("placeholder")) != this._placeholder) {
			this.behaviourSet("placeholder",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._placeholder));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this.behaviourGet("wrap")) != this._wrap) {
			this.behaviourSet("wrap",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._wrap));
		}
		var text = this._text != null ? this._text : "";
		var placeholderVisible = this.get_empty();
		if(this.get_focus() == false && this._placeholder != null) {
			if(text == "") {
				text = this._placeholder;
				this.addClass(":empty");
			} else {
				this.removeClass(":empty");
			}
		} else if(placeholderVisible == true) {
			text = "";
			this.removeClass(":empty");
		}
		this.behaviourSet("text",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(text));
		this.handleBindings(["text","value"]);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if(this.get_placeholder() != null) {
			c.set_placeholder(this.get_placeholder());
		}
		c.set_wrap(this.get_wrap());
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextArea();
	}
	,__class__: haxe_ui_components_TextArea
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_wrap:"set_wrap",get_wrap:"get_wrap",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",get_empty:"get_empty"})
});
var haxe_ui_components_TextAreaDefaultTextBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.TextAreaDefaultTextBehaviour"] = haxe_ui_components_TextAreaDefaultTextBehaviour;
haxe_ui_components_TextAreaDefaultTextBehaviour.__name__ = ["haxe","ui","components","TextAreaDefaultTextBehaviour"];
haxe_ui_components_TextAreaDefaultTextBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_TextAreaDefaultTextBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value)) {
			return;
		}
		var textArea = this._component;
		textArea.getTextInput().set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
		textArea.getTextInput().invalidate("measure");
		textArea.invalidateComponent("display");
	}
	,get: function() {
		var textArea = this._component;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(textArea.getTextInput().get_text());
	}
	,__class__: haxe_ui_components_TextAreaDefaultTextBehaviour
});
var haxe_ui_components_TextAreaDefaultPlaceholderBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.TextAreaDefaultPlaceholderBehaviour"] = haxe_ui_components_TextAreaDefaultPlaceholderBehaviour;
haxe_ui_components_TextAreaDefaultPlaceholderBehaviour.__name__ = ["haxe","ui","components","TextAreaDefaultPlaceholderBehaviour"];
haxe_ui_components_TextAreaDefaultPlaceholderBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_TextAreaDefaultPlaceholderBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._value);
	}
	,__class__: haxe_ui_components_TextAreaDefaultPlaceholderBehaviour
});
var haxe_ui_components_TextAreaDefaultWrapBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.TextAreaDefaultWrapBehaviour"] = haxe_ui_components_TextAreaDefaultWrapBehaviour;
haxe_ui_components_TextAreaDefaultWrapBehaviour.__name__ = ["haxe","ui","components","TextAreaDefaultWrapBehaviour"];
haxe_ui_components_TextAreaDefaultWrapBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_TextAreaDefaultWrapBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var textArea = this._component;
		textArea.getTextInput().set_wordWrap(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value));
		textArea.invalidateComponent("display");
	}
	,get: function() {
		var textArea = this._component;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(textArea.getTextInput().get_wordWrap());
	}
	,__class__: haxe_ui_components_TextAreaDefaultWrapBehaviour
});
var haxe_ui_components_TextAreaLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.TextAreaLayout"] = haxe_ui_components_TextAreaLayout;
haxe_ui_components_TextAreaLayout.__name__ = ["haxe","ui","components","TextAreaLayout"];
haxe_ui_components_TextAreaLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_TextAreaLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var hscroll = this.get_component().findComponent("textarea-hscroll");
		var vscroll = this.get_component().findComponent("textarea-vscroll");
		var ucx = this.get_innerWidth();
		var ucy = this.get_innerHeight();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_left(this.get_paddingLeft());
			hscroll.set_top(ucy - hscroll.get_componentHeight() + this.get_paddingBottom());
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_left(ucx - vscroll.get_componentWidth() + this.get_paddingRight());
			vscroll.set_top(this.get_paddingTop());
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(this.get_paddingLeft());
			this.get_component().getTextInput().set_top(this.get_paddingTop());
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var hscroll = this.get_component().findComponent("textarea-hscroll");
		var vscroll = this.get_component().findComponent("textarea-vscroll");
		var usableSize = this.get_usableSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_width(usableSize.width);
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_height(usableSize.height);
		}
		if(this.get_component().hasTextInput() == true) {
			var size = usableSize;
			this.get_component().getTextInput().set_width(size.width - 2);
			this.get_component().getTextInput().set_height(size.height - 1);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		size.width -= 1;
		var hscroll = this.get_component().findComponent("textarea-hscroll");
		var vscroll = this.get_component().findComponent("textarea-vscroll");
		if(hscroll != null && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		return size;
	}
	,__class__: haxe_ui_components_TextAreaLayout
});
var haxe_ui_components_TextField = function() {
	this._maxChars = -1;
	this._password = false;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextField"] = haxe_ui_components_TextField;
haxe_ui_components_TextField.__name__ = ["haxe","ui","components","TextField"];
haxe_ui_components_TextField.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_components_TextField.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextField.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	createDefaults: function() {
		haxe_ui_core_InteractiveComponent.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_components_TextFieldDefaultTextBehaviour(this);
		if(__map_reserved["text"] != null) {
			_g.setReserved("text",value);
		} else {
			_g.h["text"] = value;
		}
		var value1 = new haxe_ui_components_TextFieldDefaultIconBehaviour(this);
		if(__map_reserved["icon"] != null) {
			_g.setReserved("icon",value1);
		} else {
			_g.h["icon"] = value1;
		}
		var value2 = new haxe_ui_components_TextFieldDefaultPasswordBehaviour(this);
		if(__map_reserved["password"] != null) {
			_g.setReserved("password",value2);
		} else {
			_g.h["password"] = value2;
		}
		var value3 = new haxe_ui_components_TextFieldDefaultPlaceholderBehaviour(this);
		if(__map_reserved["placeholder"] != null) {
			_g.setReserved("placeholder",value3);
		} else {
			_g.h["placeholder"] = value3;
		}
		this.defaultBehaviours(_g);
		this._defaultLayout = new haxe_ui_components_TextFieldLayout();
	}
	,createChildren: function() {
		var _gthis = this;
		if(this.get_componentWidth() == 0) {
			this.set_componentWidth(150);
		}
		this.getTextInput().set_multiline(false);
		this.getTextInput().get_data().onChangedCallback = function() {
			if(_gthis.getTextInput().get_text() != _gthis._text && _gthis.hasClass(":empty") == false) {
				var tmp = _gthis.getTextInput().get_text();
				_gthis.set_text(tmp);
			}
		};
		this.registerEvent("mousedown",$bind(this,this._onMouseDown));
		this.registerEvent("change",$bind(this,this._onTextChanged));
	}
	,destroyChildren: function() {
		haxe_ui_core_InteractiveComponent.prototype.destroyChildren.call(this);
		this.getTextInput().get_data().onChangedCallback = null;
		this.unregisterEvent("mousedown",$bind(this,this._onMouseDown));
		this.unregisterEvent("change",$bind(this,this._onTextChanged));
		if(this._icon != null) {
			this.removeComponent(this._icon);
			this._icon = null;
		}
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this.invalidateComponent("data");
		value = haxe_ui_core_InteractiveComponent.prototype.set_text.call(this,value);
		return value;
	}
	,set_focus: function(value) {
		if(this._focus == value || this.get_allowFocus() == false) {
			return value;
		}
		this.invalidateComponent("data");
		haxe_ui_core_InteractiveComponent.prototype.set_focus.call(this,value);
		return value;
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		if(style.icon != null) {
			this.set_icon(style.icon);
		}
		if(this.hasTextInput() == true) {
			this.getTextInput().set_textStyle(style);
		}
	}
	,get_empty: function() {
		if(this._text != null) {
			return this._text.length == 0;
		} else {
			return true;
		}
	}
	,get_icon: function() {
		return this._iconResource;
	}
	,set_icon: function(value) {
		if(this._iconResource == value) {
			return value;
		}
		this.invalidateComponent("data");
		this._iconResource = value;
		return value;
	}
	,get_password: function() {
		return this._password;
	}
	,set_password: function(value) {
		if(this._password == value) {
			return value;
		}
		this._password = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_maxChars: function() {
		return this._maxChars;
	}
	,set_maxChars: function(value) {
		if(this._maxChars == value) {
			return value;
		}
		this.invalidateComponent("data");
		this._maxChars = value;
		return value;
	}
	,get_placeholder: function() {
		return this._placeholder;
	}
	,set_placeholder: function(value) {
		if(this._placeholder == value) {
			return value;
		}
		this.invalidateComponent("data");
		this._placeholder = value;
		return value;
	}
	,get_restrictChars: function() {
		return this._restrictChars;
	}
	,set_restrictChars: function(value) {
		if(this._restrictChars == value) {
			return value;
		}
		this._restrictChars = value;
		this._restrictEReg = this._generateRestrictEReg();
		return this._restrictChars;
	}
	,_onTextChanged: function(event) {
		var newText = haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviourGet("text"));
		if(this._restrictEReg != null && newText != "" && !this._restrictEReg.match(newText)) {
			this.behaviourSet("text",this._text != null ? haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._text) : haxe_ui_util__$Variant_Variant_$Impl_$.fromString(""));
			return;
		}
		this.set_text(newText);
	}
	,_onMouseDown: function(event) {
		haxe_ui_focus_FocusManager.get_instance().set_focus(this);
	}
	,validateData: function() {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviourGet("icon")) != this._iconResource) {
			this.behaviourSet("icon",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._iconResource));
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this.behaviourGet("placeholder")) != this._placeholder) {
			this.behaviourSet("placeholder",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._placeholder));
		}
		var text = this._text != null ? this._text : "";
		var placeholderVisible = this.get_empty();
		if(this._maxChars != -1 && text.length > this._maxChars && placeholderVisible == false) {
			text = HxOverrides.substr(text,0,this._maxChars);
			this._text = text;
		}
		if(this.get_focus() == false && this._placeholder != null) {
			if(this.get_native() == false) {
				if(text == "") {
					text = this._placeholder;
					this.behaviourSet("password",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(false));
					this.addClass(":empty");
				} else {
					this.behaviourSet("password",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._password));
					this.removeClass(":empty");
				}
			}
		} else if(placeholderVisible == true) {
			if(this.get_native() == false) {
				text = "";
				this.removeClass(":empty");
				this.behaviourSet("password",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._password));
			}
		} else {
			this.behaviourSet("password",haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._password));
		}
		this.behaviourSet("text",haxe_ui_util__$Variant_Variant_$Impl_$.fromString(text));
		this.handleBindings(["text","value"]);
	}
	,_generateRestrictEReg: function() {
		if(this._restrictChars == null) {
			return null;
		}
		var excludeEReg = new EReg("\\^(.+)","g");
		var excludeChars = null;
		var includeChars = null;
		if(excludeEReg.match(this._restrictChars)) {
			includeChars = excludeEReg.matchedLeft();
			excludeChars = excludeEReg.matched(1);
		} else {
			includeChars = this._restrictChars;
		}
		includeChars = includeChars.length == 0 ? "." : "[" + includeChars + "]";
		if(excludeChars != null && excludeChars.length > 0) {
			return new EReg("^((?=[^" + excludeChars + "])" + includeChars + ")+$","");
		} else {
			return new EReg("^" + includeChars + "+$","");
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		c.set_password(this.get_password());
		c.set_maxChars(this.get_maxChars());
		if(this.get_placeholder() != null) {
			c.set_placeholder(this.get_placeholder());
		}
		if(this.get_restrictChars() != null) {
			c.set_restrictChars(this.get_restrictChars());
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextField();
	}
	,__class__: haxe_ui_components_TextField
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_restrictChars:"set_restrictChars",get_restrictChars:"get_restrictChars",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",set_maxChars:"set_maxChars",get_maxChars:"get_maxChars",set_password:"set_password",get_password:"get_password",set_icon:"set_icon",get_icon:"get_icon",get_empty:"get_empty"})
});
var haxe_ui_components_TextFieldDefaultTextBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.TextFieldDefaultTextBehaviour"] = haxe_ui_components_TextFieldDefaultTextBehaviour;
haxe_ui_components_TextFieldDefaultTextBehaviour.__name__ = ["haxe","ui","components","TextFieldDefaultTextBehaviour"];
haxe_ui_components_TextFieldDefaultTextBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_TextFieldDefaultTextBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value)) {
			return;
		}
		var textField = this._component;
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value) != textField.getTextInput().get_text()) {
			textField.getTextInput().set_text(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
			textField.invalidateComponent("display");
		}
	}
	,get: function() {
		var textField = this._component;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(textField.getTextInput().get_text());
	}
	,__class__: haxe_ui_components_TextFieldDefaultTextBehaviour
});
var haxe_ui_components_TextFieldDefaultIconBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.TextFieldDefaultIconBehaviour"] = haxe_ui_components_TextFieldDefaultIconBehaviour;
haxe_ui_components_TextFieldDefaultIconBehaviour.__name__ = ["haxe","ui","components","TextFieldDefaultIconBehaviour"];
haxe_ui_components_TextFieldDefaultIconBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_TextFieldDefaultIconBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var textField = this._component;
		if(value == null || haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value) || haxe_ui_util__$Variant_Variant_$Impl_$.toString(value) == "null") {
			if(textField._icon != null) {
				textField.removeComponent(textField._icon);
				textField._icon = null;
			}
		} else {
			if(textField._icon == null) {
				textField._icon = new haxe_ui_components_Image();
				textField._icon.set_id("textfield-icon");
				textField._icon.addClass("icon");
				textField._icon.scriptAccess = false;
				textField.addComponent(textField._icon);
			}
			textField._icon.set_resource(haxe_ui_util__$Variant_Variant_$Impl_$.toString(value));
		}
	}
	,get: function() {
		var textField = this._component;
		if(textField._icon == null) {
			return null;
		} else {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromDynamic(textField._icon.get_resource());
		}
	}
	,__class__: haxe_ui_components_TextFieldDefaultIconBehaviour
});
var haxe_ui_components_TextFieldDefaultPasswordBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.TextFieldDefaultPasswordBehaviour"] = haxe_ui_components_TextFieldDefaultPasswordBehaviour;
haxe_ui_components_TextFieldDefaultPasswordBehaviour.__name__ = ["haxe","ui","components","TextFieldDefaultPasswordBehaviour"];
haxe_ui_components_TextFieldDefaultPasswordBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_TextFieldDefaultPasswordBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		var textField = this._component;
		textField.getTextInput().set_password(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value));
	}
	,get: function() {
		var textField = this._component;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(textField.getTextInput().get_password());
	}
	,__class__: haxe_ui_components_TextFieldDefaultPasswordBehaviour
});
var haxe_ui_components_TextFieldDefaultPlaceholderBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.TextFieldDefaultPlaceholderBehaviour"] = haxe_ui_components_TextFieldDefaultPlaceholderBehaviour;
haxe_ui_components_TextFieldDefaultPlaceholderBehaviour.__name__ = ["haxe","ui","components","TextFieldDefaultPlaceholderBehaviour"];
haxe_ui_components_TextFieldDefaultPlaceholderBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_components_TextFieldDefaultPlaceholderBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._value) == value) {
			return;
		}
		this._value = haxe_ui_util__$Variant_Variant_$Impl_$.toString(value);
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(this._value);
	}
	,__class__: haxe_ui_components_TextFieldDefaultPlaceholderBehaviour
});
var haxe_ui_components_TextFieldLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.TextFieldLayout"] = haxe_ui_components_TextFieldLayout;
haxe_ui_components_TextFieldLayout.__name__ = ["haxe","ui","components","TextFieldLayout"];
haxe_ui_components_TextFieldLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_TextFieldLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	get_iconPosition: function() {
		if(this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,repositionChildren: function() {
		var icon = this.get_component().findComponent("textfield-icon");
		var xpos = this.get_paddingLeft();
		if(icon != null) {
			var _g = this.get_iconPosition();
			switch(_g) {
			case "left":
				icon.set_left(xpos);
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				xpos += icon.get_componentWidth() + this.get_horizontalSpacing();
				break;
			case "right":
				icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight());
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				break;
			}
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(xpos);
			this.get_component().getTextInput().set_top(this.get_component().get_componentHeight() / 2 - this.get_component().getTextInput().get_textHeight() / 2);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		if(this.get_component().hasTextInput() == true) {
			var size = this.get_usableSize();
			this.get_component().getTextInput().set_width(size.width);
			this.get_component().getTextInput().set_height(size.height);
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextInput() == true) {
			if(this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight() > size.width) {
				size.width = this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight();
			}
			if(this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom() > size.height) {
				size.height = this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom();
			}
		}
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var icon = this.get_component().findComponent("textfield-icon");
		if(icon != null) {
			size.width -= icon.get_componentWidth() + this.get_horizontalSpacing();
		}
		return size;
	}
	,__class__: haxe_ui_components_TextFieldLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components_VGrid = function() {
	haxe_ui_core_Component.call(this);
	this.set_columns(1);
};
$hxClasses["haxe.ui.components.VGrid"] = haxe_ui_components_VGrid;
haxe_ui_components_VGrid.__name__ = ["haxe","ui","components","VGrid"];
haxe_ui_components_VGrid.__super__ = haxe_ui_core_Component;
haxe_ui_components_VGrid.prototype = $extend(haxe_ui_core_Component.prototype,{
	createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		this._defaultLayout = new haxe_ui_layouts_VerticalGridLayout();
	}
	,get_columns: function() {
		return this._columns;
	}
	,set_columns: function(value) {
		if(this._columns != value) {
			this._columns = value;
			(js_Boot.__cast(this.get_layout() , haxe_ui_layouts_VerticalGridLayout)).set_columns(value);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_columns(this.get_columns());
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VGrid();
	}
	,__class__: haxe_ui_components_VGrid
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_components_VProgress = function() {
	haxe_ui_components_Progress.call(this);
};
$hxClasses["haxe.ui.components.VProgress"] = haxe_ui_components_VProgress;
haxe_ui_components_VProgress.__name__ = ["haxe","ui","components","VProgress"];
haxe_ui_components_VProgress.__super__ = haxe_ui_components_Progress;
haxe_ui_components_VProgress.prototype = $extend(haxe_ui_components_Progress.prototype,{
	createDefaults: function() {
		haxe_ui_components_Progress.prototype.createDefaults.call(this);
		this._defaultLayout = new haxe_ui_components_VProgressLayout();
	}
	,createChildren: function() {
		haxe_ui_components_Progress.prototype.createChildren.call(this);
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(20);
		}
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(150);
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Progress.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VProgress();
	}
	,__class__: haxe_ui_components_VProgress
});
var haxe_ui_components_VProgressLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.VProgressLayout"] = haxe_ui_components_VProgressLayout;
haxe_ui_components_VProgressLayout.__name__ = ["haxe","ui","components","VProgressLayout"];
haxe_ui_components_VProgressLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_VProgressLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var value = this.get_component().findComponent("progress-value");
		var progress = this.get_component();
		if(value != null) {
			var ucy = this.get_usableHeight();
			var cy = 0;
			if(progress.get_indeterminate() == false) {
				cy = (progress.get_pos() - progress.get_min()) / (progress.get_max() - progress.get_min()) * ucy;
			} else {
				cy = (progress.get_rangeEnd() - progress.get_rangeStart() - progress.get_min()) / (progress.get_max() - progress.get_min()) * ucy;
			}
			if(cy < 0) {
				cy = 0;
			} else if(cy > ucy) {
				cy = ucy;
			}
			if(cy == 0) {
				value.set_componentHeight(0);
				value.set_hidden(true);
			} else {
				value.set_componentHeight(cy);
				value.set_hidden(false);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var value = this.get_component().findComponent("progress-value");
		var progress = this.get_component();
		if(value != null) {
			var ucy = this.get_usableHeight();
			var y = ucy - value.get_componentHeight() + this.get_paddingBottom();
			if(progress.get_indeterminate() == true) {
				y -= (progress.get_rangeStart() - progress.get_min()) / (progress.get_max() - progress.get_min()) * ucy;
			}
			value.set_top(y);
		}
	}
	,__class__: haxe_ui_components_VProgressLayout
});
var haxe_ui_components_VScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.VScroll"] = haxe_ui_components_VScroll;
haxe_ui_components_VScroll.__name__ = ["haxe","ui","components","VScroll"];
haxe_ui_components_VScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_VScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayout = new haxe_ui_components_VScrollLayout();
	}
	,_onThumbMouseDown: function(event) {
		haxe_ui_components_Scroll.prototype._onThumbMouseDown.call(this,event);
		this._mouseDownOffset = event.screenY - this._thumb.get_top() + this.get_layout().get_paddingTop();
	}
	,_onScreenMouseMove: function(event) {
		haxe_ui_components_Scroll.prototype._onScreenMouseMove.call(this,event);
		if(this._mouseDownOffset == -1) {
			return;
		}
		var ypos = event.screenY - this._mouseDownOffset;
		var minY = 0;
		if(this._deincButton != null && this._deincButton.get_hidden() == false) {
			minY = this._deincButton.get_componentHeight() + this.get_layout().get_verticalSpacing();
		}
		var maxY = this.get_layout().get_usableHeight() - this._thumb.get_componentHeight();
		if(this._deincButton != null && this._deincButton.get_hidden() == false) {
			maxY += this._deincButton.get_componentHeight() + this.get_layout().get_verticalSpacing();
		}
		if(ypos < minY) {
			ypos = minY;
		} else if(ypos > maxY) {
			ypos = maxY;
		}
		var ucy = this.get_layout().get_usableHeight();
		ucy -= this._thumb.get_componentHeight();
		var m = this.get_max() - this.get_min() | 0;
		var v = ypos - minY;
		var newValue = this.get_min() + v / ucy * m;
		this.set_pos(newValue);
	}
	,_onMouseDown: function(event) {
		if(event.screenY < this._thumb.get_screenTop()) {
			this.animatePos(this.get_pos() - this.get_pageSize());
		} else if(event.screenY > this._thumb.get_screenTop() + this._thumb.get_componentHeight()) {
			this.animatePos(this.get_pos() + this.get_pageSize());
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VScroll();
	}
	,__class__: haxe_ui_components_VScroll
});
var haxe_ui_components_VScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.VScrollLayout"] = haxe_ui_components_VScrollLayout;
haxe_ui_components_VScrollLayout.__name__ = ["haxe","ui","components","VScrollLayout"];
haxe_ui_components_VScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_VScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = this.get_component();
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var ucy = this.get_usableHeight();
			var thumbHeight = scroll.get_pageSize() / m * ucy;
			if(thumbHeight < this.get_innerWidth()) {
				thumbHeight = this.get_innerWidth();
			} else if(thumbHeight > ucy) {
				thumbHeight = ucy;
			}
			if(thumbHeight > 0 && isNaN(thumbHeight) == false) {
				thumb.set_componentHeight(thumbHeight);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_top(this.get_component().get_componentHeight() - inc.get_componentHeight() - this.get_paddingBottom());
		}
		var scroll = this.get_component();
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableHeight();
			u -= thumb.get_componentHeight();
			var y = (scroll.get_pos() - scroll.get_min()) / m * u;
			y += this.get_paddingTop();
			if(deinc != null && this.hidden(deinc) == false) {
				y += deinc.get_componentHeight() + this.get_verticalSpacing();
			}
			thumb.set_top(y);
		}
	}
	,get_usableHeight: function() {
		var ucy = this.get_innerHeight();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucy -= deinc.get_componentHeight() + this.get_verticalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucy -= inc.get_componentHeight() + this.get_verticalSpacing();
		}
		return ucy;
	}
	,__class__: haxe_ui_components_VScrollLayout
});
var haxe_ui_components_VSlider = function() {
	haxe_ui_components_Slider.call(this);
};
$hxClasses["haxe.ui.components.VSlider"] = haxe_ui_components_VSlider;
haxe_ui_components_VSlider.__name__ = ["haxe","ui","components","VSlider"];
haxe_ui_components_VSlider.__super__ = haxe_ui_components_Slider;
haxe_ui_components_VSlider.prototype = $extend(haxe_ui_components_Slider.prototype,{
	createDefaults: function() {
		haxe_ui_components_Slider.prototype.createDefaults.call(this);
		this._defaultLayout = new haxe_ui_components_VSliderLayout();
	}
	,createChildren: function() {
		haxe_ui_components_Slider.prototype.createChildren.call(this);
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(20);
		}
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(150);
		}
		var tmp = this._valueBackground != null;
	}
	,_onValueBackgroundMouseDown: function(event) {
		var _gthis = this;
		haxe_ui_components_Slider.prototype._onValueBackgroundMouseDown.call(this,event);
		if(this._value.hitTest(event.screenX,event.screenY) == false) {
			if(this.get_rangeEnd() != this.get_rangeStart()) {
				if(event.screenY < this._rangeEndThumb.get_screenTop()) {
					this._activeThumb = this._rangeEndThumb;
					var ypos = event.screenY - this._valueBackground.get_screenTop() - this._activeThumb.get_componentHeight() / 2 - this._valueBackground.get_paddingBottom();
					this.animateRangeEnd(this.calcPosFromCoord(ypos));
					this._onRangeEndThumbMouseDown(event);
				} else if(event.screenY > this._rangeStartThumb.get_screenTop() + this._rangeStartThumb.get_componentHeight()) {
					this._activeThumb = this._rangeStartThumb;
					var ypos1 = event.screenY - this._valueBackground.get_screenTop() - this._activeThumb.get_componentHeight() / 2 - this._valueBackground.get_paddingBottom();
					this.animateRangeStart(this.calcPosFromCoord(ypos1));
					this._onRangeStartThumbMouseDown(event);
				}
			} else {
				this._activeThumb = this._rangeEndThumb;
				var ypos2 = event.screenY - this._valueBackground.get_screenTop() - this._activeThumb.get_componentHeight() / 2 - this._valueBackground.get_paddingBottom();
				this.animatePos(this.calcPosFromCoord(ypos2),function() {
					if(_gthis._activeThumb != null) {
						var tmp = _gthis._activeThumb.get_componentWidth() / 2;
						var tmp1 = _gthis._valueBackground.get_paddingBottom();
						_gthis._mouseDownOffset = tmp + tmp1;
					}
				});
				this._onRangeEndThumbMouseDown(event);
			}
		}
	}
	,_onValueMouseDown: function(event) {
		var _gthis = this;
		haxe_ui_components_Slider.prototype._onValueMouseDown.call(this,event);
		if(this.get_rangeEnd() != this.get_rangeStart()) {
			this._mouseDownOffset = event.screenY - this._value.get_top();
		} else {
			this._activeThumb = this._rangeEndThumb;
			var ypos = event.screenY - this._valueBackground.get_screenTop() - this._activeThumb.get_componentHeight() / 2 - this._valueBackground.get_paddingBottom();
			this.animatePos(this.calcPosFromCoord(ypos),function() {
				if(_gthis._activeThumb != null) {
					var tmp = _gthis._activeThumb.get_componentWidth() / 2;
					var tmp1 = _gthis._valueBackground.get_paddingBottom();
					_gthis._mouseDownOffset = tmp + tmp1;
				}
			});
			this._onRangeEndThumbMouseDown(event);
		}
	}
	,_onRangeEndThumbMouseDown: function(event) {
		haxe_ui_components_Slider.prototype._onRangeEndThumbMouseDown.call(this,event);
		this._mouseDownOffset = event.screenY - this._activeThumb.get_screenTop() + this._valueBackground.get_paddingBottom();
	}
	,_onRangeStartThumbMouseDown: function(event) {
		haxe_ui_components_Slider.prototype._onRangeStartThumbMouseDown.call(this,event);
		this._mouseDownOffset = event.screenY - this._activeThumb.get_screenTop() + this._valueBackground.get_paddingBottom();
	}
	,_onScreenMouseMove: function(event) {
		haxe_ui_components_Slider.prototype._onScreenMouseMove.call(this,event);
		if(this._mouseDownOffset == -1) {
			return;
		}
		if(this._activeThumb != null) {
			var ypos = event.screenY - this._valueBackground.get_screenTop() - this._mouseDownOffset;
			if(this.get_rangeEnd() != this.get_rangeStart()) {
				if(this._activeThumb == this._rangeEndThumb) {
					this.set_rangeEnd(this.calcPosFromCoord(ypos));
				} else if(this._activeThumb == this._rangeStartThumb) {
					this.set_rangeStart(this.calcPosFromCoord(ypos));
				}
			} else {
				this.set_pos(this.calcPosFromCoord(ypos));
			}
		} else {
			var diff = this.get_rangeEnd() - this.get_rangeStart();
			var ypos1 = event.screenY - this._mouseDownOffset;
			ypos1 += this._value.get_componentHeight();
			this._activeThumb = this._rangeStartThumb;
			var start = this.calcPosFromCoord(ypos1 - this._activeThumb.get_componentHeight() / 2 - this._valueBackground.get_paddingBottom());
			this._activeThumb = null;
			if(start + diff > this.get_max()) {
				return;
			}
			var end = start + diff;
			this.setRange(start,end);
		}
	}
	,calcPosFromCoord: function(ypos) {
		var minY = -(this._activeThumb.get_componentHeight() / 2);
		var maxY = this.get_layout().get_usableHeight() - this._activeThumb.get_componentHeight() / 2 - (this._valueBackground.get_paddingTop() + this._valueBackground.get_paddingBottom());
		if(ypos < minY) {
			ypos = minY;
		} else if(ypos > maxY) {
			ypos = maxY;
		}
		var ucy = this.get_layout().get_usableHeight() - (this._valueBackground.get_paddingTop() + this._valueBackground.get_paddingBottom());
		var m = this.get_max() - this.get_min();
		var v = ypos - minY;
		var newValue = this.get_min() + v / ucy * m;
		return this.get_max() - newValue;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Slider.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VSlider();
	}
	,__class__: haxe_ui_components_VSlider
});
var haxe_ui_components_VSliderLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.VSliderLayout"] = haxe_ui_components_VSliderLayout;
haxe_ui_components_VSliderLayout.__name__ = ["haxe","ui","components","VSliderLayout"];
haxe_ui_components_VSliderLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_VSliderLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var background = this.get_component().findComponent("slider-value-background");
		var value = null;
		if(background != null) {
			value = background.findComponent("slider-value");
		}
		var slider = this.get_component();
		if(value != null) {
			var ucy = background.get_layout().get_usableHeight();
			var cy = 0;
			if(slider.get_rangeStart() == slider.get_rangeEnd()) {
				cy = (slider.get_pos() - slider.get_min()) / (slider.get_max() - slider.get_min()) * ucy;
			} else {
				cy = (slider.get_rangeEnd() - slider.get_rangeStart() - slider.get_min()) / (slider.get_max() - slider.get_min()) * ucy;
			}
			if(cy < 0) {
				cy = 0;
			} else if(cy > ucy) {
				cy = ucy;
			}
			if(cy == 0) {
				value.set_componentHeight(cy);
				if(value.get_hidden() == false) {
					value.set_hidden(true);
					value.invalidateComponent("style");
				}
			} else {
				value.set_componentHeight(cy);
				if(value.get_hidden() == true) {
					value.set_hidden(false);
					value.invalidateComponent("style");
				}
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var background = this.get_component().findComponent("slider-value-background");
		var value = null;
		if(background != null) {
			value = background.findComponent("slider-value");
		}
		var slider = this.get_component();
		if(value != null) {
			var rangeStartButton = null;
			var rangeEndButton = this.get_component().findComponent("slider-range-end-button");
			var ucy = background.get_layout().get_usableHeight();
			var y = ucy - value.get_componentHeight() + background.get_layout().get_paddingTop();
			if(slider.get_rangeStart() != slider.get_rangeEnd()) {
				rangeStartButton = this.get_component().findComponent("slider-range-start-button");
				y -= (slider.get_rangeStart() - slider.get_min()) / (slider.get_max() - slider.get_min()) * ucy;
			}
			value.set_top(y);
			if(rangeStartButton != null) {
				rangeStartButton.set_top(y + this.get_paddingTop() + value.get_componentHeight() - rangeStartButton.get_componentHeight() / 2);
			}
			if(rangeEndButton != null) {
				rangeEndButton.set_top(this.get_paddingTop() + value.get_top() - rangeEndButton.get_componentHeight() / 2);
			}
		}
	}
	,__class__: haxe_ui_components_VSliderLayout
});
var haxe_ui_containers_Absolute = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_AbsoluteLayout());
};
$hxClasses["haxe.ui.containers.Absolute"] = haxe_ui_containers_Absolute;
haxe_ui_containers_Absolute.__name__ = ["haxe","ui","containers","Absolute"];
haxe_ui_containers_Absolute.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Absolute.prototype = $extend(haxe_ui_containers_Box.prototype,{
	cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Absolute();
	}
	,__class__: haxe_ui_containers_Absolute
});
var haxe_ui_containers_ContinuousHBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
};
$hxClasses["haxe.ui.containers.ContinuousHBox"] = haxe_ui_containers_ContinuousHBox;
haxe_ui_containers_ContinuousHBox.__name__ = ["haxe","ui","containers","ContinuousHBox"];
haxe_ui_containers_ContinuousHBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_ContinuousHBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ContinuousHBox();
	}
	,__class__: haxe_ui_containers_ContinuousHBox
});
var haxe_ui_containers_Grid = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_VerticalGridLayout());
	(js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).set_columns(4);
};
$hxClasses["haxe.ui.containers.Grid"] = haxe_ui_containers_Grid;
haxe_ui_containers_Grid.__name__ = ["haxe","ui","containers","Grid"];
haxe_ui_containers_Grid.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Grid.prototype = $extend(haxe_ui_containers_Box.prototype,{
	get_columns: function() {
		return (js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).get_columns();
	}
	,set_columns: function(value) {
		(js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).set_columns(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Grid();
	}
	,__class__: haxe_ui_containers_Grid
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_containers_Header = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.Header"] = haxe_ui_containers_Header;
haxe_ui_containers_Header.__name__ = ["haxe","ui","containers","Header"];
haxe_ui_containers_Header.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_Header.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Header();
	}
	,__class__: haxe_ui_containers_Header
});
var haxe_ui_containers_ListView = function() {
	this._selectedIndex = -1;
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.ListView"] = haxe_ui_containers_ListView;
haxe_ui_containers_ListView.__name__ = ["haxe","ui","containers","ListView"];
haxe_ui_containers_ListView.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_containers_ListView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_ListView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	createDefaults: function() {
		haxe_ui_containers_ScrollView.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_containers_ListViewDefaultDataSourceBehaviour(this);
		if(__map_reserved["dataSource"] != null) {
			_g.setReserved("dataSource",value);
		} else {
			_g.h["dataSource"] = value;
		}
		var value1 = new haxe_ui_containers_DefaultSelectedIndexBehaviour(this);
		if(__map_reserved["selectedIndex"] != null) {
			_g.setReserved("selectedIndex",value1);
		} else {
			_g.h["selectedIndex"] = value1;
		}
		this.defaultBehaviours(_g);
	}
	,createContentContainer: function() {
		if(this._contents == null) {
			haxe_ui_containers_ScrollView.prototype.createContentContainer.call(this);
			this._contents.set_percentWidth(100);
			this._contents.addClass("listview-contents");
		}
	}
	,addComponent: function(child) {
		var r = null;
		if((child instanceof haxe_ui_core_ItemRenderer) && (this._itemRenderer == null && this._itemRendererFunction == null)) {
			this._itemRenderer = js_Boot.__cast(child , haxe_ui_core_ItemRenderer);
			this.createContentContainer();
			if(this._dataSource != null) {
				this.invalidateComponent("data");
			}
		} else {
			if((child instanceof haxe_ui_core_ItemRenderer)) {
				child.registerEvent("click",$bind(this,this.onItemClick));
			}
			r = haxe_ui_containers_ScrollView.prototype.addComponent.call(this,child);
		}
		return r;
	}
	,onItemClick: function(event) {
		if(event.target == this._currentSelection) {
			return;
		}
		var arr = event.target.findComponentsUnderPoint(event.screenX,event.screenY);
		var _g = 0;
		while(_g < arr.length) {
			var a = arr[_g];
			++_g;
			if((a instanceof haxe_ui_core_InteractiveComponent)) {
				return;
			}
		}
		this.set_selectedItem(js_Boot.__cast(event.target , haxe_ui_core_ItemRenderer));
	}
	,get_selectedIndex: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviourSet("selectedIndex",haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(value));
		return value;
	}
	,get_selectedItem: function() {
		if(this.get_contents() == null || this._selectedIndex == -1 || this.get_contents().get_childComponents()[this._selectedIndex] == null) {
			return null;
		}
		return js_Boot.__cast(this.get_contents().get_childComponents()[this._selectedIndex] , haxe_ui_core_ItemRenderer);
	}
	,set_selectedItem: function(value) {
		if(this._dataSource != null && this._contents != null) {
			this.set_selectedIndex(this.get_contents().get_childComponents().indexOf(value));
		}
		return value;
	}
	,resetSelection: function() {
		this.set_selectedIndex(-1);
	}
	,addItem: function(data) {
		var r = this.itemToRenderer(data);
		r.set_percentWidth(100);
		var n = this.get_contents().get_childComponents().length;
		var item = this.addComponent(r);
		item.addClass(n % 2 == 0 ? "even" : "odd");
		item.set_data(data);
		return item;
	}
	,get_itemCount: function() {
		if(this._dataSource == null) {
			return 0;
		}
		return this._dataSource.get_size();
	}
	,get_itemHeight: function() {
		if(this.get_itemCount() == 0 || this.get_contents() == null) {
			return 0;
		}
		this.validate();
		return this.itemHeight;
	}
	,get_itemRendererFunction: function() {
		return this._itemRendererFunction;
	}
	,set_itemRendererFunction: function(value) {
		if(this._itemRendererFunction != value) {
			this._itemRendererFunction = value;
			this.invalidateComponent("data");
		}
		return value;
	}
	,get_itemRendererClass: function() {
		var o = this._itemRenderer;
		if(o == null) {
			return null;
		} else {
			return js_Boot.getClass(o);
		}
	}
	,set_itemRendererClass: function(value) {
		this._itemRenderer = Type.createInstance(value,[]);
		this.invalidateComponent("data");
		return value;
	}
	,get_dataSource: function() {
		if(this._dataSource == null) {
			this._dataSource = new haxe_ui_data_ArrayDataSource(new haxe_ui_data_transformation_NativeTypeTransformer());
			this.behaviourGet("dataSource");
		}
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		this._dataSource = value;
		this._dataSource.transformer = new haxe_ui_data_transformation_NativeTypeTransformer();
		this.invalidateComponent("data");
		return value;
	}
	,onDataSourceChanged: function() {
		this.invalidateComponent("data");
	}
	,syncUI: function() {
		if(this._dataSource == null) {
			return;
		}
		var _g1 = 0;
		var _g = this._dataSource.get_size();
		while(_g1 < _g) {
			var n = _g1++;
			var data = this._dataSource.get(n);
			var item = null;
			if(n < this.get_contents().get_childComponents().length) {
				item = js_Boot.__cast(this.get_contents().get_childComponents()[n] , haxe_ui_core_ItemRenderer);
				item.removeClass("even");
				item.removeClass("odd");
				if(this._itemRendererFunction != null && !js_Boot.__instanceof(item,this._itemRendererFunction(data).generator)) {
					this.get_contents().removeComponent(item);
					item = this.addComponent(this.itemToRenderer(data));
					this.get_contents().setComponentIndex(item,n);
				}
			} else {
				item = this.addComponent(this.itemToRenderer(data));
				this.get_contents().setComponentIndex(item,n);
			}
			item.addClass(n % 2 == 0 ? "even" : "odd");
			item.set_data(data);
		}
		while(this._dataSource.get_size() < this.get_contents().get_childComponents().length) this.get_contents().removeComponent(this.get_contents().get_childComponents()[this.get_contents().get_childComponents().length - 1]);
	}
	,itemToRenderer: function(data) {
		if(this._itemRendererFunction != null) {
			return this._itemRendererFunction(data).newInstance();
		} else {
			if(this._itemRenderer == null) {
				this._itemRenderer = new haxe_ui_core_BasicItemRenderer();
			}
			return this._itemRenderer.cloneComponent();
		}
	}
	,invalidateComponentIndex: function() {
		this.invalidateComponent("index");
	}
	,validateInternal: function() {
		var dataInvalid = this.isInvalid("data");
		var indexInvalid = this.isInvalid("index");
		var styleInvalid = this.isInvalid("style");
		var positionInvalid = this.isInvalid("position");
		var displayInvalid = this.isInvalid("display");
		var layoutInvalid = this.isInvalid("layout") && this._layoutLocked == false;
		var scrollInvalid = this.isInvalid("scroll");
		if(dataInvalid) {
			this.validateData();
		}
		if(dataInvalid || indexInvalid) {
			this.validateIndex();
		}
		if(styleInvalid) {
			this.validateStyle();
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(layoutInvalid) {
			displayInvalid = this.validateLayout() || displayInvalid;
		}
		if(scrollInvalid || layoutInvalid) {
			this.validateScroll();
		}
		if(displayInvalid || styleInvalid) {
			haxe_ui_validation_ValidationManager.get_instance().addDisplay(this);
		}
	}
	,validateData: function() {
		this.behaviourSet("dataSource",haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource(this._dataSource));
		haxe_ui_containers_ScrollView.prototype.validateData.call(this);
	}
	,validateIndex: function() {
		var selectedItem = this.get_selectedItem();
		if(this._currentSelection != selectedItem) {
			if(this._currentSelection != null) {
				this._currentSelection.removeClass(":selected",true,true);
			}
			this._currentSelection = selectedItem;
			if(this._currentSelection != null) {
				this._currentSelection.addClass(":selected",true,true);
				this.dispatch(new haxe_ui_core_UIEvent("change"));
			}
		}
	}
	,validateLayout: function() {
		var result = haxe_ui_containers_ScrollView.prototype.validateLayout.call(this);
		this.createContentContainer();
		if(this.get_contents() == null) {
			return result;
		}
		var n = 0;
		var cy = this.get_contents().get_layout().get_paddingTop() + this.get_contents().get_layout().get_paddingBottom();
		var scy = this.get_contents().get_layout().get_verticalSpacing();
		var _g = 0;
		var _g1 = this.get_contents().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			cy += child.get_height() + scy;
			++n;
			if(n > 100) {
				break;
			}
		}
		if(n > 0) {
			cy -= scy;
		}
		this.itemHeight = cy / n;
		return result;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if(this._dataSource != null) {
			c.set_dataSource(this._dataSource.clone());
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ListView();
	}
	,__class__: haxe_ui_containers_ListView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass",set_itemRendererFunction:"set_itemRendererFunction",get_itemRendererFunction:"get_itemRendererFunction",get_itemHeight:"get_itemHeight",get_itemCount:"get_itemCount",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
var haxe_ui_containers_ListViewDefaultDataSourceBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.ListViewDefaultDataSourceBehaviour"] = haxe_ui_containers_ListViewDefaultDataSourceBehaviour;
haxe_ui_containers_ListViewDefaultDataSourceBehaviour.__name__ = ["haxe","ui","containers","ListViewDefaultDataSourceBehaviour"];
haxe_ui_containers_ListViewDefaultDataSourceBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_containers_ListViewDefaultDataSourceBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	get: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		if(listView._dataSource != null) {
			listView._dataSource.onChange = $bind(listView,listView.onDataSourceChanged);
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource(listView._dataSource);
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		listView.syncUI();
		if(listView._dataSource != null) {
			listView._dataSource.onChange = $bind(listView,listView.onDataSourceChanged);
		}
	}
	,__class__: haxe_ui_containers_ListViewDefaultDataSourceBehaviour
});
var haxe_ui_containers_DefaultSelectedIndexBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.DefaultSelectedIndexBehaviour"] = haxe_ui_containers_DefaultSelectedIndexBehaviour;
haxe_ui_containers_DefaultSelectedIndexBehaviour.__name__ = ["haxe","ui","containers","DefaultSelectedIndexBehaviour"];
haxe_ui_containers_DefaultSelectedIndexBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_containers_DefaultSelectedIndexBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	get: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(listView._selectedIndex);
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		if(listView._dataSource != null && haxe_ui_util__$Variant_Variant_$Impl_$.lt(value,haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(listView._dataSource.get_size())) && haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(listView._selectedIndex) != value) {
			listView._selectedIndex = haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value);
			listView.invalidateComponent("index");
		}
	}
	,__class__: haxe_ui_containers_DefaultSelectedIndexBehaviour
});
var haxe_ui_containers_DefaultVScrollPosBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.DefaultVScrollPosBehaviour"] = haxe_ui_containers_DefaultVScrollPosBehaviour;
haxe_ui_containers_DefaultVScrollPosBehaviour.__name__ = ["haxe","ui","containers","DefaultVScrollPosBehaviour"];
haxe_ui_containers_DefaultVScrollPosBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_containers_DefaultVScrollPosBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	get: function() {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VScroll);
		if(vscroll == null) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0);
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(vscroll.get_pos());
	}
	,set: function(value) {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VScroll);
		if(vscroll != null) {
			vscroll.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value));
		}
	}
	,__class__: haxe_ui_containers_DefaultVScrollPosBehaviour
});
var haxe_ui_containers_DefaultHScrollPosBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.DefaultHScrollPosBehaviour"] = haxe_ui_containers_DefaultHScrollPosBehaviour;
haxe_ui_containers_DefaultHScrollPosBehaviour.__name__ = ["haxe","ui","containers","DefaultHScrollPosBehaviour"];
haxe_ui_containers_DefaultHScrollPosBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_containers_DefaultHScrollPosBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	get: function() {
		var hscroll = this._component.findComponent(null,haxe_ui_components_HScroll);
		if(hscroll == null) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0);
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(hscroll.get_pos());
	}
	,set: function(value) {
		var hscroll = this._component.findComponent(null,haxe_ui_components_HScroll);
		if(hscroll != null) {
			hscroll.set_pos(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(value));
		}
	}
	,__class__: haxe_ui_containers_DefaultHScrollPosBehaviour
});
var haxe_ui_containers_ScrollViewLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.containers.ScrollViewLayout"] = haxe_ui_containers_ScrollViewLayout;
haxe_ui_containers_ScrollViewLayout.__name__ = ["haxe","ui","containers","ScrollViewLayout"];
haxe_ui_containers_ScrollViewLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_containers_ScrollViewLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return;
		}
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VScroll,false);
		var ucx = this.get_innerWidth();
		var ucy = this.get_innerHeight();
		if(hscroll != null && this.hidden(hscroll) == false) {
			var ucy1 = this.get_innerHeight();
			hscroll.moveComponent(this.get_paddingLeft(),ucy1 - hscroll.get_componentHeight() + this.get_paddingBottom());
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			var ucx1 = this.get_innerWidth();
			vscroll.moveComponent(ucx1 - vscroll.get_componentWidth() + this.get_paddingRight(),this.get_paddingTop());
		}
		var contents1 = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents1 != null) {
			contents1.moveComponent(this.get_paddingLeft(),this.get_paddingTop());
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VScroll,false);
		if(hscroll != null && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_componentWidth() > size.width) {
					size.height -= haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_componentHeight() > size.height) {
					size.width -= haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VScroll,false);
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,[hscroll,vscroll]);
		if(hscroll != null && hscroll.get_hidden() == false) {
			size.height += hscroll.get_componentHeight();
		}
		if(vscroll != null && vscroll.get_hidden() == false) {
			size.width += vscroll.get_componentWidth();
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_width() > this.get_component().get_width()) {
					size.height += haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_height() > this.get_component().get_height()) {
					size.width += haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		return size;
	}
	,__class__: haxe_ui_containers_ScrollViewLayout
});
var haxe_ui_containers_Stack = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Stack"] = haxe_ui_containers_Stack;
haxe_ui_containers_Stack.__name__ = ["haxe","ui","containers","Stack"];
haxe_ui_containers_Stack.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Stack.prototype = $extend(haxe_ui_containers_Box.prototype,{
	cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Stack();
	}
	,__class__: haxe_ui_containers_Stack
});
var haxe_ui_containers_TabView = function() {
	this._pageIndex = -1;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.TabView"] = haxe_ui_containers_TabView;
haxe_ui_containers_TabView.__name__ = ["haxe","ui","containers","TabView"];
haxe_ui_containers_TabView.__super__ = haxe_ui_core_Component;
haxe_ui_containers_TabView.prototype = $extend(haxe_ui_core_Component.prototype,{
	createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		var _g = new haxe_ds_StringMap();
		var value = new haxe_ui_containers__$TabView_RemoveAllPages(this);
		if(__map_reserved["removeAllPages"] != null) {
			_g.setReserved("removeAllPages",value);
		} else {
			_g.h["removeAllPages"] = value;
		}
		var value1 = new haxe_ui_containers__$TabView_RemovePage(this);
		if(__map_reserved["removePage"] != null) {
			_g.setReserved("removePage",value1);
		} else {
			_g.h["removePage"] = value1;
		}
		var value2 = new haxe_ui_containers__$TabView_PageCount(this);
		if(__map_reserved["pageCount"] != null) {
			_g.setReserved("pageCount",value2);
		} else {
			_g.h["pageCount"] = value2;
		}
		this.defaultBehaviours(_g);
		this._defaultLayout = new haxe_ui_containers_TabViewLayout();
	}
	,createChildren: function() {
		haxe_ui_core_Component.prototype.createChildren.call(this);
		if(this._views == null) {
			this._views = [];
		}
		if(this._content == null) {
			this._content = new haxe_ui_containers_VBox();
			this._content.set_id("tabview-content");
			this._content.addClass("tabview-content");
			this.addComponent(this._content);
		}
		if(this._tabs == null) {
			this._tabs = new haxe_ui_components_TabBar();
			this._tabs.set_id("tabview-tabs");
			this._tabs.addClass("tabview-tabs");
			this._tabs.registerEvent("beforeChange",$bind(this,this._onBeforeTabsChange));
			this._tabs.registerEvent("change",$bind(this,this._onTabsChange));
			this.addComponent(this._tabs);
		}
	}
	,addComponent: function(child) {
		var v = null;
		if(child == this._tabs) {
			v = haxe_ui_core_Component.prototype.addComponent.call(this,child);
		} else if(child == this._content) {
			v = haxe_ui_core_Component.prototype.addComponent.call(this,child);
		} else if(this._views != null && this._tabs != null) {
			var text = child.get_text();
			var icon = null;
			if((child instanceof haxe_ui_containers_Box)) {
				icon = (js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon();
			}
			this._views.push(child);
			var button = new haxe_ui_components_Button();
			button.set_text(text);
			button.set_icon(icon);
			this._tabs.addComponent(button);
			this.invalidateComponent("data");
			if(this._pageIndex == -1) {
				this.set_pageIndex(0);
			}
		} else {
			haxe_ui_core_Component.prototype.addComponent.call(this,child);
		}
		return v;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		var v = null;
		if(child == this._tabs) {
			v = haxe_ui_core_Component.prototype.removeComponent.call(this,child,dispose);
		} else if(child == this._content) {
			v = haxe_ui_core_Component.prototype.removeComponent.call(this,child,dispose);
		} else if(this._views != null) {
			var index = this._views.indexOf(child);
			HxOverrides.remove(this._views,child);
			this._content.removeComponent(child);
			this._tabs.removeButton(index);
			this._pageIndex = this._tabs.get_selectedIndex();
			this.invalidateComponent("data");
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return v;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		var match = haxe_ui_core_Component.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var _g = 0;
			var _g1 = this._views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				match = view.findComponent(criteria,type,recursive,searchType);
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,get_pageIndex: function() {
		return this._pageIndex;
	}
	,set_pageIndex: function(value) {
		if(value < 0) {
			return value;
		}
		if(this._pageIndex == value) {
			return value;
		}
		this._pageIndex = value;
		this.invalidateComponent("data");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	,get_selectedPage: function() {
		if(this._pageIndex < 0) {
			return null;
		}
		return this._views[this._pageIndex];
	}
	,get_pages: function() {
		return this._views;
	}
	,get_pageCount: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.behaviourGet("pageCount"));
	}
	,removePage: function(index) {
		this.behaviourRun("removePage",haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(index));
	}
	,removeAllPages: function() {
		this.behaviourRun("removeAllPages");
	}
	,get_selectedButton: function() {
		return this._tabs.get_selectedButton();
	}
	,set_onBeforeChange: function(value) {
		if(this.__onBeforeChange != null) {
			this.unregisterEvent("beforeChange",this.__onBeforeChange);
			this.__onBeforeChange = null;
		}
		this.registerEvent("beforeChange",value);
		this.__onBeforeChange = value;
		return value;
	}
	,validateData: function() {
		if(this.get_native() == true) {
			return;
		}
		this._tabs.set_selectedIndex(this._pageIndex);
		var view = this._views[this._pageIndex];
		if(view != null) {
			if(this._currentView != null) {
				this._currentView.hide();
			}
			if(this._content.getComponentIndex(view) == -1) {
				this._content.addComponent(view);
			} else {
				view.show();
			}
			this._currentView = view;
		}
		this.dispatch(new haxe_ui_core_UIEvent("change"));
	}
	,_onBeforeTabsChange: function(event) {
		this.dispatch(new haxe_ui_core_UIEvent("beforeChange"));
	}
	,_onTabsChange: function(event) {
		this.set_pageIndex(this._tabs.get_selectedIndex());
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TabView();
	}
	,__class__: haxe_ui_containers_TabView
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_onBeforeChange:"set_onBeforeChange",get_selectedButton:"get_selectedButton",get_pageCount:"get_pageCount",get_pages:"get_pages",get_selectedPage:"get_selectedPage",set_pageIndex:"set_pageIndex",get_pageIndex:"get_pageIndex"})
});
var haxe_ui_containers_TabViewLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.containers.TabViewLayout"] = haxe_ui_containers_TabViewLayout;
haxe_ui_containers_TabViewLayout.__name__ = ["haxe","ui","containers","TabViewLayout"];
haxe_ui_containers_TabViewLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_containers_TabViewLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var tabs = this.get_component().findComponent("tabview-tabs");
		var content = this.get_component().findComponent("tabview-content");
		if(tabs == null || content == null) {
			return;
		}
		tabs.set_left(this.get_paddingLeft());
		tabs.set_top(this.get_paddingTop());
		content.set_left(this.get_paddingLeft());
		if(tabs.get_componentHeight() != null) {
			content.set_top(tabs.get_top() + tabs.get_componentHeight() - 1);
		}
	}
	,resizeChildren: function() {
		var content = this.get_component().findComponent("tabview-content");
		var tabs = this.get_component().findComponent("tabview-tabs");
		if(tabs == null || content == null) {
			return;
		}
		var usableSize = this.get_usableSize();
		tabs.set_width(usableSize.width);
		if(this.get_component().get_autoHeight() == false) {
			content.set_componentHeight(usableSize.height);
		}
		if(this.get_component().get_autoWidth() == false) {
			content.set_componentWidth(this.get_component().get_componentWidth());
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var tabs = this.get_component().findComponent("tabview-tabs");
		if(tabs != null && tabs.get_componentHeight() != null) {
			size.height -= tabs.get_componentHeight();
		}
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		return size;
	}
	,__class__: haxe_ui_containers_TabViewLayout
});
var haxe_ui_containers__$TabView_RemovePage = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.RemovePage"] = haxe_ui_containers__$TabView_RemovePage;
haxe_ui_containers__$TabView_RemovePage.__name__ = ["haxe","ui","containers","_TabView","RemovePage"];
haxe_ui_containers__$TabView_RemovePage.__super__ = haxe_ui_core_Behaviour;
haxe_ui_containers__$TabView_RemovePage.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	run: function(param) {
		var tabView = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		if(tabView._views != null) {
			var view = tabView._views[haxe_ui_util__$Variant_Variant_$Impl_$.toInt(param)];
			tabView.removeComponent(view);
		}
	}
	,__class__: haxe_ui_containers__$TabView_RemovePage
});
var haxe_ui_containers__$TabView_RemoveAllPages = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.RemoveAllPages"] = haxe_ui_containers__$TabView_RemoveAllPages;
haxe_ui_containers__$TabView_RemoveAllPages.__name__ = ["haxe","ui","containers","_TabView","RemoveAllPages"];
haxe_ui_containers__$TabView_RemoveAllPages.__super__ = haxe_ui_core_Behaviour;
haxe_ui_containers__$TabView_RemoveAllPages.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	run: function(param) {
		var tabView = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		if(tabView._views != null) {
			var _g = 0;
			var _g1 = tabView._views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				tabView.removeComponent(view);
			}
			tabView._views = [];
		}
		tabView._currentView = null;
		tabView._pageIndex = -1;
		if(tabView._content != null) {
			tabView._content.removeAllComponents();
		}
		if(tabView._tabs != null) {
			tabView._tabs.removeAllButtons();
			tabView._tabs.resetSelection();
		}
	}
	,__class__: haxe_ui_containers__$TabView_RemoveAllPages
});
var haxe_ui_containers__$TabView_PageCount = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.PageCount"] = haxe_ui_containers__$TabView_PageCount;
haxe_ui_containers__$TabView_PageCount.__name__ = ["haxe","ui","containers","_TabView","PageCount"];
haxe_ui_containers__$TabView_PageCount.__super__ = haxe_ui_core_Behaviour;
haxe_ui_containers__$TabView_PageCount.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	get: function() {
		var tabView = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		if(tabView._tabs == null) {
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(0);
		}
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(tabView._tabs.get_buttonCount());
	}
	,__class__: haxe_ui_containers__$TabView_PageCount
});
var haxe_ui_containers_TableView = function() {
	this.lastScrollLeft = 0;
	this._itemRenderers = [];
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.TableView"] = haxe_ui_containers_TableView;
haxe_ui_containers_TableView.__name__ = ["haxe","ui","containers","TableView"];
haxe_ui_containers_TableView.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_containers_TableView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_TableView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	createDefaults: function() {
		haxe_ui_containers_ScrollView.prototype.createDefaults.call(this);
	}
	,createLayout: function() {
		return new haxe_ui_containers_TableViewLayout();
	}
	,createChildren: function() {
		haxe_ui_containers_ScrollView.prototype.createChildren.call(this);
		this.set_percentContentWidth(100);
		this._contents.addClass("tableview-contents",false);
	}
	,onReady: function() {
		haxe_ui_containers_ScrollView.prototype.onReady.call(this);
		if(this._header != null && this._itemRenderers.length < this._header.get_childComponents().length) {
			var delta = this._header.get_childComponents().length - this._itemRenderers.length;
			var _g1 = 0;
			var _g = delta;
			while(_g1 < _g) {
				var n = _g1++;
				this.addComponent(new haxe_ui_core_BasicItemRenderer());
			}
		}
	}
	,_onContentsResized: function(event) {
		haxe_ui_containers_ScrollView.prototype._onContentsResized.call(this,event);
	}
	,addComponent: function(child) {
		var _gthis = this;
		var v = null;
		if((child instanceof haxe_ui_containers_Header)) {
			this._header = js_Boot.__cast(child , haxe_ui_containers_Header);
			this._header.registerEvent("resize",$bind(this,this._onHeaderResized));
			if(this.get_native() == true) {
				this.element.onscroll = function(e) {
					if(_gthis.lastScrollLeft != _gthis.element.scrollLeft) {
						_gthis.lastScrollLeft = _gthis.element.scrollLeft;
						_gthis._onHeaderResized(null);
					}
				};
			}
			v = this.addComponentToSuper(child);
			if(this._dataSource != null) {
				this.invalidateComponent("data");
			}
		} else if((child instanceof haxe_ui_core_ItemRenderer)) {
			var itemRenderer = js_Boot.__cast(child , haxe_ui_core_ItemRenderer);
			itemRenderer.set_allowHover(false);
			this._itemRenderers.push(itemRenderer);
		} else if((child instanceof haxe_ui_components_VScroll)) {
			child.set_includeInLayout(false);
			haxe_ui_containers_ScrollView.prototype.addComponent.call(this,child);
		} else {
			v = haxe_ui_containers_ScrollView.prototype.addComponent.call(this,child);
		}
		return v;
	}
	,_onHeaderResized: function(event) {
		this.updateNativeHeaderClip();
	}
	,updateNativeHeaderClip: function() {
		if(this.get_native() == true) {
			if(this._header != null) {
				var ucx = this.get_layout().get_usableWidth();
				var xpos = this.element.scrollLeft;
				var clipCX = ucx;
				if(clipCX > this._header.get_componentWidth()) {
					clipCX = this._header.get_componentWidth();
				}
				if(xpos > 0) {
					this._header.set_left(2);
					++xpos;
				} else {
					this._header.set_left(1);
				}
				var rc = new haxe_ui_util_Rectangle(xpos | 0,0,clipCX,this._header.get_componentHeight());
				this._header.set_componentClipRect(rc);
			}
		}
	}
	,get_horizontalConstraint: function() {
		return this._header;
	}
	,get_verticalConstraint: function() {
		return this._contents;
	}
	,get_hscrollOffset: function() {
		return 2;
	}
	,get_dataSource: function() {
		if(this._dataSource == null) {
			this._dataSource = new haxe_ui_data_ArrayDataSource();
			this._dataSource.onChange = $bind(this,this.onDataSourceChanged);
		}
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		this._dataSource = value;
		this.invalidateComponent("data");
		this._dataSource.onChange = $bind(this,this.onDataSourceChanged);
		return value;
	}
	,onDataSourceChanged: function() {
		if(this._ready == true) {
			this.invalidateComponent("data");
		}
	}
	,syncUI: function() {
		if(this._dataSource == null || this._header == null || this._contents == null || this._itemRenderers.length < this._header.get_childComponents().length) {
			return;
		}
		var delta = this._dataSource.get_size() - this.get_itemCount();
		if(delta > 0) {
			var _g1 = 0;
			var _g = delta;
			while(_g1 < _g) {
				var n = _g1++;
				var row = new haxe_ui_containers_TableViewRow();
				row.addClass("tableview-row");
				var _g3 = 0;
				var _g2 = this._header.get_childComponents().length;
				while(_g3 < _g2) {
					var n1 = _g3++;
					row.addComponent(this._itemRenderers[n1].cloneComponent());
				}
				row.registerEvent("click",$bind(this,this.onRowClick));
				this.addComponent(row);
			}
		} else if(delta < 0) {
			while(delta < 0) {
				this._contents.removeComponent(this._contents.get_childComponents()[this._contents.get_childComponents().length - 1]);
				++delta;
			}
		}
		var _g11 = 0;
		var _g4 = this._dataSource.get_size();
		while(_g11 < _g4) {
			var n2 = _g11++;
			var row1 = js_Boot.__cast(this._contents.get_childComponents()[n2] , haxe_ui_containers_TableViewRow);
			var data = this._dataSource.get(n2);
			row1.userData = data;
			var _g31 = 0;
			var _g21 = this._header.get_childComponents().length;
			while(_g31 < _g21) {
				var c = _g31++;
				var item = js_Boot.__cast(row1.get_childComponents()[c] , haxe_ui_core_ItemRenderer);
				item.addClass(n2 % 2 == 0 ? "even" : "odd");
				var textData = Reflect.field(data,this._header.get_childComponents()[c].get_id());
				if(textData != null) {
					item.set_data({ value : textData});
				}
			}
		}
		this.invalidateComponent("display");
	}
	,resetSelection: function() {
		if(this._selectedRow != null) {
			var _g = 0;
			var _g1 = this._selectedRow.get_childComponents();
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.removeClass(":selected");
			}
			this._selectedRow = null;
		}
	}
	,get_selectedRow: function() {
		return this._selectedRow;
	}
	,onRowClick: function(event) {
		if(this._selectedRow == event.target) {
			return;
		}
		this.resetSelection();
		this._selectedRow = event.target;
		var _g = 0;
		var _g1 = this._selectedRow.get_childComponents();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.addClass(":selected");
		}
		var event1 = new haxe_ui_core_UIEvent("change");
		this.dispatch(event1);
	}
	,get_itemCount: function() {
		if(this._contents == null) {
			return 0;
		}
		return this._contents.get_childComponents().length;
	}
	,updateScrollRect: function() {
		var rc = null;
		var ucx = this.get_layout().get_usableWidth();
		var ucy = this.get_layout().get_usableHeight();
		var xpos = 0;
		if(this._hscroll != null) {
			xpos = this._hscroll.get_pos();
		}
		var ypos = 0;
		if(this._vscroll != null) {
			ypos = this._vscroll.get_pos();
		}
		if(this._header != null && (this.get_native() == false || this.get_native() == null)) {
			var clipCX = ucx;
			if(clipCX > this._header.get_componentWidth()) {
				clipCX = this._header.get_componentWidth();
			}
			var rc1 = new haxe_ui_util_Rectangle(xpos + 1 | 0,1,clipCX,this._header.get_componentHeight());
			this._header.set_componentClipRect(rc1);
		} else {
			this.updateNativeHeaderClip();
		}
		if(this._contents != null) {
			var clipCX1 = ucx;
			if(clipCX1 > this._contents.get_componentWidth()) {
				clipCX1 = this._contents.get_componentWidth();
			}
			var clipCY = ucy;
			if(clipCY > this._contents.get_componentHeight()) {
				clipCY = this._contents.get_componentHeight();
			}
			var rc2 = new haxe_ui_util_Rectangle(xpos | 0,ypos | 0,clipCX1,clipCY);
			this._contents.set_componentClipRect(rc2);
		}
	}
	,validateData: function() {
		this.syncUI();
	}
	,updateDisplay: function() {
		haxe_ui_containers_ScrollView.prototype.updateDisplay.call(this);
		var _g = 0;
		var _g1 = this._contents.get_childComponents();
		while(_g < _g1.length) {
			var row = _g1[_g];
			++_g;
			var _g3 = 0;
			var _g2 = this._header.get_childComponents().length;
			while(_g3 < _g2) {
				var c = _g3++;
				var item = row.get_childComponents()[c];
				item.set_percentWidth(null);
				item.set_componentWidth(this._header.get_childComponents()[c].get_componentWidth() - 2);
			}
		}
	}
	,validateScroll: function() {
		this.checkScrolls();
		this.updateScrollRect();
		this.handleBindings(["hscrollPos"]);
		this.handleBindings(["vscrollPos"]);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if(this._dataSource != null) {
			c.set_dataSource(this._dataSource.clone());
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TableView();
	}
	,__class__: haxe_ui_containers_TableView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{get_itemCount:"get_itemCount",get_selectedRow:"get_selectedRow",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"})
});
var haxe_ui_containers_TableViewLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.containers.TableViewLayout"] = haxe_ui_containers_TableViewLayout;
haxe_ui_containers_TableViewLayout.__name__ = ["haxe","ui","containers","TableViewLayout"];
haxe_ui_containers_TableViewLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_containers_TableViewLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VScroll);
		var header = this.get_component().findComponent(null,haxe_ui_containers_Header);
		if(vscroll != null) {
			var offsetY = 0;
			if(header != null) {
				offsetY += header.get_componentHeight();
			}
			vscroll.set_componentHeight(this.get_usableHeight() + offsetY);
		}
	}
	,repositionChildren: function() {
		var header = this.get_component().findComponent(null,haxe_ui_containers_Header);
		if(header != null) {
			header.set_left(this.get_paddingLeft() + this.marginLeft(header) - this.marginRight(header));
			header.set_top(this.get_paddingTop() + this.marginTop(header) - this.marginBottom(header));
		}
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VScroll,false);
		var ucx = this.get_innerWidth();
		var ucy = this.get_innerHeight();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_left(this.get_paddingLeft());
			hscroll.set_top(ucy - hscroll.get_componentHeight() + this.get_paddingBottom());
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_left(ucx - vscroll.get_componentWidth() + this.get_paddingRight());
			vscroll.set_top(this.get_paddingTop());
		}
		var contents = this.get_component().findComponent("tableview-contents",null,false,"css");
		if(contents != null) {
			var offsetY = 0;
			if(header != null) {
				offsetY += header.get_componentHeight();
			}
			contents.set_left(this.get_paddingLeft() + this.marginLeft(contents) - this.marginRight(contents));
			contents.set_top(this.get_paddingTop() + this.marginTop(contents) - this.marginBottom(contents) + offsetY);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VScroll,false);
		if(hscroll != null && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		var header = this.get_component().findComponent(null,haxe_ui_containers_Header);
		if(header != null) {
			size.height -= header.get_componentHeight();
		}
		size.height += 1;
		size.width += 1;
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_TableView)).get_native() == true) {
			var contents = this.get_component().findComponent("tableview-contents",null,false,"css");
			if(contents != null && contents.get_componentHeight() > size.height) {
				size.width -= haxe_ui_core_Platform.get_vscrollWidth();
			}
			if(contents != null && contents.get_componentWidth() > size.width) {
				size.height -= haxe_ui_core_Platform.get_hscrollHeight();
			}
		}
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VScroll,false);
		if(hscroll != null && hscroll.get_hidden() == false) {
			size.height += hscroll.get_componentHeight();
		}
		if(vscroll != null && vscroll.get_hidden() == false) {
			size.width += vscroll.get_componentWidth();
		}
		return size;
	}
	,__class__: haxe_ui_containers_TableViewLayout
});
var haxe_ui_containers_TableViewRow = function() {
	haxe_ui_containers_HBox.call(this);
	this.registerEvent("mouseover",$bind(this,this._onMouseOver));
	this.registerEvent("mouseout",$bind(this,this._onMouseOut));
};
$hxClasses["haxe.ui.containers.TableViewRow"] = haxe_ui_containers_TableViewRow;
haxe_ui_containers_TableViewRow.__name__ = ["haxe","ui","containers","TableViewRow"];
haxe_ui_containers_TableViewRow.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_TableViewRow.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	_onMouseOver: function(event) {
		var _g = 0;
		var _g1 = this.get_childComponents();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.addClass(":hover");
		}
	}
	,_onMouseOut: function(event) {
		var _g = 0;
		var _g1 = this.get_childComponents();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.removeClass(":hover");
		}
	}
	,get_data: function() {
		return this.userData;
	}
	,set_data: function(value) {
		this.userData = value;
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TableViewRow();
	}
	,__class__: haxe_ui_containers_TableViewRow
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_data:"set_data",get_data:"get_data"})
});
var haxe_ui_containers_dialogs_Dialog = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.dialogs.Dialog"] = haxe_ui_containers_dialogs_Dialog;
haxe_ui_containers_dialogs_Dialog.__name__ = ["haxe","ui","containers","dialogs","Dialog"];
haxe_ui_containers_dialogs_Dialog.__super__ = haxe_ui_core_Component;
haxe_ui_containers_dialogs_Dialog.prototype = $extend(haxe_ui_core_Component.prototype,{
	createChildren: function() {
		this.set_layout(new haxe_ui_layouts_VerticalLayout());
	}
	,createTitleBar: function() {
		if(this.get_native() == true) {
			return;
		}
		if(this._titleBar == null) {
			this._titleBar = new haxe_ui_containers_Box();
			this._titleBar.set_id("dialog-title-bar");
			this._titleBar.addClass("dialog-title-bar");
			this._title = new haxe_ui_components_Label();
			this._title.set_text(this._options.title);
			this._title.set_id("dialog-title");
			this._title.addClass("dialog-title");
			this._titleBar.addComponent(this._title);
			this._closeButton = new haxe_ui_components_Button();
			this._closeButton.set_id("dialog-close-button");
			this._closeButton.addClass("dialog-close-button");
			this._closeButton.registerEvent("click",$bind(this,this._onButtonClick));
			var dialogButton = new haxe_ui_containers_dialogs_DialogButton();
			dialogButton.closesDialog = true;
			dialogButton.id = "" + 4;
			this._closeButton.userData = dialogButton;
			this._titleBar.addComponent(this._closeButton);
			this.addComponent(this._titleBar);
		}
	}
	,createButtonBar: function() {
		if(this._buttons == null && this._options != null && this._options.buttons.length > 0) {
			this._buttons = new haxe_ui_containers_HBox();
			this._buttons.set_id("dialog-buttons");
			this._buttons.addClass("dialog-buttons");
			var _g = 0;
			var _g1 = this._options.buttons;
			while(_g < _g1.length) {
				var b = _g1[_g];
				++_g;
				this.addButton(b);
			}
			this.addComponent(this._buttons);
		}
	}
	,addComponent: function(child) {
		var r = null;
		if(child == this._titleBar || child == this._buttons) {
			r = haxe_ui_core_Component.prototype.addComponent.call(this,child);
		} else {
			child.addClass("dialog-content");
			r = haxe_ui_core_Component.prototype.addComponent.call(this,child);
			this.createButtonBar();
		}
		return r;
	}
	,close: function(buttonId) {
		this.get_screen().hideDialog(this);
		var dialogButton = null;
		if(this._buttons != null) {
			var button = this._buttons.findComponent(buttonId);
			if(button != null) {
				dialogButton = js_Boot.__cast(button , haxe_ui_containers_dialogs_DialogButton);
			}
		}
		if(dialogButton == null) {
			dialogButton = new haxe_ui_containers_dialogs_DialogButton(buttonId);
		}
		if(this.callback != null) {
			this.callback(dialogButton);
		}
	}
	,addButton: function(dialogButton) {
		if(this._buttons == null) {
			this.createButtonBar();
		}
		var button = new haxe_ui_components_Button();
		button.set_id(dialogButton.id);
		button.set_text(dialogButton.text);
		button.set_styleNames(dialogButton.styleNames);
		button.set_styleString(dialogButton.style);
		button.set_icon(dialogButton.icon);
		button.userData = dialogButton;
		button.registerEvent("click",$bind(this,this._onButtonClick));
		this._buttons.addComponent(button);
		return button;
	}
	,get_dialogOptions: function() {
		return this._options;
	}
	,set_dialogOptions: function(value) {
		this._options = value;
		if(this._options.styleNames != null) {
			this.set_styleNames(this._options.styleNames);
		}
		this.createTitleBar();
		return value;
	}
	,_onButtonClick: function(event) {
		var dialogButton = null;
		if(event.target.userData != null) {
			dialogButton = js_Boot.__cast(event.target.userData , haxe_ui_containers_dialogs_DialogButton);
		}
		if(dialogButton == null || dialogButton.closesDialog == true) {
			this.close();
		}
		if(this.callback != null) {
			this.callback(dialogButton);
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_dialogs_Dialog();
	}
	,__class__: haxe_ui_containers_dialogs_Dialog
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_dialogOptions:"set_dialogOptions",get_dialogOptions:"get_dialogOptions"})
});
var haxe_ui_containers_dialogs_DialogButton = function(id,text,closesDialog) {
	if(closesDialog == null) {
		closesDialog = true;
	}
	this.closesDialog = true;
	this.id = id;
	this.text = text;
	this.closesDialog = closesDialog;
};
$hxClasses["haxe.ui.containers.dialogs.DialogButton"] = haxe_ui_containers_dialogs_DialogButton;
haxe_ui_containers_dialogs_DialogButton.__name__ = ["haxe","ui","containers","dialogs","DialogButton"];
haxe_ui_containers_dialogs_DialogButton.prototype = {
	__class__: haxe_ui_containers_dialogs_DialogButton
};
var haxe_ui_containers_dialogs_DialogOptions = function() {
	this.buttons = [];
};
$hxClasses["haxe.ui.containers.dialogs.DialogOptions"] = haxe_ui_containers_dialogs_DialogOptions;
haxe_ui_containers_dialogs_DialogOptions.__name__ = ["haxe","ui","containers","dialogs","DialogOptions"];
haxe_ui_containers_dialogs_DialogOptions.prototype = {
	addStandardButton: function(button) {
		switch(button) {
		case 1:
			var b = new haxe_ui_containers_dialogs_DialogButton();
			b.text = "OK";
			b.id = "" + 1;
			b.styleNames = "dialog-button dialog-button-ok";
			this.addButton(b);
			break;
		case 2:
			var b1 = new haxe_ui_containers_dialogs_DialogButton();
			b1.text = "Cancel";
			b1.id = "" + 2;
			b1.styleNames = "dialog-button dialog-button-cancel";
			this.addButton(b1);
			break;
		case 4:
			var b2 = new haxe_ui_containers_dialogs_DialogButton();
			b2.text = "Close";
			b2.id = "" + 4;
			b2.styleNames = "dialog-button dialog-button-close";
			this.addButton(b2);
			break;
		case 8:
			var b3 = new haxe_ui_containers_dialogs_DialogButton();
			b3.text = "Confirm";
			b3.id = "" + 8;
			b3.styleNames = "dialog-button dialog-button-confirm";
			this.addButton(b3);
			break;
		case 16:
			var b4 = new haxe_ui_containers_dialogs_DialogButton();
			b4.text = "Yes";
			b4.id = "" + 16;
			b4.styleNames = "dialog-button dialog-button-yes";
			this.addButton(b4);
			break;
		case 32:
			var b5 = new haxe_ui_containers_dialogs_DialogButton();
			b5.text = "No";
			b5.id = "" + 32;
			b5.styleNames = "dialog-button dialog-button-no";
			this.addButton(b5);
			break;
		default:
		}
	}
	,addButton: function(button) {
		this.buttons.push(button);
	}
	,__class__: haxe_ui_containers_dialogs_DialogOptions
};
var haxe_ui_containers_dialogs_MessageDialog = function() {
	haxe_ui_containers_dialogs_Dialog.call(this);
};
$hxClasses["haxe.ui.containers.dialogs.MessageDialog"] = haxe_ui_containers_dialogs_MessageDialog;
haxe_ui_containers_dialogs_MessageDialog.__name__ = ["haxe","ui","containers","dialogs","MessageDialog"];
haxe_ui_containers_dialogs_MessageDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
haxe_ui_containers_dialogs_MessageDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_dialogs_MessageDialog();
	}
	,__class__: haxe_ui_containers_dialogs_MessageDialog
});
var haxe_ui_core_ItemRenderer = function() {
	this._allowHover = true;
	haxe_ui_containers_Box.call(this);
	this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
	this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
};
$hxClasses["haxe.ui.core.ItemRenderer"] = haxe_ui_core_ItemRenderer;
haxe_ui_core_ItemRenderer.__name__ = ["haxe","ui","core","ItemRenderer"];
haxe_ui_core_ItemRenderer.__super__ = haxe_ui_containers_Box;
haxe_ui_core_ItemRenderer.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_onItemMouseOver: function(event) {
		this.addClass(":hover");
	}
	,_onItemMouseOut: function(event) {
		this.removeClass(":hover");
	}
	,get_allowHover: function() {
		return this._allowHover;
	}
	,set_allowHover: function(value) {
		if(this._allowHover == value) {
			return value;
		}
		this._allowHover = value;
		if(this._allowHover == true) {
			this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
		} else {
			this.unregisterEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.unregisterEvent("mouseout",$bind(this,this._onItemMouseOut));
		}
		return value;
	}
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		if(value == this._data) {
			return value;
		}
		this.invalidateComponent("data");
		this._data = value;
		return value;
	}
	,validateData: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this._data);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var v = Reflect.getProperty(this._data,f);
			var c = this.findComponent(f,null,true);
			if(c != null && v != null) {
				if(Type["typeof"](v) == ValueType.TObject) {
					var _g2 = 0;
					var _g3 = Reflect.fields(v);
					while(_g2 < _g3.length) {
						var propName = _g3[_g2];
						++_g2;
						var propValue = Reflect.getProperty(v,propName);
						if(propValue == "true" || propValue == "yes" || propValue == "false" || propValue == "no") {
							propValue = propValue == "true" || propValue == "yes";
						} else if(new EReg("^[0-9]*$","i").match(propValue)) {
							propValue = Std.parseInt(propValue);
						}
						if(propName == "value") {
							c.set_value(haxe_ui_util__$Variant_Variant_$Impl_$.fromDynamic(propValue));
						} else {
							Reflect.setProperty(c,propName,propValue);
						}
					}
				} else {
					c.set_value(haxe_ui_util__$Variant_Variant_$Impl_$.fromDynamic(v));
				}
				c.show();
			} else if(c != null) {
				c.hide();
			}
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_allowHover(this.get_allowHover());
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ItemRenderer();
	}
	,__class__: haxe_ui_core_ItemRenderer
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_allowHover:"set_allowHover",get_allowHover:"get_allowHover"})
});
var haxe_ui_core_BasicItemRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	this.set_percentWidth(100);
	var hbox = new haxe_ui_containers_HBox();
	hbox.set_percentWidth(100);
	var icon = new haxe_ui_components_Image();
	icon.set_id("icon");
	icon.set_verticalAlign("center");
	icon.hide();
	hbox.addComponent(icon);
	var label = new haxe_ui_components_Label();
	label.set_id("value");
	label.set_percentWidth(100);
	label.set_verticalAlign("center");
	label.hide();
	hbox.addComponent(label);
	this.addComponent(hbox);
};
$hxClasses["haxe.ui.core.BasicItemRenderer"] = haxe_ui_core_BasicItemRenderer;
haxe_ui_core_BasicItemRenderer.__name__ = ["haxe","ui","core","BasicItemRenderer"];
haxe_ui_core_BasicItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
haxe_ui_core_BasicItemRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_BasicItemRenderer();
	}
	,__class__: haxe_ui_core_BasicItemRenderer
});
var haxe_ui_core_ClassFactory = function(generator,properties) {
	this.generator = generator;
	this.properties = properties;
};
$hxClasses["haxe.ui.core.ClassFactory"] = haxe_ui_core_ClassFactory;
haxe_ui_core_ClassFactory.__name__ = ["haxe","ui","core","ClassFactory"];
haxe_ui_core_ClassFactory.prototype = {
	newInstance: function() {
		var instance = Type.createInstance(this.generator,[]);
		if(this.properties != null) {
			var property = this.properties.keys();
			while(property.hasNext()) {
				var property1 = property.next();
				var _this = this.properties;
				Reflect.setProperty(instance,property1,__map_reserved[property1] != null ? _this.getReserved(property1) : _this.h[property1]);
			}
		}
		return instance;
	}
	,__class__: haxe_ui_core_ClassFactory
};
var haxe_ui_core_BindingInfo = function() {
};
$hxClasses["haxe.ui.core.BindingInfo"] = haxe_ui_core_BindingInfo;
haxe_ui_core_BindingInfo.__name__ = ["haxe","ui","core","BindingInfo"];
haxe_ui_core_BindingInfo.prototype = {
	__class__: haxe_ui_core_BindingInfo
};
var haxe_ui_core_DeferredBindingInfo = function() {
};
$hxClasses["haxe.ui.core.DeferredBindingInfo"] = haxe_ui_core_DeferredBindingInfo;
haxe_ui_core_DeferredBindingInfo.__name__ = ["haxe","ui","core","DeferredBindingInfo"];
haxe_ui_core_DeferredBindingInfo.prototype = {
	__class__: haxe_ui_core_DeferredBindingInfo
};
var haxe_ui_core_ComponentDefaultDisabledBehaviour = function(component) {
	haxe_ui_core_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentDefaultDisabledBehaviour"] = haxe_ui_core_ComponentDefaultDisabledBehaviour;
haxe_ui_core_ComponentDefaultDisabledBehaviour.__name__ = ["haxe","ui","core","ComponentDefaultDisabledBehaviour"];
haxe_ui_core_ComponentDefaultDisabledBehaviour.__super__ = haxe_ui_core_Behaviour;
haxe_ui_core_ComponentDefaultDisabledBehaviour.prototype = $extend(haxe_ui_core_Behaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(value)) {
			return;
		}
		this._component.disableInteractivity(haxe_ui_util__$Variant_Variant_$Impl_$.toBool(value),":disabled");
	}
	,get: function() {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(this._component._disabled);
	}
	,__class__: haxe_ui_core_ComponentDefaultDisabledBehaviour
});
var haxe_ui_core_ComponentClassMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.core.ComponentClassMap"] = haxe_ui_core_ComponentClassMap;
haxe_ui_core_ComponentClassMap.__name__ = ["haxe","ui","core","ComponentClassMap"];
haxe_ui_core_ComponentClassMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_ComponentClassMap.get_instance = function() {
	if(haxe_ui_core_ComponentClassMap._instance == null) {
		haxe_ui_core_ComponentClassMap._instance = new haxe_ui_core_ComponentClassMap();
	}
	return haxe_ui_core_ComponentClassMap._instance;
};
haxe_ui_core_ComponentClassMap.get = function(alias) {
	return haxe_ui_core_ComponentClassMap.get_instance().getClassName(alias);
};
haxe_ui_core_ComponentClassMap.register = function(alias,className) {
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName(alias,className);
};
haxe_ui_core_ComponentClassMap.list = function() {
	return haxe_ui_core_ComponentClassMap.get_instance()._map.keys();
};
haxe_ui_core_ComponentClassMap.prototype = {
	getClassName: function(alias) {
		var _this = this._map;
		if(__map_reserved[alias] != null) {
			return _this.getReserved(alias);
		} else {
			return _this.h[alias];
		}
	}
	,registerClassName: function(alias,className) {
		var _this = this._map;
		if(__map_reserved[alias] != null) {
			_this.setReserved(alias,className);
		} else {
			_this.h[alias] = className;
		}
	}
	,__class__: haxe_ui_core_ComponentClassMap
};
var haxe_ui_core_ImageDisplay = function() {
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_ImageDisplayBase.call(this);
};
$hxClasses["haxe.ui.core.ImageDisplay"] = haxe_ui_core_ImageDisplay;
haxe_ui_core_ImageDisplay.__name__ = ["haxe","ui","core","ImageDisplay"];
haxe_ui_core_ImageDisplay.__super__ = haxe_ui_backend_ImageDisplayBase;
haxe_ui_core_ImageDisplay.prototype = $extend(haxe_ui_backend_ImageDisplayBase.prototype,{
	get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidate("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidate("position");
		return value;
	}
	,set_imageWidth: function(value) {
		if(this._imageWidth == value || value <= 0) {
			return value;
		}
		this._imageWidth = value;
		this.invalidate("display");
		return value;
	}
	,get_imageWidth: function() {
		return this._imageWidth;
	}
	,set_imageHeight: function(value) {
		if(this._imageHeight == value || value <= 0) {
			return value;
		}
		this._imageHeight = value;
		this.invalidate("display");
		return value;
	}
	,get_imageHeight: function() {
		return this._imageHeight;
	}
	,get_imageInfo: function() {
		return this._imageInfo;
	}
	,set_imageInfo: function(value) {
		if(value == this._imageInfo) {
			return value;
		}
		this._imageInfo = value;
		this._imageWidth = this._imageInfo.width;
		this._imageHeight = this._imageInfo.height;
		this.invalidate("data");
		this.invalidate("display");
		return value;
	}
	,get_imageClipRect: function() {
		return this._imageClipRect;
	}
	,set_imageClipRect: function(value) {
		this._imageClipRect = value;
		this.invalidate("display");
		return value;
	}
	,isInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var _this = this._invalidationFlags;
			var value = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(value.hasNext()) {
				var value1 = value.next();
				return true;
			}
			return false;
		}
		var _this1 = this._invalidationFlags;
		if(__map_reserved[flag] != null) {
			return _this1.existsReserved(flag);
		} else {
			return _this1.h.hasOwnProperty(flag);
		}
	}
	,invalidate: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
		} else {
			var tmp;
			if(flag != "all") {
				var _this = this._invalidationFlags;
				tmp = !(__map_reserved[flag] != null ? _this.existsReserved(flag) : _this.h.hasOwnProperty(flag));
			} else {
				tmp = false;
			}
			if(tmp) {
				var _this1 = this._invalidationFlags;
				if(__map_reserved[flag] != null) {
					_this1.setReserved(flag,true);
				} else {
					_this1.h[flag] = true;
				}
			}
		}
	}
	,validate: function() {
		if(this._isValidating == true || this.isInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.handleValidate();
		var flag = this._invalidationFlags.keys();
		while(flag.hasNext()) {
			var flag1 = flag.next();
			this._invalidationFlags.remove(flag1);
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,handleValidate: function() {
		var dataInvalid = this.isInvalid("data");
		var positionInvalid = this.isInvalid("position");
		var displayInvalid = this.isInvalid("display");
		if(dataInvalid) {
			this.validateData();
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
	}
	,__class__: haxe_ui_core_ImageDisplay
	,__properties__: {set_imageClipRect:"set_imageClipRect",get_imageClipRect:"get_imageClipRect",set_imageInfo:"set_imageInfo",get_imageInfo:"get_imageInfo",set_imageHeight:"set_imageHeight",get_imageHeight:"get_imageHeight",set_imageWidth:"set_imageWidth",get_imageWidth:"get_imageWidth",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left"}
});
var haxe_ui_core_UIEvent = function(type) {
	haxe_ui_backend_EventBase.call(this);
	this.type = type;
};
$hxClasses["haxe.ui.core.UIEvent"] = haxe_ui_core_UIEvent;
haxe_ui_core_UIEvent.__name__ = ["haxe","ui","core","UIEvent"];
haxe_ui_core_UIEvent.__super__ = haxe_ui_backend_EventBase;
haxe_ui_core_UIEvent.prototype = $extend(haxe_ui_backend_EventBase.prototype,{
	clone: function() {
		var c = new haxe_ui_core_UIEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.data = this.data;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_core_UIEvent
});
var haxe_ui_core_KeyboardEvent = function(type) {
	haxe_ui_core_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.core.KeyboardEvent"] = haxe_ui_core_KeyboardEvent;
haxe_ui_core_KeyboardEvent.__name__ = ["haxe","ui","core","KeyboardEvent"];
haxe_ui_core_KeyboardEvent.__super__ = haxe_ui_core_UIEvent;
haxe_ui_core_KeyboardEvent.prototype = $extend(haxe_ui_core_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_core_KeyboardEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.keyCode = this.keyCode;
		c.shiftKey = this.shiftKey;
		return c;
	}
	,__class__: haxe_ui_core_KeyboardEvent
});
var haxe_ui_core_MouseEvent = function(type) {
	haxe_ui_core_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.core.MouseEvent"] = haxe_ui_core_MouseEvent;
haxe_ui_core_MouseEvent.__name__ = ["haxe","ui","core","MouseEvent"];
haxe_ui_core_MouseEvent.__super__ = haxe_ui_core_UIEvent;
haxe_ui_core_MouseEvent.prototype = $extend(haxe_ui_core_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_core_MouseEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.screenX = this.screenX;
		c.screenY = this.screenY;
		c.buttonDown = this.buttonDown;
		c.delta = this.delta;
		c.touchEvent = this.touchEvent;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_core_MouseEvent
});
var haxe_ui_core_Platform = function() {
};
$hxClasses["haxe.ui.core.Platform"] = haxe_ui_core_Platform;
haxe_ui_core_Platform.__name__ = ["haxe","ui","core","Platform"];
haxe_ui_core_Platform.__properties__ = {get_instance:"get_instance",get_hscrollHeight:"get_hscrollHeight",get_vscrollWidth:"get_vscrollWidth"};
haxe_ui_core_Platform.get_vscrollWidth = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.vscroll.width");
};
haxe_ui_core_Platform.get_hscrollHeight = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.hscroll.height");
};
haxe_ui_core_Platform.get_instance = function() {
	if(haxe_ui_core_Platform._instance == null) {
		haxe_ui_core_Platform._instance = new haxe_ui_core_Platform();
	}
	return haxe_ui_core_Platform._instance;
};
haxe_ui_core_Platform.__super__ = haxe_ui_backend_PlatformBase;
haxe_ui_core_Platform.prototype = $extend(haxe_ui_backend_PlatformBase.prototype,{
	getMetric: function(id) {
		return haxe_ui_backend_PlatformBase.prototype.getMetric.call(this,id);
	}
	,__class__: haxe_ui_core_Platform
});
var haxe_ui_core_DialogEntry = function() {
};
$hxClasses["haxe.ui.core.DialogEntry"] = haxe_ui_core_DialogEntry;
haxe_ui_core_DialogEntry.__name__ = ["haxe","ui","core","DialogEntry"];
haxe_ui_core_DialogEntry.prototype = {
	__class__: haxe_ui_core_DialogEntry
};
var haxe_ui_core_Screen = function() {
	haxe_ui_backend_ScreenBase.call(this);
	this.rootComponents = [];
	this._dialogs = new haxe_ds_ObjectMap();
	this._eventMap = new haxe_ui_util_EventMap();
};
$hxClasses["haxe.ui.core.Screen"] = haxe_ui_core_Screen;
haxe_ui_core_Screen.__name__ = ["haxe","ui","core","Screen"];
haxe_ui_core_Screen.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_Screen.get_instance = function() {
	if(haxe_ui_core_Screen._instance == null) {
		haxe_ui_core_Screen._instance = new haxe_ui_core_Screen();
	}
	return haxe_ui_core_Screen._instance;
};
haxe_ui_core_Screen.createDialogOptions = function(options) {
	if((options instanceof haxe_ui_containers_dialogs_DialogOptions)) {
		return js_Boot.__cast(options , haxe_ui_containers_dialogs_DialogOptions);
	}
	var dialogOptions = new haxe_ui_containers_dialogs_DialogOptions();
	var o = { };
	if(options == null) {
		o = { };
	} else if(typeof(options) == "number" && ((options | 0) === options)) {
		var n = js_Boot.__cast(options , Int);
		o.buttons = [n];
		o.icon = n;
	} else {
		o = options;
	}
	if(o.buttons == null) {
		o.buttons = [1];
	} else if(js_Boot.__instanceof(o.buttons,Int)) {
		o.buttons = [options.buttons];
	}
	if(o.title == null) {
		o.title = "HaxeUI";
	}
	var buttons = o.buttons;
	var _g = 0;
	while(_g < buttons.length) {
		var b = buttons[_g];
		++_g;
		if(typeof(b) == "number" && ((b | 0) === b)) {
			if((b & 1) == 1) {
				dialogOptions.addStandardButton(1);
			}
			if((b & 2) == 2) {
				dialogOptions.addStandardButton(2);
			}
			if((b & 4) == 4) {
				dialogOptions.addStandardButton(4);
			}
			if((b & 8) == 8) {
				dialogOptions.addStandardButton(8);
			}
			if((b & 16) == 16) {
				dialogOptions.addStandardButton(16);
			}
			if((b & 32) == 32) {
				dialogOptions.addStandardButton(32);
			}
		} else {
			var dialogButton = new haxe_ui_containers_dialogs_DialogButton();
			dialogButton.id = b.id;
			dialogButton.text = b.text;
			dialogButton.icon = b.icon;
			if(b.closesDialog != null) {
				dialogButton.closesDialog = b.closesDialog;
			}
			dialogOptions.addButton(dialogButton);
		}
	}
	if(o.icon != null) {
		if((o.icon & 256) == 256) {
			dialogOptions.icon = 256;
		} else if((o.icon & 512) == 512) {
			dialogOptions.icon = 512;
		} else if((o.icon & 1024) == 1024) {
			dialogOptions.icon = 1024;
		} else if((o.icon & 2048) == 2048) {
			dialogOptions.icon = 2048;
		}
	}
	dialogOptions.title = o.title;
	dialogOptions.styleNames = o.styleNames;
	return dialogOptions;
};
haxe_ui_core_Screen.__super__ = haxe_ui_backend_ScreenBase;
haxe_ui_core_Screen.prototype = $extend(haxe_ui_backend_ScreenBase.prototype,{
	addComponent: function(component) {
		haxe_ui_backend_ScreenBase.prototype.addComponent.call(this,component);
		component.ready();
		this.rootComponents.push(component);
		haxe_ui_focus_FocusManager.get_instance().pushView(component);
		component.registerEvent("resize",$bind(this,this._onRootComponentResize));
	}
	,removeComponent: function(component) {
		haxe_ui_backend_ScreenBase.prototype.removeComponent.call(this,component);
		component.set_depth(-1);
		HxOverrides.remove(this.rootComponents,component);
		component.unregisterEvent("resize",$bind(this,this._onRootComponentResize));
	}
	,setComponentIndex: function(child,index) {
		if(index >= 0 && index <= this.rootComponents.length) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this.rootComponents,child);
			this.rootComponents.splice(index,0,child);
		}
	}
	,refreshStyleRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this._refreshStyleComponent(component);
		}
	}
	,_refreshStyleComponent: function(component) {
		var _g = 0;
		var _g1 = component.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.invalidateComponent("style");
			child.invalidateComponent("display");
			this._refreshStyleComponent(child);
		}
	}
	,_onRootComponentResize: function(e) {
		this._refreshStyleComponent(e.target);
	}
	,messageDialog: function(message,title,options,callback) {
		var dialog = haxe_ui_backend_ScreenBase.prototype.messageDialog.call(this,message,title,options,callback);
		if(dialog != null) {
			return dialog;
		}
		var dialogOptions = new haxe_ui_containers_dialogs_DialogOptions();
		var dialogOptions1 = haxe_ui_core_Screen.createDialogOptions(options);
		if(dialogOptions1.buttons.length == 0) {
			dialogOptions1.addStandardButton(1);
		}
		if(title != null) {
			dialogOptions1.title = title;
		}
		var content = new haxe_ui_containers_HBox();
		content.set_percentWidth(100);
		if(dialogOptions1.icon > 0) {
			var image = new haxe_ui_components_Image();
			image.set_id("message-dialog-icon");
			image.set_styleNames("message-dialog-icon");
			var _g = dialogOptions1.icon;
			switch(_g) {
			case 256:
				image.set_resource("haxeui-core/styles/default/dialogs/cross-circle.png");
				break;
			case 512:
				image.set_resource("haxeui-core/styles/default/dialogs/information.png");
				break;
			case 1024:
				image.set_resource("haxeui-core/styles/default/dialogs/exclamation.png");
				break;
			case 2048:
				image.set_resource("haxeui-core/styles/default/dialogs/question.png");
				break;
			}
			content.addComponent(image);
		}
		var label = new haxe_ui_components_Label();
		label.set_percentWidth(100);
		label.set_text(message);
		label.set_id("message-dialog-message");
		label.addClass("message-dialog-message");
		content.addComponent(label);
		return this.showDialog(content,dialogOptions1,callback);
	}
	,showDialog: function(content,options,callback) {
		var dialog = haxe_ui_backend_ScreenBase.prototype.showDialog.call(this,content,options,callback);
		if(dialog != null) {
			return dialog;
		}
		var overlay = new haxe_ui_core_Component();
		overlay.set_id("modal-background");
		overlay.addClass("modal-background");
		overlay.set_percentWidth(overlay.set_percentHeight(100));
		this.addComponent(overlay);
		var dialog1 = new haxe_ui_containers_dialogs_Dialog();
		dialog1.callback = callback;
		dialog1.set_dialogOptions(haxe_ui_core_Screen.createDialogOptions(options));
		content.addClass("dialog-content");
		dialog1.addComponent(content);
		this.addComponent(dialog1);
		this.centerDialog(dialog1);
		var x = this.get_width() / 2 - dialog1.get_componentWidth() / 2;
		var y = this.get_height() / 2 - dialog1.get_componentHeight() / 2;
		var _g = new haxe_ds_StringMap();
		if(__map_reserved["startLeft"] != null) {
			_g.setReserved("startLeft",x);
		} else {
			_g.h["startLeft"] = x;
		}
		var value = y + 20;
		if(__map_reserved["startTop"] != null) {
			_g.setReserved("startTop",value);
		} else {
			_g.h["startTop"] = value;
		}
		if(__map_reserved["endLeft"] != null) {
			_g.setReserved("endLeft",x);
		} else {
			_g.h["endLeft"] = x;
		}
		if(__map_reserved["endTop"] != null) {
			_g.setReserved("endTop",y);
		} else {
			_g.h["endTop"] = y;
		}
		var vars = _g;
		var tmp = haxe_ui_animation_AnimationManager.get_instance();
		var _g1 = new haxe_ds_StringMap();
		if(__map_reserved["target"] != null) {
			_g1.setReserved("target",dialog1);
		} else {
			_g1.h["target"] = dialog1;
		}
		tmp.run("haxe.ui.components.animation.dialog.show",_g1,vars);
		var entry = new haxe_ui_core_DialogEntry();
		entry.overlay = overlay;
		entry.dialog = dialog1;
		this._dialogs.set(dialog1,entry);
		if(Lambda.count(this._dialogs) == 1) {
			var _g2 = 0;
			var _g3 = this.rootComponents;
			while(_g2 < _g3.length) {
				var r = _g3[_g2];
				++_g2;
				r.addClass("modal-component");
			}
		}
		return dialog1;
	}
	,hideDialog: function(dialog) {
		var _gthis = this;
		if(haxe_ui_backend_ScreenBase.prototype.hideDialog.call(this,dialog) == true) {
			return true;
		}
		var entry = this._dialogs.h[dialog.__id__];
		if(entry == null) {
			return false;
		}
		var x = dialog.get_left();
		var _g = new haxe_ds_StringMap();
		var value = dialog.get_left();
		if(__map_reserved["startLeft"] != null) {
			_g.setReserved("startLeft",value);
		} else {
			_g.h["startLeft"] = value;
		}
		var value1 = dialog.get_top();
		if(__map_reserved["startTop"] != null) {
			_g.setReserved("startTop",value1);
		} else {
			_g.h["startTop"] = value1;
		}
		if(__map_reserved["endLeft"] != null) {
			_g.setReserved("endLeft",x);
		} else {
			_g.h["endLeft"] = x;
		}
		var value2 = dialog.get_top() - 20;
		if(__map_reserved["endTop"] != null) {
			_g.setReserved("endTop",value2);
		} else {
			_g.h["endTop"] = value2;
		}
		var vars = _g;
		var tmp = haxe_ui_animation_AnimationManager.get_instance();
		var _g1 = new haxe_ds_StringMap();
		if(__map_reserved["target"] != null) {
			_g1.setReserved("target",dialog);
		} else {
			_g1.h["target"] = dialog;
		}
		tmp.run("haxe.ui.components.animation.dialog.hide",_g1,vars,function() {
			haxe_ui_core_Screen.get_instance().removeComponent(entry.dialog);
			haxe_ui_core_Screen.get_instance().removeComponent(entry.overlay);
			_gthis._dialogs.remove(dialog);
			if(Lambda.count(_gthis._dialogs) == 0) {
				var _g2 = 0;
				var _g3 = _gthis.rootComponents;
				while(_g2 < _g3.length) {
					var r = _g3[_g2];
					++_g2;
					r.removeClass("modal-component");
				}
			}
		});
		return true;
	}
	,centerDialog: function(dialog) {
		dialog.syncValidation();
		var x = this.get_width() / 2 - dialog.get_componentWidth() / 2;
		var y = this.get_height() / 2 - dialog.get_componentHeight() / 2;
		dialog.moveComponent(x,y);
	}
	,registerEvent: function(type,listener) {
		if(this.supportsEvent(type) == true) {
			if(this._eventMap.add(type,listener) == true) {
				this.mapEvent(type,$bind(this,this._onMappedEvent));
			}
		} else {
			haxe_Log.trace("WARNING: Screen event \"" + type + "\" not supported",{ fileName : "haxe/ui/core/Screen.hx", lineNumber : 318, className : "haxe.ui.core.Screen", methodName : "registerEvent"});
		}
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap.remove(type,listener) == true) {
			this.unmapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,_onMappedEvent: function(event) {
		this._eventMap.invoke(event.type,event);
	}
	,__class__: haxe_ui_core_Screen
});
var haxe_ui_core_ScrollEvent = function(type) {
	haxe_ui_core_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.core.ScrollEvent"] = haxe_ui_core_ScrollEvent;
haxe_ui_core_ScrollEvent.__name__ = ["haxe","ui","core","ScrollEvent"];
haxe_ui_core_ScrollEvent.__super__ = haxe_ui_core_UIEvent;
haxe_ui_core_ScrollEvent.prototype = $extend(haxe_ui_core_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_core_ScrollEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_core_ScrollEvent
});
var haxe_ui_core_TextDisplayData = function() {
	this.wordWrap = false;
	this.multiline = false;
};
$hxClasses["haxe.ui.core.TextDisplayData"] = haxe_ui_core_TextDisplayData;
haxe_ui_core_TextDisplayData.__name__ = ["haxe","ui","core","TextDisplayData"];
haxe_ui_core_TextDisplayData.prototype = {
	__class__: haxe_ui_core_TextDisplayData
};
var haxe_ui_core_TextDisplay = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextDisplayBase.call(this);
};
$hxClasses["haxe.ui.core.TextDisplay"] = haxe_ui_core_TextDisplay;
haxe_ui_core_TextDisplay.__name__ = ["haxe","ui","core","TextDisplay"];
haxe_ui_core_TextDisplay.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextDisplay.__super__ = haxe_ui_backend_TextDisplayBase;
haxe_ui_core_TextDisplay.prototype = $extend(haxe_ui_backend_TextDisplayBase.prototype,{
	get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidate("style");
				_gthis.parentComponent.invalidateComponent("style");
			});
		} else {
			this.invalidate("style");
		}
		this._textStyle = value;
		return value;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this.invalidate("data");
		this._text = value;
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this.invalidate("position");
		this._left = value;
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this.invalidate("position");
		this._top = value;
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this.invalidate("display");
		this._width = value;
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this.invalidate("display");
		this._height = value;
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,get_textWidth: function() {
		if(this._text == null || this._text.length == 0) {
			return 0;
		}
		if(this.isInvalid() == true) {
			this.validate();
		}
		return this._textWidth;
	}
	,get_textHeight: function() {
		if(this.isInvalid() == true) {
			this.validate();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this.invalidate("style");
		this._displayData.multiline = value;
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this.invalidate("style");
		this._displayData.wordWrap = value;
		return value;
	}
	,isInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var _this = this._invalidationFlags;
			var value = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(value.hasNext()) {
				var value1 = value.next();
				return true;
			}
			return false;
		}
		var _this1 = this._invalidationFlags;
		if(__map_reserved[flag] != null) {
			return _this1.existsReserved(flag);
		} else {
			return _this1.h.hasOwnProperty(flag);
		}
	}
	,invalidate: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textDisplay");
		} else {
			var _this = this._invalidationFlags;
			if(!(__map_reserved[flag] != null ? _this.existsReserved(flag) : _this.h.hasOwnProperty(flag))) {
				var _this1 = this._invalidationFlags;
				if(__map_reserved[flag] != null) {
					_this1.setReserved(flag,true);
				} else {
					_this1.h[flag] = true;
				}
				this.parentComponent.invalidateComponent("textDisplay");
			}
		}
	}
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateDisplay: function() {
	}
	,validate: function() {
		if(this._isValidating == true || this.isInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateInternal();
		var flag = this._invalidationFlags.keys();
		while(flag.hasNext()) {
			var flag1 = flag.next();
			this._invalidationFlags.remove(flag1);
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateInternal: function() {
		var dataInvalid = this.isInvalid("data");
		var styleInvalid = this.isInvalid("style");
		var positionInvalid = this.isInvalid("position");
		var displayInvalid = this.isInvalid("display");
		var measureInvalid = this.isInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			measureInvalid = this.validateStyle() || measureInvalid;
		}
		if(positionInvalid || styleInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			var oldTextWidth = this.get_textWidth();
			var oldTextHeight = this.get_textHeight();
			this.measureText();
			if(this.get_textWidth() != oldTextWidth || this.get_textHeight() != oldTextHeight) {
				this.parentComponent.invalidateComponent("layout");
			}
		}
	}
	,__class__: haxe_ui_core_TextDisplay
	,__properties__: {set_depth:"set_depth",get_depth:"get_depth",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_text:"set_text",get_text:"get_text",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle"}
});
var haxe_ui_core_TextInputData = function() {
	this.onChangedCallback = null;
	this.onScrollCallback = null;
	this.vscrollPageSize = 0;
	this.vscrollMax = 0;
	this.vscrollPos = 0;
	this.hscrollPageSize = 0;
	this.hscrollMax = 0;
	this.hscrollPos = 0;
	this.password = false;
};
$hxClasses["haxe.ui.core.TextInputData"] = haxe_ui_core_TextInputData;
haxe_ui_core_TextInputData.__name__ = ["haxe","ui","core","TextInputData"];
haxe_ui_core_TextInputData.prototype = {
	__class__: haxe_ui_core_TextInputData
};
var haxe_ui_core_TextInput = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextInputBase.call(this);
	this._isAllInvalid = true;
};
$hxClasses["haxe.ui.core.TextInput"] = haxe_ui_core_TextInput;
haxe_ui_core_TextInput.__name__ = ["haxe","ui","core","TextInput"];
haxe_ui_core_TextInput.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextInput.__super__ = haxe_ui_backend_TextInputBase;
haxe_ui_core_TextInput.prototype = $extend(haxe_ui_backend_TextInputBase.prototype,{
	get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidate("style");
			});
		} else {
			this.invalidate("style");
		}
		this._textStyle = value;
		return value;
	}
	,get_data: function() {
		return this._inputData;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this.invalidate("data");
		return value;
	}
	,get_password: function() {
		return this._inputData.password;
	}
	,set_password: function(value) {
		if(value == this._inputData.password) {
			return value;
		}
		this._inputData.password = value;
		this.invalidate("style");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidate("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidate("position");
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.invalidate("display");
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.invalidate("display");
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,get_textWidth: function() {
		if(this._text == null || this._text.length == 0) {
			return 0;
		}
		if(this.isInvalid() == true) {
			this.validate();
		}
		return this._textWidth;
	}
	,get_textHeight: function() {
		var tmp = this._text == null || this._text.length == 0;
		if(this.isInvalid() == true) {
			this.validate();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this._displayData.multiline = value;
		this.invalidate("style");
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this._displayData.wordWrap = value;
		this.invalidate("style");
		return value;
	}
	,get_hscrollPos: function() {
		return this._inputData.hscrollPos;
	}
	,set_hscrollPos: function(value) {
		if(value == this._inputData.hscrollPos) {
			return value;
		}
		this._inputData.hscrollPos = value;
		this.invalidate("data");
		this.validateData();
		return value;
	}
	,get_hscrollMax: function() {
		return this._inputData.hscrollMax;
	}
	,get_hscrollPageSize: function() {
		return this._inputData.hscrollPageSize;
	}
	,get_vscrollPos: function() {
		return this._inputData.vscrollPos;
	}
	,set_vscrollPos: function(value) {
		if(value == this._inputData.vscrollPos) {
			return value;
		}
		this._inputData.vscrollPos = value;
		this.invalidate("data");
		this.validateData();
		return value;
	}
	,get_vscrollMax: function() {
		return this._inputData.vscrollMax;
	}
	,get_vscrollPageSize: function() {
		return this._inputData.vscrollPageSize;
	}
	,isInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var _this = this._invalidationFlags;
			var value = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
			while(value.hasNext()) {
				var value1 = value.next();
				return true;
			}
			return false;
		}
		var _this1 = this._invalidationFlags;
		if(__map_reserved[flag] != null) {
			return _this1.existsReserved(flag);
		} else {
			return _this1.h.hasOwnProperty(flag);
		}
	}
	,invalidate: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
		} else {
			var tmp;
			if(flag != "all") {
				var _this = this._invalidationFlags;
				tmp = !(__map_reserved[flag] != null ? _this.existsReserved(flag) : _this.h.hasOwnProperty(flag));
			} else {
				tmp = false;
			}
			if(tmp) {
				var _this1 = this._invalidationFlags;
				if(__map_reserved[flag] != null) {
					_this1.setReserved(flag,true);
				} else {
					_this1.h[flag] = true;
				}
			}
		}
	}
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateDisplay: function() {
	}
	,validate: function() {
		if(this._isValidating == true || this.isInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateInternal();
		var flag = this._invalidationFlags.keys();
		while(flag.hasNext()) {
			var flag1 = flag.next();
			this._invalidationFlags.remove(flag1);
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateInternal: function() {
		var dataInvalid = this.isInvalid("data");
		var styleInvalid = this.isInvalid("style");
		var positionInvalid = this.isInvalid("position");
		var displayInvalid = this.isInvalid("display");
		var measureInvalid = this.isInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			measureInvalid = this.validateStyle() || measureInvalid;
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			this.measureText();
		}
	}
	,__class__: haxe_ui_core_TextInput
	,__properties__: {set_depth:"set_depth",get_depth:"get_depth",get_vscrollPageSize:"get_vscrollPageSize",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",get_hscrollPageSize:"get_hscrollPageSize",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_password:"set_password",get_password:"get_password",set_text:"set_text",get_text:"get_text",get_data:"get_data",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle"}
});
var haxe_ui_core_ValidationEvent = function(type) {
	haxe_ui_core_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.core.ValidationEvent"] = haxe_ui_core_ValidationEvent;
haxe_ui_core_ValidationEvent.__name__ = ["haxe","ui","core","ValidationEvent"];
haxe_ui_core_ValidationEvent.__super__ = haxe_ui_core_UIEvent;
haxe_ui_core_ValidationEvent.prototype = $extend(haxe_ui_core_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_core_ValidationEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_core_ValidationEvent
});
var haxe_ui_data_DataSource = function(transformer) {
	this.transformer = transformer;
	this._allowCallbacks = true;
	this._changed = false;
};
$hxClasses["haxe.ui.data.DataSource"] = haxe_ui_data_DataSource;
haxe_ui_data_DataSource.__name__ = ["haxe","ui","data","DataSource"];
haxe_ui_data_DataSource.fromString = function(data,type) {
	return null;
};
haxe_ui_data_DataSource.prototype = {
	get_allowCallbacks: function() {
		return this._allowCallbacks;
	}
	,set_allowCallbacks: function(value) {
		this._allowCallbacks = value;
		if(this._allowCallbacks == true && this._changed == true) {
			this._changed = false;
			if(this.onChange != null) {
				this.onChange();
			}
		}
		return value;
	}
	,get_size: function() {
		return this.handleGetSize();
	}
	,get: function(index) {
		var r = this.handleGetItem(index);
		if(this.transformer != null) {
			r = this.transformer.transformFrom(r);
		}
		return r;
	}
	,indexOf: function(item) {
		if(this.transformer != null) {
			item = this.transformer.transformFrom(item);
		}
		return this.handleIndexOf(item);
	}
	,add: function(item) {
		var r = this.handleAddItem(item);
		this.handleChanged();
		return r;
	}
	,insert: function(item,index) {
		var r = this.handleInsert(item,index);
		this.handleChanged();
		return r;
	}
	,remove: function(item) {
		var r = this.handleRemoveItem(item);
		this.handleChanged();
		return r;
	}
	,update: function(index,item) {
		var r = this.handleUpdateItem(index,item);
		this.handleChanged();
		return r;
	}
	,clear: function() {
		var o = this._allowCallbacks;
		this._allowCallbacks = false;
		while(this.get_size() > 0) this.remove(this.get(0));
		this._allowCallbacks = o;
		this.handleChanged();
	}
	,handleChanged: function() {
		this._changed = true;
		if(this._allowCallbacks == true && this.onChange != null) {
			this._changed = false;
			this.onChange();
		}
	}
	,handleGetSize: function() {
		return 0;
	}
	,handleGetItem: function(index) {
		return null;
	}
	,handleIndexOf: function(item) {
		return 0;
	}
	,handleAddItem: function(item) {
		return null;
	}
	,handleInsert: function(item,index) {
		return null;
	}
	,handleRemoveItem: function(item) {
		return null;
	}
	,handleUpdateItem: function(index,item) {
		return null;
	}
	,clone: function() {
		var c = new haxe_ui_data_DataSource();
		return c;
	}
	,__class__: haxe_ui_data_DataSource
	,__properties__: {get_size:"get_size",set_allowCallbacks:"set_allowCallbacks",get_allowCallbacks:"get_allowCallbacks"}
};
var haxe_ui_data_ArrayDataSource = function(transformer) {
	haxe_ui_data_DataSource.call(this,transformer);
	this._array = [];
};
$hxClasses["haxe.ui.data.ArrayDataSource"] = haxe_ui_data_ArrayDataSource;
haxe_ui_data_ArrayDataSource.__name__ = ["haxe","ui","data","ArrayDataSource"];
haxe_ui_data_ArrayDataSource.__super__ = haxe_ui_data_DataSource;
haxe_ui_data_ArrayDataSource.prototype = $extend(haxe_ui_data_DataSource.prototype,{
	handleGetSize: function() {
		return this._array.length;
	}
	,handleGetItem: function(index) {
		return this._array[index];
	}
	,handleIndexOf: function(item) {
		return this._array.indexOf(item);
	}
	,handleAddItem: function(item) {
		this._array.push(item);
		return item;
	}
	,handleInsert: function(item,index) {
		this._array.splice(index,0,item);
		return item;
	}
	,handleRemoveItem: function(item) {
		HxOverrides.remove(this._array,item);
		return item;
	}
	,handleUpdateItem: function(index,item) {
		return this._array[index] = item;
	}
	,clone: function() {
		var c = new haxe_ui_data_ArrayDataSource();
		c._array = this._array.slice();
		return c;
	}
	,__class__: haxe_ui_data_ArrayDataSource
});
var haxe_ui_data_DataSourceFactory = function() {
};
$hxClasses["haxe.ui.data.DataSourceFactory"] = haxe_ui_data_DataSourceFactory;
haxe_ui_data_DataSourceFactory.__name__ = ["haxe","ui","data","DataSourceFactory"];
haxe_ui_data_DataSourceFactory.prototype = {
	create: function(type) {
		var ds = Type.createInstance(type,[]);
		return ds;
	}
	,fromString: function(data,type) {
		var ds = this.create(type);
		if(StringTools.startsWith(data,"<")) {
			var xml = Xml.parse(data).firstElement();
			var el = xml.elements();
			while(el.hasNext()) {
				var el1 = el.next();
				var o = this.xml2Object(el1);
				ds.add(o);
			}
		} else if(StringTools.startsWith(data,"[")) {
			var json = JSON.parse(StringTools.replace(data,"'","\""));
			var _g = 0;
			while(_g < json.length) {
				var o1 = json[_g];
				++_g;
				ds.add(o1);
			}
		}
		return ds;
	}
	,xml2Object: function(el,addId) {
		if(addId == null) {
			addId = true;
		}
		var o = { };
		if(addId == true) {
			if(el.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + el.nodeType);
			}
			o["id"] = el.nodeName;
		}
		var attr = el.attributes();
		while(attr.hasNext()) {
			var attr1 = attr.next();
			o[attr1] = el.get(attr1);
		}
		var childEl = el.elements();
		while(childEl.hasNext()) {
			var childEl1 = childEl.next();
			var childObject = this.xml2Object(childEl1,false);
			if(childEl1.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + childEl1.nodeType);
			}
			o[childEl1.nodeName] = childObject;
		}
		return o;
	}
	,__class__: haxe_ui_data_DataSourceFactory
};
var haxe_ui_data_transformation_IItemTransformer = function() { };
$hxClasses["haxe.ui.data.transformation.IItemTransformer"] = haxe_ui_data_transformation_IItemTransformer;
haxe_ui_data_transformation_IItemTransformer.__name__ = ["haxe","ui","data","transformation","IItemTransformer"];
haxe_ui_data_transformation_IItemTransformer.prototype = {
	__class__: haxe_ui_data_transformation_IItemTransformer
};
var haxe_ui_data_transformation_NativeTypeTransformer = function() {
};
$hxClasses["haxe.ui.data.transformation.NativeTypeTransformer"] = haxe_ui_data_transformation_NativeTypeTransformer;
haxe_ui_data_transformation_NativeTypeTransformer.__name__ = ["haxe","ui","data","transformation","NativeTypeTransformer"];
haxe_ui_data_transformation_NativeTypeTransformer.__interfaces__ = [haxe_ui_data_transformation_IItemTransformer];
haxe_ui_data_transformation_NativeTypeTransformer.prototype = {
	transformFrom: function(i) {
		var o = null;
		if(typeof(i) == "string") {
			o = { text : i, value : i};
		} else if(typeof(i) == "number" && ((i | 0) === i) || typeof(i) == "number" || typeof(i) == "boolean") {
			o = { value : i};
		} else {
			o = i;
		}
		return o;
	}
	,__class__: haxe_ui_data_transformation_NativeTypeTransformer
};
var haxe_ui_focus_FocusInfo = function() {
};
$hxClasses["haxe.ui.focus.FocusInfo"] = haxe_ui_focus_FocusInfo;
haxe_ui_focus_FocusInfo.__name__ = ["haxe","ui","focus","FocusInfo"];
haxe_ui_focus_FocusInfo.prototype = {
	__class__: haxe_ui_focus_FocusInfo
};
var haxe_ui_focus_FocusManager = function() {
	this._views = [];
	this._focusInfo = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.focus.FocusManager"] = haxe_ui_focus_FocusManager;
haxe_ui_focus_FocusManager.__name__ = ["haxe","ui","focus","FocusManager"];
haxe_ui_focus_FocusManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_focus_FocusManager.get_instance = function() {
	if(haxe_ui_focus_FocusManager._instance == null) {
		haxe_ui_focus_FocusManager._instance = new haxe_ui_focus_FocusManager();
	}
	return haxe_ui_focus_FocusManager._instance;
};
haxe_ui_focus_FocusManager.prototype = {
	pushView: function(component) {
		this._views.push(component);
	}
	,popView: function() {
		var c = this._views.pop();
		this._focusInfo.remove(c);
	}
	,get_focusInfo: function() {
		if(this._views.length == 0) {
			return null;
		}
		var c = this._views[this._views.length - 1];
		var info = this._focusInfo.h[c.__id__];
		if(info == null) {
			info = new haxe_ui_focus_FocusInfo();
			info.view = c;
			this._focusInfo.set(c,info);
		}
		return info;
	}
	,get_focus: function() {
		return this.get_focusInfo().currentFocus;
	}
	,set_focus: function(value) {
		if(js_Boot.__instanceof(value,haxe_ui_focus_IFocusable) == false) {
			throw new js__$Boot_HaxeError("Component does not implement IFocusable");
		}
		if(this.get_focusInfo() == null) {
			return value;
		}
		if(this.get_focusInfo().currentFocus != null && this.get_focusInfo().currentFocus != value) {
			this.get_focusInfo().currentFocus.set_focus(false);
			this.get_focusInfo().currentFocus = null;
		}
		if(value != null) {
			this.get_focusInfo().currentFocus = value;
			this.get_focusInfo().currentFocus.set_focus(true);
		}
		haxe_ui_Toolkit.get_screen().focus = value;
		return this.get_focusInfo().currentFocus;
	}
	,focusNext: function() {
		if(this._views.length == 0) {
			return null;
		}
		var list = [];
		var info = this.get_focusInfo();
		var currentFocus = this.buildFocusableList(info.view,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var nextIndex = index + 1;
		if(nextIndex > list.length - 1) {
			nextIndex = 0;
		}
		var nextFocus = list[nextIndex];
		this.set_focus(nextFocus);
		return nextFocus;
	}
	,focusPrev: function() {
		if(this._views.length == 0) {
			return null;
		}
		var list = [];
		var info = this.get_focusInfo();
		var currentFocus = this.buildFocusableList(info.view,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var prevIndex = index - 1;
		if(prevIndex < 0) {
			prevIndex = list.length - 1;
		}
		var prevFocus = list[prevIndex];
		this.set_focus(prevFocus);
		return prevFocus;
	}
	,buildFocusableList: function(c,list) {
		var currentFocus = null;
		if(js_Boot.__instanceof(c,haxe_ui_focus_IFocusable)) {
			var f = c;
			if(f.get_allowFocus() == true) {
				if(f.get_focus() == true) {
					currentFocus = f;
				}
				list.push(f);
			}
		}
		var _g = 0;
		var _g1 = c.get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var f1 = this.buildFocusableList(child,list);
			if(f1 != null) {
				currentFocus = f1;
			}
		}
		return currentFocus;
	}
	,__class__: haxe_ui_focus_FocusManager
	,__properties__: {set_focus:"set_focus",get_focus:"get_focus",get_focusInfo:"get_focusInfo"}
};
var haxe_ui_layouts_AbsoluteLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.AbsoluteLayout"] = haxe_ui_layouts_AbsoluteLayout;
haxe_ui_layouts_AbsoluteLayout.__name__ = ["haxe","ui","layouts","AbsoluteLayout"];
haxe_ui_layouts_AbsoluteLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_AbsoluteLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
	}
	,__class__: haxe_ui_layouts_AbsoluteLayout
});
var haxe_ui_layouts_DelegateLayout = function(size) {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._size = size;
};
$hxClasses["haxe.ui.layouts.DelegateLayout"] = haxe_ui_layouts_DelegateLayout;
haxe_ui_layouts_DelegateLayout.__name__ = ["haxe","ui","layouts","DelegateLayout"];
haxe_ui_layouts_DelegateLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DelegateLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	calcAutoSize: function(exclusions) {
		this._size.component = this.get_component();
		var cx = this._size.get_width();
		var cy = this._size.get_height();
		if(this._size.getBool("includePadding",false) == true) {
			cx += this.get_paddingLeft() + this.get_paddingRight();
			cy += this.get_paddingTop() + this.get_paddingBottom();
		}
		var size = new haxe_ui_util_Size(cx,cy);
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		this._size.component = this.get_component();
		size.width -= this._size.get_usableWidthModifier();
		size.height -= this._size.get_usableHeightModifier();
		return size;
	}
	,__class__: haxe_ui_layouts_DelegateLayout
});
var haxe_ui_layouts_HorizontalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalLayout"] = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalLayout.__name__ = ["haxe","ui","layouts","HorizontalLayout"];
haxe_ui_layouts_HorizontalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_HorizontalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var xpos = this.get_paddingLeft();
		var usableSize = this.get_component().get_layout().get_usableSize();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var ypos = 0;
			var _g2 = this.verticalAlign(child);
			switch(_g2) {
			case "bottom":
				if(child.get_componentHeight() < this.get_component().get_componentHeight()) {
					ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginTop(child));
				}
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos + this.marginLeft(child),ypos);
			xpos += child.get_componentWidth() + this.get_horizontalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentWidth() > 0 && child.get_percentWidth() == null) {
				size.width -= child.get_componentWidth() + this.marginLeft(child) + this.marginRight(child);
			}
		}
		if(visibleChildren > 1) {
			size.width -= this.get_horizontalSpacing() * (visibleChildren - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_HorizontalLayout
});
var haxe_ui_layouts_HorizontalContinuousLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalContinuousLayout"] = haxe_ui_layouts_HorizontalContinuousLayout;
haxe_ui_layouts_HorizontalContinuousLayout.__name__ = ["haxe","ui","layouts","HorizontalContinuousLayout"];
haxe_ui_layouts_HorizontalContinuousLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalContinuousLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
	}
	,repositionChildren: function() {
		if(this.get_component().get_autoWidth() == true) {
			haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
			return;
		}
		var ucx = this.get_usableWidth();
		if(ucx <= 0) {
			return;
		}
		var ucx1 = this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
		var ucy = this.get_component().get_componentHeight() - (this.get_paddingTop() + this.get_paddingBottom());
		var dimensions = [];
		var heights = [];
		var row = 0;
		var usedCX = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var rowCY = 0;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var rc = new haxe_ui_layouts_ComponentRectangle(child.get_left(),child.get_top(),child.get_componentWidth(),child.get_componentHeight());
			if(child.get_percentWidth() != null) {
				rc.width = ucx1 * child.get_percentWidth() / 100;
			} else {
				usedCX += this.get_horizontalSpacing();
			}
			if(child.get_percentHeight() != null) {
				rc.height = ucy * child.get_percentHeight() / 100;
			}
			rc.component = child;
			usedCX += rc.width;
			if(usedCX > ucx1) {
				heights.push(rowCY);
				ypos += rowCY + this.get_verticalSpacing();
				xpos = this.get_paddingLeft();
				usedCX = rc.width;
				rowCY = 0;
				++row;
			}
			if(dimensions.length <= row) {
				dimensions.push([]);
			}
			rc.left = xpos;
			rc.top = ypos;
			dimensions[row].push(rc);
			xpos += rc.width;
			if(rc.height > rowCY) {
				rowCY = rc.height;
			}
		}
		if(rowCY > 0) {
			heights.push(rowCY);
		}
		var x = 0;
		var _g2 = 0;
		while(_g2 < dimensions.length) {
			var r = dimensions[_g2];
			++_g2;
			var height = heights[x];
			var spaceX = (r.length - 1) / r.length * this.get_horizontalSpacing();
			var n = 0;
			var _g11 = 0;
			while(_g11 < r.length) {
				var c = r[_g11];
				++_g11;
				var _g21 = this.verticalAlign(c.component);
				switch(_g21) {
				case "bottom":
					c.top += height - c.height;
					break;
				case "center":
					c.top += height / 2 - c.height / 2;
					break;
				default:
				}
				if(c.component.get_percentWidth() != null) {
					c.left += n * (this.get_horizontalSpacing() - spaceX);
					c.width -= spaceX;
				} else {
					c.left += n * this.get_horizontalSpacing();
				}
				c.apply();
				++n;
			}
			++x;
		}
	}
	,get_usableSize: function() {
		if(this.get_component().get_autoWidth() == true) {
			return haxe_ui_layouts_HorizontalLayout.prototype.get_usableSize.call(this);
		}
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_util_Size(ucx,ucy);
	}
	,__class__: haxe_ui_layouts_HorizontalContinuousLayout
});
var haxe_ui_util_Rectangle = function(left,top,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(top == null) {
		top = 0;
	}
	if(left == null) {
		left = 0;
	}
	this.left = left;
	this.top = top;
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.util.Rectangle"] = haxe_ui_util_Rectangle;
haxe_ui_util_Rectangle.__name__ = ["haxe","ui","util","Rectangle"];
haxe_ui_util_Rectangle.prototype = {
	get_right: function() {
		return this.left + this.width;
	}
	,set_right: function(value) {
		this.width = value - this.left;
		return value;
	}
	,get_bottom: function() {
		return this.top + this.height;
	}
	,set_bottom: function(value) {
		this.height = value - this.top;
		return value;
	}
	,inflate: function(dx,dy) {
		this.left -= dx;
		this.width += dx * 2;
		this.top -= dy;
		this.height += dy * 2;
	}
	,containsPoint: function(x,y) {
		if(x >= this.left && x < this.left + this.width && y >= this.top && y < this.top + this.height) {
			return true;
		}
		return false;
	}
	,toString: function() {
		return "{left: " + this.left + ", top: " + this.top + ", bottom: " + this.get_bottom() + ", right: " + this.get_right() + ", width: " + this.width + ", height: " + this.height + "}";
	}
	,__class__: haxe_ui_util_Rectangle
	,__properties__: {set_bottom:"set_bottom",get_bottom:"get_bottom",set_right:"set_right",get_right:"get_right"}
};
var haxe_ui_layouts_ComponentRectangle = function(left,top,width,height) {
	haxe_ui_util_Rectangle.call(this,left,top,width,height);
};
$hxClasses["haxe.ui.layouts.ComponentRectangle"] = haxe_ui_layouts_ComponentRectangle;
haxe_ui_layouts_ComponentRectangle.__name__ = ["haxe","ui","layouts","ComponentRectangle"];
haxe_ui_layouts_ComponentRectangle.__super__ = haxe_ui_util_Rectangle;
haxe_ui_layouts_ComponentRectangle.prototype = $extend(haxe_ui_util_Rectangle.prototype,{
	apply: function() {
		this.component.moveComponent(this.left,this.top);
		this.component.resizeComponent(this.width,this.height);
	}
	,__class__: haxe_ui_layouts_ComponentRectangle
});
var haxe_ui_layouts_HorizontalGridLayout = function() {
	this._rows = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalGridLayout"] = haxe_ui_layouts_HorizontalGridLayout;
haxe_ui_layouts_HorizontalGridLayout.__name__ = ["haxe","ui","layouts","HorizontalGridLayout"];
haxe_ui_layouts_HorizontalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_HorizontalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	get_rows: function() {
		return this._rows;
	}
	,set_rows: function(value) {
		if(this._rows == value) {
			return value;
		}
		this._rows = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g1 = 0;
		while(_g1 < rowHeights.length) {
			var rowHeight = rowHeights[_g1];
			++_g1;
			size.height -= rowHeight;
		}
		if(this.get_component().get_childComponents().length > 1) {
			var columns = Math.ceil(this.get_component().get_childComponents().length / this._rows);
			size.width -= this.get_horizontalSpacing() * (columns - 1);
			size.height -= this.get_verticalSpacing() * (this.get_rows() - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var totalWidth = 0;
		var totalHeight = 0;
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
			++rowIndex;
			if(rowIndex >= this._rows) {
				ypos = this.get_paddingTop();
				xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var columnWidths = [];
		var _g11 = 0;
		var _g2 = columnCount;
		while(_g11 < _g2) {
			var n = _g11++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g3 = 0;
		var _g12 = this.get_component().get_childComponents();
		while(_g3 < _g12.length) {
			var child1 = _g12[_g3];
			++_g3;
			if(child1.get_includeInLayout() == false) {
				continue;
			}
			if(child1.get_percentWidth() == null) {
				if(child1.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child1.get_componentWidth();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			var copy = columnWidths.slice();
			rowIndex = 0;
			columnIndex = 0;
			var _g4 = 0;
			var _g13 = this.get_component().get_childComponents();
			while(_g4 < _g13.length) {
				var child2 = _g13[_g4];
				++_g4;
				if(child2.get_includeInLayout() == false) {
					continue;
				}
				if(child2.get_percentWidth() != null) {
					var cx = usableSize.width * child2.get_percentWidth() / 100;
					if(cx > columnWidths[rowIndex] && this._rows == 1) {
						columnWidths[columnIndex] = cx;
					} else if(usableSize.width > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = usableSize.width;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var rowHeights = [];
		var _g1 = 0;
		var _g = this._rows;
		while(_g1 < _g) {
			var n = _g1++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g2 = 0;
		var _g11 = this.get_component().get_childComponents();
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_componentHeight() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_componentHeight();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			var copy = rowHeights.slice();
			rowIndex = 0;
			columnIndex = 0;
			var _g3 = 0;
			var _g12 = this.get_component().get_childComponents();
			while(_g3 < _g12.length) {
				var child1 = _g12[_g3];
				++_g3;
				if(child1.get_includeInLayout() == false) {
					continue;
				}
				if(child1.get_percentHeight() != null) {
					var cy = usableSize.height * child1.get_percentHeight() / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var explicitWidths = [];
		var _g11 = 0;
		var _g2 = columnCount;
		while(_g11 < _g2) {
			var n = _g11++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g3 = 0;
		var _g12 = this.get_component().get_childComponents();
		while(_g3 < _g12.length) {
			var child1 = _g12[_g3];
			++_g3;
			if(child1.get_includeInLayout() == false) {
				continue;
			}
			if(child1.get_percentWidth() == null && child1.get_componentWidth() > 0) {
				explicitWidths[rowIndex % this._rows] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var explicitHeights = [];
		var _g1 = 0;
		var _g = this._rows;
		while(_g1 < _g) {
			var n = _g1++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g2 = 0;
		var _g11 = this.get_component().get_childComponents();
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[rowIndex] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_HorizontalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_rows:"set_rows",get_rows:"get_rows"})
});
var haxe_ui_layouts_LayoutFactory = function() { };
$hxClasses["haxe.ui.layouts.LayoutFactory"] = haxe_ui_layouts_LayoutFactory;
haxe_ui_layouts_LayoutFactory.__name__ = ["haxe","ui","layouts","LayoutFactory"];
haxe_ui_layouts_LayoutFactory.createFromName = function(name) {
	switch(name) {
	case "absolute":
		return new haxe_ui_layouts_AbsoluteLayout();
	case "continuous horizontal":case "continuousHorizontal":
		return new haxe_ui_layouts_HorizontalContinuousLayout();
	case "horizontal":
		return new haxe_ui_layouts_HorizontalLayout();
	case "horizontal grid":case "horizontalgrid":
		return new haxe_ui_layouts_HorizontalGridLayout();
	case "vertical":
		return new haxe_ui_layouts_VerticalLayout();
	case "vertical grid":case "verticalgrid":
		return new haxe_ui_layouts_VerticalGridLayout();
	}
	return new haxe_ui_layouts_DefaultLayout();
};
var haxe_ui_layouts_VerticalGridLayout = function() {
	this._columns = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalGridLayout"] = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_layouts_VerticalGridLayout.__name__ = ["haxe","ui","layouts","VerticalGridLayout"];
haxe_ui_layouts_VerticalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_VerticalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	get_columns: function() {
		return this._columns;
	}
	,set_columns: function(value) {
		if(this._columns == value) {
			return value;
		}
		this._columns = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g1 = 0;
		while(_g1 < rowHeights.length) {
			var rowHeight = rowHeights[_g1];
			++_g1;
			size.height -= rowHeight;
		}
		if(this.get_component().get_childComponents().length > 1) {
			var rows = Math.ceil(this.get_component().get_childComponents().length / this.get_columns());
			size.width -= this.get_horizontalSpacing() * (this.get_columns() - 1);
			size.height -= this.get_verticalSpacing() * (rows - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var totalWidth = 0;
		var totalHeight = 0;
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
			++columnIndex;
			if(columnIndex >= this.get_columns()) {
				xpos = this.get_paddingLeft();
				ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var columnWidths = [];
		var _g1 = 0;
		var _g = this._columns;
		while(_g1 < _g) {
			var n = _g1++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g2 = 0;
		var _g11 = this.get_component().get_childComponents();
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			var copy = columnWidths.slice();
			rowIndex = 0;
			columnIndex = 0;
			var _g3 = 0;
			var _g12 = this.get_component().get_childComponents();
			while(_g3 < _g12.length) {
				var child1 = _g12[_g3];
				++_g3;
				if(child1.get_includeInLayout() == false) {
					continue;
				}
				if(child1.get_percentWidth() != null) {
					var cx = usableSize.width * child1.get_percentWidth() / 100;
					if(cx > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = cx;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this._columns | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var rowHeights = [];
		var _g11 = 0;
		var _g2 = rowCount;
		while(_g11 < _g2) {
			var n = _g11++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g3 = 0;
		var _g12 = this.get_component().get_childComponents();
		while(_g3 < _g12.length) {
			var child1 = _g12[_g3];
			++_g3;
			if(child1.get_includeInLayout() == false) {
				continue;
			}
			if(child1.get_percentHeight() == null) {
				if(child1.get_componentHeight() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child1.get_componentHeight();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			var copy = rowHeights.slice();
			rowIndex = 0;
			columnIndex = 0;
			var _g4 = 0;
			var _g13 = this.get_component().get_childComponents();
			while(_g4 < _g13.length) {
				var child2 = _g13[_g4];
				++_g4;
				if(child2.get_includeInLayout() == false) {
					continue;
				}
				if(child2.get_percentHeight() != null) {
					var cy = usableSize.height * child2.get_percentHeight() / 100;
					if(cy > rowHeights[rowIndex] && this._columns == 1) {
						rowHeights[rowIndex] = cy;
					} else if(usableSize.height > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = usableSize.height;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var explicitWidths = [];
		var _g1 = 0;
		var _g = this._columns;
		while(_g1 < _g) {
			var n = _g1++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g2 = 0;
		var _g11 = this.get_component().get_childComponents();
		while(_g2 < _g11.length) {
			var child = _g11[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[columnIndex] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this.get_columns() | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var explicitHeights = [];
		var _g11 = 0;
		var _g2 = rowCount;
		while(_g11 < _g2) {
			var n = _g11++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g3 = 0;
		var _g12 = this.get_component().get_childComponents();
		while(_g3 < _g12.length) {
			var child1 = _g12[_g3];
			++_g3;
			if(child1.get_includeInLayout() == false) {
				continue;
			}
			if(child1.get_percentHeight() == null && child1.get_componentHeight() > 0) {
				explicitHeights[columnIndex % this._columns] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_VerticalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_layouts_VerticalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalLayout"] = haxe_ui_layouts_VerticalLayout;
haxe_ui_layouts_VerticalLayout.__name__ = ["haxe","ui","layouts","VerticalLayout"];
haxe_ui_layouts_VerticalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_VerticalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var ypos = this.get_paddingTop();
		var usableSize = this.get_component().get_layout().get_usableSize();
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			var _g2 = this.horizontalAlign(child);
			switch(_g2) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				if(child.get_componentWidth() < this.get_component().get_componentWidth()) {
					xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginLeft(child));
				}
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			child.moveComponent(xpos,ypos + this.marginTop(child));
			ypos += child.get_componentHeight() + this.get_verticalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var visibleChildren = this.get_component().get_childComponents().length;
		var _g = 0;
		var _g1 = this.get_component().get_childComponents();
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentHeight() > 0 && child.get_percentHeight() == null) {
				size.height -= child.get_componentHeight() + this.marginTop(child) + this.marginBottom(child);
			}
		}
		if(visibleChildren > 1) {
			size.height -= this.get_verticalSpacing() * (visibleChildren - 1);
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_VerticalLayout
});
var haxe_ui_macros_BackendMacros = function() { };
$hxClasses["haxe.ui.macros.BackendMacros"] = haxe_ui_macros_BackendMacros;
haxe_ui_macros_BackendMacros.__name__ = ["haxe","ui","macros","BackendMacros"];
var haxe_ui_macros_ModuleMacros = function() { };
$hxClasses["haxe.ui.macros.ModuleMacros"] = haxe_ui_macros_ModuleMacros;
haxe_ui_macros_ModuleMacros.__name__ = ["haxe","ui","macros","ModuleMacros"];
var haxe_ui_macros_NativeMacros = function() { };
$hxClasses["haxe.ui.macros.NativeMacros"] = haxe_ui_macros_NativeMacros;
haxe_ui_macros_NativeMacros.__name__ = ["haxe","ui","macros","NativeMacros"];
var haxe_ui_parsers_config_ConfigParser = function() {
};
$hxClasses["haxe.ui.parsers.config.ConfigParser"] = haxe_ui_parsers_config_ConfigParser;
haxe_ui_parsers_config_ConfigParser.__name__ = ["haxe","ui","parsers","config","ConfigParser"];
haxe_ui_parsers_config_ConfigParser.get = function(extension) {
	haxe_ui_parsers_config_ConfigParser.defaultParsers();
	var _this = haxe_ui_parsers_config_ConfigParser._parsers;
	var cls = __map_reserved[extension] != null ? _this.getReserved(extension) : _this.h[extension];
	if(cls == null) {
		return null;
	}
	var instance = Type.createInstance(cls,[]);
	if(instance == null) {
		throw new js__$Boot_HaxeError("Could not create config parser instance \"" + Std.string(cls) + "\"");
	}
	return instance;
};
haxe_ui_parsers_config_ConfigParser.defaultParsers = function() {
	if(haxe_ui_parsers_config_ConfigParser._parsers == null) {
		haxe_ui_parsers_config_ConfigParser.register("xml",haxe_ui_parsers_config_XMLParser);
	}
};
haxe_ui_parsers_config_ConfigParser.register = function(extension,cls) {
	if(haxe_ui_parsers_config_ConfigParser._parsers == null) {
		haxe_ui_parsers_config_ConfigParser._parsers = new haxe_ds_StringMap();
	}
	var _this = haxe_ui_parsers_config_ConfigParser._parsers;
	if(__map_reserved[extension] != null) {
		_this.setReserved(extension,cls);
	} else {
		_this.h[extension] = cls;
	}
};
haxe_ui_parsers_config_ConfigParser.prototype = {
	parse: function(data,defines) {
		throw new js__$Boot_HaxeError("Config parser not implemented!");
	}
	,__class__: haxe_ui_parsers_config_ConfigParser
};
var haxe_ui_parsers_config_XMLParser = function() {
	haxe_ui_parsers_config_ConfigParser.call(this);
};
$hxClasses["haxe.ui.parsers.config.XMLParser"] = haxe_ui_parsers_config_XMLParser;
haxe_ui_parsers_config_XMLParser.__name__ = ["haxe","ui","parsers","config","XMLParser"];
haxe_ui_parsers_config_XMLParser.__super__ = haxe_ui_parsers_config_ConfigParser;
haxe_ui_parsers_config_XMLParser.prototype = $extend(haxe_ui_parsers_config_ConfigParser.prototype,{
	parse: function(data,defines) {
		var config = new haxe_ui_util_GenericConfig();
		var xml = Xml.parse(data).firstElement();
		var el = xml.elements();
		while(el.hasNext()) {
			var el1 = el.next();
			this.parseAddionalConfig(el1,config,defines);
		}
		return config;
	}
	,parseAddionalConfig: function(node,parent,defines) {
		if(node.get("if") != null) {
			var condition = "haxeui_" + node.get("if");
			if((__map_reserved[condition] != null ? defines.existsReserved(condition) : defines.h.hasOwnProperty(condition)) == false) {
				return;
			}
		}
		if(node.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + node.nodeType);
		}
		var group = parent.addSection(node.nodeName);
		var attr = node.attributes();
		while(attr.hasNext()) {
			var attr1 = attr.next();
			var this1 = group.values;
			var value = node.get(attr1);
			var _this = this1;
			if(__map_reserved[attr1] != null) {
				_this.setReserved(attr1,value);
			} else {
				_this.h[attr1] = value;
			}
		}
		var el = node.elements();
		while(el.hasNext()) {
			var el1 = el.next();
			this.parseAddionalConfig(el1,group,defines);
		}
	}
	,__class__: haxe_ui_parsers_config_XMLParser
});
var haxe_ui_parsers_modules_Module = function() {
	this.resourceEntries = [];
	this.componentEntries = [];
	this.scriptletEntries = [];
	this.themeEntries = new haxe_ds_StringMap();
	this.plugins = [];
	this.properties = [];
	this.animations = [];
	this.preload = [];
};
$hxClasses["haxe.ui.parsers.modules.Module"] = haxe_ui_parsers_modules_Module;
haxe_ui_parsers_modules_Module.__name__ = ["haxe","ui","parsers","modules","Module"];
haxe_ui_parsers_modules_Module.prototype = {
	validate: function() {
	}
	,__class__: haxe_ui_parsers_modules_Module
};
var haxe_ui_parsers_modules_ModuleResourceEntry = function() {
};
$hxClasses["haxe.ui.parsers.modules.ModuleResourceEntry"] = haxe_ui_parsers_modules_ModuleResourceEntry;
haxe_ui_parsers_modules_ModuleResourceEntry.__name__ = ["haxe","ui","parsers","modules","ModuleResourceEntry"];
haxe_ui_parsers_modules_ModuleResourceEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModuleResourceEntry
};
var haxe_ui_parsers_modules_ModuleComponentEntry = function() {
};
$hxClasses["haxe.ui.parsers.modules.ModuleComponentEntry"] = haxe_ui_parsers_modules_ModuleComponentEntry;
haxe_ui_parsers_modules_ModuleComponentEntry.__name__ = ["haxe","ui","parsers","modules","ModuleComponentEntry"];
haxe_ui_parsers_modules_ModuleComponentEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModuleComponentEntry
};
var haxe_ui_parsers_modules_ModuleScriptletEntry = function() {
};
$hxClasses["haxe.ui.parsers.modules.ModuleScriptletEntry"] = haxe_ui_parsers_modules_ModuleScriptletEntry;
haxe_ui_parsers_modules_ModuleScriptletEntry.__name__ = ["haxe","ui","parsers","modules","ModuleScriptletEntry"];
haxe_ui_parsers_modules_ModuleScriptletEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModuleScriptletEntry
};
var haxe_ui_parsers_modules_ModuleThemeEntry = function() {
	this.styles = [];
};
$hxClasses["haxe.ui.parsers.modules.ModuleThemeEntry"] = haxe_ui_parsers_modules_ModuleThemeEntry;
haxe_ui_parsers_modules_ModuleThemeEntry.__name__ = ["haxe","ui","parsers","modules","ModuleThemeEntry"];
haxe_ui_parsers_modules_ModuleThemeEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModuleThemeEntry
};
var haxe_ui_parsers_modules_ModuleThemeStyleEntry = function() {
};
$hxClasses["haxe.ui.parsers.modules.ModuleThemeStyleEntry"] = haxe_ui_parsers_modules_ModuleThemeStyleEntry;
haxe_ui_parsers_modules_ModuleThemeStyleEntry.__name__ = ["haxe","ui","parsers","modules","ModuleThemeStyleEntry"];
haxe_ui_parsers_modules_ModuleThemeStyleEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModuleThemeStyleEntry
};
var haxe_ui_parsers_modules_ModulePluginEntry = function() {
	this.config = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.parsers.modules.ModulePluginEntry"] = haxe_ui_parsers_modules_ModulePluginEntry;
haxe_ui_parsers_modules_ModulePluginEntry.__name__ = ["haxe","ui","parsers","modules","ModulePluginEntry"];
haxe_ui_parsers_modules_ModulePluginEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModulePluginEntry
};
var haxe_ui_parsers_modules_ModulePropertyEntry = function() {
};
$hxClasses["haxe.ui.parsers.modules.ModulePropertyEntry"] = haxe_ui_parsers_modules_ModulePropertyEntry;
haxe_ui_parsers_modules_ModulePropertyEntry.__name__ = ["haxe","ui","parsers","modules","ModulePropertyEntry"];
haxe_ui_parsers_modules_ModulePropertyEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModulePropertyEntry
};
var haxe_ui_parsers_modules_ModuleAnimationEntry = function() {
	this.keyFrames = [];
};
$hxClasses["haxe.ui.parsers.modules.ModuleAnimationEntry"] = haxe_ui_parsers_modules_ModuleAnimationEntry;
haxe_ui_parsers_modules_ModuleAnimationEntry.__name__ = ["haxe","ui","parsers","modules","ModuleAnimationEntry"];
haxe_ui_parsers_modules_ModuleAnimationEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModuleAnimationEntry
};
var haxe_ui_parsers_modules_ModuleAnimationKeyFrameEntry = function() {
	this.time = 0;
	this.componentRefs = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.parsers.modules.ModuleAnimationKeyFrameEntry"] = haxe_ui_parsers_modules_ModuleAnimationKeyFrameEntry;
haxe_ui_parsers_modules_ModuleAnimationKeyFrameEntry.__name__ = ["haxe","ui","parsers","modules","ModuleAnimationKeyFrameEntry"];
haxe_ui_parsers_modules_ModuleAnimationKeyFrameEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModuleAnimationKeyFrameEntry
};
var haxe_ui_parsers_modules_ModuleAnimationComponentRefEntry = function() {
	this.properties = new haxe_ds_StringMap();
	this.vars = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.parsers.modules.ModuleAnimationComponentRefEntry"] = haxe_ui_parsers_modules_ModuleAnimationComponentRefEntry;
haxe_ui_parsers_modules_ModuleAnimationComponentRefEntry.__name__ = ["haxe","ui","parsers","modules","ModuleAnimationComponentRefEntry"];
haxe_ui_parsers_modules_ModuleAnimationComponentRefEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModuleAnimationComponentRefEntry
};
var haxe_ui_parsers_modules_ModulePreloadEntry = function() {
};
$hxClasses["haxe.ui.parsers.modules.ModulePreloadEntry"] = haxe_ui_parsers_modules_ModulePreloadEntry;
haxe_ui_parsers_modules_ModulePreloadEntry.__name__ = ["haxe","ui","parsers","modules","ModulePreloadEntry"];
haxe_ui_parsers_modules_ModulePreloadEntry.prototype = {
	__class__: haxe_ui_parsers_modules_ModulePreloadEntry
};
var haxe_ui_parsers_modules_ModuleParser = function() {
};
$hxClasses["haxe.ui.parsers.modules.ModuleParser"] = haxe_ui_parsers_modules_ModuleParser;
haxe_ui_parsers_modules_ModuleParser.__name__ = ["haxe","ui","parsers","modules","ModuleParser"];
haxe_ui_parsers_modules_ModuleParser.get = function(extension) {
	haxe_ui_parsers_modules_ModuleParser.defaultParsers();
	var _this = haxe_ui_parsers_modules_ModuleParser._parsers;
	var cls = __map_reserved[extension] != null ? _this.getReserved(extension) : _this.h[extension];
	if(cls == null) {
		return null;
	}
	var instance = Type.createInstance(cls,[]);
	if(instance == null) {
		throw new js__$Boot_HaxeError("Could not create module parser instance \"" + Std.string(cls) + "\"");
	}
	return instance;
};
haxe_ui_parsers_modules_ModuleParser.defaultParsers = function() {
	if(haxe_ui_parsers_modules_ModuleParser._parsers == null) {
		haxe_ui_parsers_modules_ModuleParser.register("xml",haxe_ui_parsers_modules_XMLParser);
	}
};
haxe_ui_parsers_modules_ModuleParser.register = function(extension,cls) {
	if(haxe_ui_parsers_modules_ModuleParser._parsers == null) {
		haxe_ui_parsers_modules_ModuleParser._parsers = new haxe_ds_StringMap();
	}
	var _this = haxe_ui_parsers_modules_ModuleParser._parsers;
	if(__map_reserved[extension] != null) {
		_this.setReserved(extension,cls);
	} else {
		_this.h[extension] = cls;
	}
};
haxe_ui_parsers_modules_ModuleParser.prototype = {
	parse: function(data,defines) {
		throw new js__$Boot_HaxeError("Module parser not implemented!");
	}
	,__class__: haxe_ui_parsers_modules_ModuleParser
};
var haxe_ui_parsers_modules_XMLParser = function() {
	haxe_ui_parsers_modules_ModuleParser.call(this);
};
$hxClasses["haxe.ui.parsers.modules.XMLParser"] = haxe_ui_parsers_modules_XMLParser;
haxe_ui_parsers_modules_XMLParser.__name__ = ["haxe","ui","parsers","modules","XMLParser"];
haxe_ui_parsers_modules_XMLParser.__super__ = haxe_ui_parsers_modules_ModuleParser;
haxe_ui_parsers_modules_XMLParser.prototype = $extend(haxe_ui_parsers_modules_ModuleParser.prototype,{
	parse: function(data,defines) {
		var module = new haxe_ui_parsers_modules_Module();
		var xml = Xml.parse(data).firstElement();
		module.id = xml.get("id");
		var el = xml.elements();
		while(el.hasNext()) {
			var el1 = el.next();
			if(el1.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + el1.nodeType);
			}
			var nodeName = el1.nodeName;
			if(nodeName == "resources" && this.checkCondition(el1,defines) == true) {
				var resourceNode = el1.elementsNamed("resource");
				while(resourceNode.hasNext()) {
					var resourceNode1 = resourceNode.next();
					if(this.checkCondition(resourceNode1,defines) == false) {
						continue;
					}
					var resourceEntry = new haxe_ui_parsers_modules_ModuleResourceEntry();
					resourceEntry.path = resourceNode1.get("path");
					resourceEntry.prefix = resourceNode1.get("prefix");
					module.resourceEntries.push(resourceEntry);
				}
			} else if(nodeName == "components" && this.checkCondition(el1,defines) == true) {
				var classNode = el1.elementsNamed("class");
				while(classNode.hasNext()) {
					var classNode1 = classNode.next();
					if(this.checkCondition(classNode1,defines) == false) {
						continue;
					}
					var classEntry = new haxe_ui_parsers_modules_ModuleComponentEntry();
					classEntry.classPackage = classNode1.get("package");
					classEntry.className = classNode1.get("name");
					classEntry.classAlias = classNode1.get("alias");
					module.componentEntries.push(classEntry);
				}
			} else if(nodeName == "scriptlets" && this.checkCondition(el1,defines) == true) {
				var classNode2 = el1.elementsNamed("import");
				while(classNode2.hasNext()) {
					var classNode3 = classNode2.next();
					if(this.checkCondition(classNode3,defines) == false) {
						continue;
					}
					var scriptletEntry = new haxe_ui_parsers_modules_ModuleScriptletEntry();
					scriptletEntry.classPackage = classNode3.get("package");
					scriptletEntry.className = classNode3.get("class");
					scriptletEntry.classAlias = classNode3.get("alias");
					scriptletEntry.keep = classNode3.get("keep") == "true";
					scriptletEntry.staticClass = classNode3.get("static") == "true";
					module.scriptletEntries.push(scriptletEntry);
				}
			} else if(nodeName == "themes" && this.checkCondition(el1,defines) == true) {
				var themeNode = el1.elements();
				while(themeNode.hasNext()) {
					var themeNode1 = themeNode.next();
					if(this.checkCondition(themeNode1,defines) == false) {
						continue;
					}
					var theme = new haxe_ui_parsers_modules_ModuleThemeEntry();
					if(themeNode1.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + themeNode1.nodeType);
					}
					theme.name = themeNode1.nodeName;
					theme.parent = themeNode1.get("parent");
					var styleNodes = themeNode1.elementsNamed("style");
					while(styleNodes.hasNext()) {
						var styleNodes1 = styleNodes.next();
						if(this.checkCondition(styleNodes1,defines) == false) {
							continue;
						}
						var styleEntry = new haxe_ui_parsers_modules_ModuleThemeStyleEntry();
						styleEntry.resource = styleNodes1.get("resource");
						theme.styles.push(styleEntry);
					}
					var key = theme.name;
					var _this = module.themeEntries;
					if(__map_reserved[key] != null) {
						_this.setReserved(key,theme);
					} else {
						_this.h[key] = theme;
					}
				}
			} else if(nodeName == "plugins" && this.checkCondition(el1,defines) == true) {
				var pluginNode = el1.elementsNamed("plugin");
				while(pluginNode.hasNext()) {
					var pluginNode1 = pluginNode.next();
					if(this.checkCondition(pluginNode1,defines) == false) {
						continue;
					}
					var plugin = new haxe_ui_parsers_modules_ModulePluginEntry();
					var attr = pluginNode1.attributes();
					while(attr.hasNext()) {
						var attr1 = attr.next();
						var value = pluginNode1.get(attr1);
						switch(attr1) {
						case "class":
							plugin.className = value;
							break;
						case "type":
							plugin.type = value;
							break;
						default:
							var _this1 = plugin.config;
							if(__map_reserved[attr1] != null) {
								_this1.setReserved(attr1,value);
							} else {
								_this1.h[attr1] = value;
							}
						}
					}
					module.plugins.push(plugin);
				}
			} else if(nodeName == "properties" && this.checkCondition(el1,defines) == true) {
				var propertyNode = el1.elementsNamed("property");
				while(propertyNode.hasNext()) {
					var propertyNode1 = propertyNode.next();
					if(this.checkCondition(propertyNode1,defines) == false) {
						continue;
					}
					var property = new haxe_ui_parsers_modules_ModulePropertyEntry();
					property.name = propertyNode1.get("name");
					property.value = propertyNode1.get("value");
					module.properties.push(property);
				}
			} else if(nodeName == "animations" && this.checkCondition(el1,defines) == true) {
				var animationNode = el1.elementsNamed("animation");
				while(animationNode.hasNext()) {
					var animationNode1 = animationNode.next();
					if(this.checkCondition(animationNode1,defines) == false) {
						continue;
					}
					var animation = new haxe_ui_parsers_modules_ModuleAnimationEntry();
					animation.id = animationNode1.get("id");
					animation.ease = animationNode1.get("ease");
					var keyFrameNode = animationNode1.elementsNamed("keyframe");
					while(keyFrameNode.hasNext()) {
						var keyFrameNode1 = keyFrameNode.next();
						var keyFrame = new haxe_ui_parsers_modules_ModuleAnimationKeyFrameEntry();
						if(keyFrameNode1.get("time") != null) {
							keyFrame.time = Std.parseInt(keyFrameNode1.get("time"));
						}
						var componentRefNode = keyFrameNode1.elements();
						while(componentRefNode.hasNext()) {
							var componentRefNode1 = componentRefNode.next();
							var componentRef = new haxe_ui_parsers_modules_ModuleAnimationComponentRefEntry();
							if(componentRefNode1.nodeType != Xml.Element) {
								throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + componentRefNode1.nodeType);
							}
							componentRef.id = componentRefNode1.nodeName;
							var attrName = componentRefNode1.attributes();
							while(attrName.hasNext()) {
								var attrName1 = attrName.next();
								var attrValue = componentRefNode1.get(attrName1);
								if(StringTools.startsWith(attrValue,"{") && StringTools.endsWith(attrValue,"}")) {
									attrValue = attrValue.substring(1,attrValue.length - 1);
									var _this2 = componentRef.vars;
									if(__map_reserved[attrName1] != null) {
										_this2.setReserved(attrName1,attrValue);
									} else {
										_this2.h[attrName1] = attrValue;
									}
								} else {
									var this1 = componentRef.properties;
									var value1 = parseFloat(attrValue);
									var _this3 = this1;
									if(__map_reserved[attrName1] != null) {
										_this3.setReserved(attrName1,value1);
									} else {
										_this3.h[attrName1] = value1;
									}
								}
							}
							var key1 = componentRef.id;
							var _this4 = keyFrame.componentRefs;
							if(__map_reserved[key1] != null) {
								_this4.setReserved(key1,componentRef);
							} else {
								_this4.h[key1] = componentRef;
							}
						}
						animation.keyFrames.push(keyFrame);
					}
					module.animations.push(animation);
				}
			} else if(nodeName == "preload" && this.checkCondition(el1,defines) == true) {
				var propertyNode2 = el1.elements();
				while(propertyNode2.hasNext()) {
					var propertyNode3 = propertyNode2.next();
					if(this.checkCondition(propertyNode3,defines) == false) {
						continue;
					}
					var entry = new haxe_ui_parsers_modules_ModulePreloadEntry();
					if(propertyNode3.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + propertyNode3.nodeType);
					}
					entry.type = propertyNode3.nodeName;
					entry.id = propertyNode3.get("id");
					module.preload.push(entry);
				}
			}
		}
		return module;
	}
	,checkCondition: function(node,defines) {
		if(node.get("if") != null) {
			var condition = "haxeui_" + node.get("if");
			if(__map_reserved[condition] != null) {
				return defines.existsReserved(condition);
			} else {
				return defines.h.hasOwnProperty(condition);
			}
		}
		return true;
	}
	,__class__: haxe_ui_parsers_modules_XMLParser
});
var haxe_ui_parsers_ui_ComponentInfo = function() {
	this.properties = new haxe_ds_StringMap();
	this.children = [];
	this.bindings = [];
	this.scriptlets = [];
	this.styles = [];
};
$hxClasses["haxe.ui.parsers.ui.ComponentInfo"] = haxe_ui_parsers_ui_ComponentInfo;
haxe_ui_parsers_ui_ComponentInfo.__name__ = ["haxe","ui","parsers","ui","ComponentInfo"];
haxe_ui_parsers_ui_ComponentInfo.prototype = {
	get_styleString: function() {
		if(this.style == null) {
			return null;
		}
		return StringTools.replace(this.style,"\"","'");
	}
	,get_dataString: function() {
		if(this.data == null) {
			return null;
		}
		return StringTools.replace(this.data,"\"","'");
	}
	,findRootComponent: function() {
		var r = this;
		while(r.parent != null) r = r.parent;
		return r;
	}
	,validate: function() {
	}
	,__class__: haxe_ui_parsers_ui_ComponentInfo
	,__properties__: {get_dataString:"get_dataString",get_styleString:"get_styleString"}
};
var haxe_ui_parsers_ui_ComponentBindingInfo = function() {
};
$hxClasses["haxe.ui.parsers.ui.ComponentBindingInfo"] = haxe_ui_parsers_ui_ComponentBindingInfo;
haxe_ui_parsers_ui_ComponentBindingInfo.__name__ = ["haxe","ui","parsers","ui","ComponentBindingInfo"];
haxe_ui_parsers_ui_ComponentBindingInfo.prototype = {
	__class__: haxe_ui_parsers_ui_ComponentBindingInfo
};
var haxe_ui_parsers_ui_ComponentParser = function() {
};
$hxClasses["haxe.ui.parsers.ui.ComponentParser"] = haxe_ui_parsers_ui_ComponentParser;
haxe_ui_parsers_ui_ComponentParser.__name__ = ["haxe","ui","parsers","ui","ComponentParser"];
haxe_ui_parsers_ui_ComponentParser.get = function(extension) {
	haxe_ui_parsers_ui_ComponentParser.defaultParsers();
	var _this = haxe_ui_parsers_ui_ComponentParser._parsers;
	var cls = __map_reserved[extension] != null ? _this.getReserved(extension) : _this.h[extension];
	if(cls == null) {
		throw new js__$Boot_HaxeError("No component parser found for \"" + extension + "\"");
	}
	var instance = Type.createInstance(cls,[]);
	if(instance == null) {
		throw new js__$Boot_HaxeError("Could not create component parser instance \"" + Std.string(cls) + "\"");
	}
	return instance;
};
haxe_ui_parsers_ui_ComponentParser.defaultParsers = function() {
	if(haxe_ui_parsers_ui_ComponentParser._parsers == null) {
		haxe_ui_parsers_ui_ComponentParser.register("xml",haxe_ui_parsers_ui_XMLParser);
	}
};
haxe_ui_parsers_ui_ComponentParser.register = function(extension,cls) {
	if(haxe_ui_parsers_ui_ComponentParser._parsers == null) {
		haxe_ui_parsers_ui_ComponentParser._parsers = new haxe_ds_StringMap();
	}
	var _this = haxe_ui_parsers_ui_ComponentParser._parsers;
	if(__map_reserved[extension] != null) {
		_this.setReserved(extension,cls);
	} else {
		_this.h[extension] = cls;
	}
};
haxe_ui_parsers_ui_ComponentParser.nextId = function(prefix) {
	if(prefix == null) {
		prefix = "component";
	}
	var s = prefix + haxe_ui_parsers_ui_ComponentParser._nextId;
	haxe_ui_parsers_ui_ComponentParser._nextId++;
	return s;
};
haxe_ui_parsers_ui_ComponentParser.float = function(value) {
	return parseFloat(value);
};
haxe_ui_parsers_ui_ComponentParser.isPercentage = function(value) {
	if(value.indexOf("%") == value.length - 1) {
		return true;
	}
	return false;
};
haxe_ui_parsers_ui_ComponentParser.prototype = {
	parse: function(data,resourceResolver) {
		throw new js__$Boot_HaxeError("Component parser not implemented!");
	}
	,__class__: haxe_ui_parsers_ui_ComponentParser
};
var haxe_ui_parsers_ui_XMLParser = function() {
	haxe_ui_parsers_ui_ComponentParser.call(this);
};
$hxClasses["haxe.ui.parsers.ui.XMLParser"] = haxe_ui_parsers_ui_XMLParser;
haxe_ui_parsers_ui_XMLParser.__name__ = ["haxe","ui","parsers","ui","XMLParser"];
haxe_ui_parsers_ui_XMLParser.parseComponent = function(component,xml,resourceResolver) {
	var isComponent = true;
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	var nodeName = xml.nodeName;
	if(nodeName == "import") {
		haxe_ui_parsers_ui_XMLParser.parseImportNode(component.parent,xml,resourceResolver);
		isComponent = false;
	} else if(nodeName == "script") {
		haxe_ui_parsers_ui_XMLParser.parseScriptNode(component,xml,resourceResolver);
		isComponent = false;
	} else if(nodeName == "style") {
		haxe_ui_parsers_ui_XMLParser.parseStyleNode(component,xml,resourceResolver);
		isComponent = false;
	} else if(nodeName == "bind") {
		haxe_ui_parsers_ui_XMLParser.parseBindNode(component,xml);
		isComponent = false;
	} else if(nodeName == "data") {
		if(xml.firstElement() != null) {
			var tmp = haxe_xml_Printer.print(xml);
			component.parent.data = StringTools.trim(tmp);
		} else {
			if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
			}
			var _this = xml.children[0];
			if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + _this.nodeType);
			}
			if(StringTools.startsWith(StringTools.trim(_this.nodeValue),"[")) {
				if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
				}
				var _this1 = xml.children[0];
				if(_this1.nodeType == Xml.Document || _this1.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + _this1.nodeType);
				}
				component.parent.data = StringTools.trim(_this1.nodeValue);
			}
		}
		isComponent = false;
	} else {
		haxe_ui_parsers_ui_XMLParser.parseDetails(component,xml);
		haxe_ui_parsers_ui_XMLParser.parseAttributes(component,xml);
		var childXml = xml.elements();
		while(childXml.hasNext()) {
			var childXml1 = childXml.next();
			var child = new haxe_ui_parsers_ui_ComponentInfo();
			child.parent = component;
			if(haxe_ui_parsers_ui_XMLParser.parseComponent(child,childXml1,resourceResolver) == true) {
				component.children.push(child);
			}
		}
	}
	return isComponent;
};
haxe_ui_parsers_ui_XMLParser.parseImportNode = function(component,xml,resourceResolver) {
	if(xml.get("source") != null) {
		var source = xml.get("source");
		var sourceData = resourceResolver.getResourceData(source);
		if(sourceData != null) {
			var extension = resourceResolver.extension(source);
			var c = haxe_ui_parsers_ui_ComponentParser.get(extension).parse(sourceData,resourceResolver);
			component.findRootComponent().styles = component.findRootComponent().styles.concat(c.styles);
			c.styles = [];
			component.findRootComponent().scriptlets = component.findRootComponent().scriptlets.concat(c.scriptlets);
			c.scriptlets = [];
			component.findRootComponent().bindings = component.findRootComponent().bindings.concat(c.bindings);
			c.bindings = [];
			c.parent = component;
			component.children.push(c);
		}
	}
};
haxe_ui_parsers_ui_XMLParser.parseScriptNode = function(component,xml,resourceResolver) {
	var scriptText = null;
	if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
	}
	if(xml.children[0] != null) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
		}
		var _this = xml.children[0];
		if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, unexpected " + _this.nodeType);
		}
		scriptText = _this.nodeValue;
	}
	if(xml.get("source") != null) {
		var source = xml.get("source");
		var sourceData = resourceResolver.getResourceData(source);
		if(sourceData != null) {
			if(scriptText == null) {
				scriptText = "";
			}
			scriptText += "\n" + sourceData;
		}
	}
	if(scriptText != null) {
		var scope = "global";
		if(scope == "global") {
			component.findRootComponent().scriptlets.push(scriptText);
		}
	}
};
haxe_ui_parsers_ui_XMLParser.parseStyleNode = function(component,xml,resourceResolver) {
	var styleText = null;
	if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
	}
	if(xml.children[0] != null) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
		}
		var _this = xml.children[0];
		if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, unexpected " + _this.nodeType);
		}
		styleText = _this.nodeValue;
	}
	if(xml.get("source") != null) {
		var source = xml.get("source");
		var sourceData = resourceResolver.getResourceData(source);
		if(sourceData != null) {
			if(styleText == null) {
				styleText = "";
			}
			styleText += "\n" + sourceData;
		}
	}
	if(styleText != null) {
		var scope = "global";
		if(scope == "global") {
			component.findRootComponent().styles.push(styleText);
		}
	}
};
haxe_ui_parsers_ui_XMLParser.parseBindNode = function(component,xml) {
	var binding = new haxe_ui_parsers_ui_ComponentBindingInfo();
	binding.source = xml.get("source");
	binding.target = xml.get("target");
	binding.transform = xml.get("transform");
	component.findRootComponent().bindings.push(binding);
};
haxe_ui_parsers_ui_XMLParser.parseDetails = function(component,xml) {
	var tmp;
	if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
	}
	if(xml.children[0] != null) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
		}
		tmp = "" + xml.children[0].nodeType == "1";
	} else {
		tmp = false;
	}
	if(tmp) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
		}
		var _this = xml.children[0];
		if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, unexpected " + _this.nodeType);
		}
		var value = StringTools.trim(_this.nodeValue);
		if(value != null && value.length > 0) {
			component.text = value;
		}
	}
	if(xml.nodeType != Xml.Element) {
		throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	}
	component.type = xml.nodeName;
};
haxe_ui_parsers_ui_XMLParser.parseAttributes = function(component,xml) {
	var attrName = xml.attributes();
	while(attrName.hasNext()) {
		var attrName1 = attrName.next();
		var attrValue = xml.get(attrName1);
		switch(attrName1) {
		case "bindTo":case "bindTransform":
			break;
		case "composite":
			component.composite = attrValue == "true";
			break;
		case "condition":
			component.condition = attrValue;
			break;
		case "contentHeight":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentContentHeight = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.contentHeight = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		case "contentWidth":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentContentWidth = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.contentWidth = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		case "height":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentHeight = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.height = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		case "id":
			component.id = attrValue;
			break;
		case "if":
			var condition = [];
			var _g = 0;
			var _g1 = attrValue.split(",");
			while(_g < _g1.length) {
				var t = _g1[_g];
				++_g;
				condition.push("backend == \"" + StringTools.trim(t) + "\"");
			}
			component.condition = condition.join(" || ");
			break;
		case "layout":
			component.layoutName = attrValue;
			break;
		case "left":
			component.left = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			break;
		case "style":
			component.style = attrValue;
			break;
		case "styleName":case "styleNames":
			component.styleNames = attrValue;
			break;
		case "text":
			component.text = attrValue;
			break;
		case "top":
			component.top = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			break;
		case "unless":
			var condition1 = [];
			var _g2 = 0;
			var _g11 = attrValue.split(",");
			while(_g2 < _g11.length) {
				var t1 = _g11[_g2];
				++_g2;
				condition1.push("backend != \"" + StringTools.trim(t1) + "\"");
			}
			component.condition = condition1.join(" && ");
			break;
		case "width":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentWidth = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.width = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		default:
			if(attrName1 == "group") {
				attrName1 = "groupName";
			}
			var _this = component.properties;
			if(__map_reserved[attrName1] != null) {
				_this.setReserved(attrName1,attrValue);
			} else {
				_this.h[attrName1] = attrValue;
			}
		}
	}
	var bindTo = xml.get("bindTo");
	if(bindTo != null) {
		if(component.id == null) {
			component.id = haxe_ui_parsers_ui_ComponentParser.nextId();
		}
		var binding = new haxe_ui_parsers_ui_ComponentBindingInfo();
		binding.source = bindTo;
		binding.target = component.id;
		binding.transform = xml.get("bindTransform");
		component.findRootComponent().bindings.push(binding);
	}
};
haxe_ui_parsers_ui_XMLParser.__super__ = haxe_ui_parsers_ui_ComponentParser;
haxe_ui_parsers_ui_XMLParser.prototype = $extend(haxe_ui_parsers_ui_ComponentParser.prototype,{
	parse: function(data,resourceResolver) {
		this._resourceResolver = resourceResolver;
		var component = new haxe_ui_parsers_ui_ComponentInfo();
		var xml = Xml.parse(data).firstElement();
		haxe_ui_parsers_ui_XMLParser.parseComponent(component,xml,resourceResolver);
		return component;
	}
	,__class__: haxe_ui_parsers_ui_XMLParser
});
var haxe_ui_parsers_ui_resolvers_ResourceResolver = function(params) {
	this._params = params;
};
$hxClasses["haxe.ui.parsers.ui.resolvers.ResourceResolver"] = haxe_ui_parsers_ui_resolvers_ResourceResolver;
haxe_ui_parsers_ui_resolvers_ResourceResolver.__name__ = ["haxe","ui","parsers","ui","resolvers","ResourceResolver"];
haxe_ui_parsers_ui_resolvers_ResourceResolver.prototype = {
	getResourceData: function(r) {
		return null;
	}
	,extension: function(path) {
		if(path.indexOf(".") == -1) {
			return null;
		}
		var arr = path.split(".");
		var extension = arr[arr.length - 1];
		return extension;
	}
	,__class__: haxe_ui_parsers_ui_resolvers_ResourceResolver
};
var haxe_ui_parsers_ui_resolvers_AssetResourceResolver = function(rootFile,params) {
	haxe_ui_parsers_ui_resolvers_ResourceResolver.call(this,params);
	this._rootFile = rootFile;
	var arr = this._rootFile.split("/");
	arr.pop();
	this._rootDir = arr.join("/");
	if(arr.length > 1) {
		this._rootDir += "/";
	}
};
$hxClasses["haxe.ui.parsers.ui.resolvers.AssetResourceResolver"] = haxe_ui_parsers_ui_resolvers_AssetResourceResolver;
haxe_ui_parsers_ui_resolvers_AssetResourceResolver.__name__ = ["haxe","ui","parsers","ui","resolvers","AssetResourceResolver"];
haxe_ui_parsers_ui_resolvers_AssetResourceResolver.__super__ = haxe_ui_parsers_ui_resolvers_ResourceResolver;
haxe_ui_parsers_ui_resolvers_AssetResourceResolver.prototype = $extend(haxe_ui_parsers_ui_resolvers_ResourceResolver.prototype,{
	getResourceData: function(r) {
		var f = haxe_io_Path.normalize(this._rootDir + r);
		return haxe_ui_ToolkitAssets.get_instance().getText(f);
	}
	,__class__: haxe_ui_parsers_ui_resolvers_AssetResourceResolver
});
var haxe_ui_scripting_ConditionEvaluator = function() {
};
$hxClasses["haxe.ui.scripting.ConditionEvaluator"] = haxe_ui_scripting_ConditionEvaluator;
haxe_ui_scripting_ConditionEvaluator.__name__ = ["haxe","ui","scripting","ConditionEvaluator"];
haxe_ui_scripting_ConditionEvaluator.prototype = {
	evaluate: function(condition) {
		if(haxe_ui_scripting_ConditionEvaluator._parser == null) {
			haxe_ui_scripting_ConditionEvaluator._parser = new hscript_Parser();
		}
		if(haxe_ui_scripting_ConditionEvaluator._interp == null) {
			haxe_ui_scripting_ConditionEvaluator._interp = new hscript_Interp();
		}
		var _this = haxe_ui_scripting_ConditionEvaluator._interp.variables;
		var value = haxe_ui_Backend;
		if(__map_reserved["Backend"] != null) {
			_this.setReserved("Backend",value);
		} else {
			_this.h["Backend"] = value;
		}
		var _this1 = haxe_ui_scripting_ConditionEvaluator._interp.variables;
		var value1 = haxe_ui_Backend.get_id();
		if(__map_reserved["backend"] != null) {
			_this1.setReserved("backend",value1);
		} else {
			_this1.h["backend"] = value1;
		}
		var program = haxe_ui_scripting_ConditionEvaluator._parser.parseString(condition);
		var r = haxe_ui_scripting_ConditionEvaluator._interp.execute(program);
		return r;
	}
	,__class__: haxe_ui_scripting_ConditionEvaluator
};
var hscript_Interp = function() {
	var _gthis = this;
	this.variables = new haxe_ds_StringMap();
	this.locals = new haxe_ds_StringMap();
	this.declared = [];
	var _this = this.variables;
	if(__map_reserved["null"] != null) {
		_this.setReserved("null",null);
	} else {
		_this.h["null"] = null;
	}
	var _this1 = this.variables;
	if(__map_reserved["true"] != null) {
		_this1.setReserved("true",true);
	} else {
		_this1.h["true"] = true;
	}
	var _this2 = this.variables;
	if(__map_reserved["false"] != null) {
		_this2.setReserved("false",false);
	} else {
		_this2.h["false"] = false;
	}
	var _this3 = this.variables;
	var value = function(e) {
		haxe_Log.trace(Std.string(e),_gthis.posInfos());
	};
	if(__map_reserved["trace"] != null) {
		_this3.setReserved("trace",value);
	} else {
		_this3.h["trace"] = value;
	}
	this.initOps();
};
$hxClasses["hscript.Interp"] = hscript_Interp;
hscript_Interp.__name__ = ["hscript","Interp"];
hscript_Interp.prototype = {
	posInfos: function() {
		return { fileName : "hscript", lineNumber : 0};
	}
	,initOps: function() {
		var me = this;
		this.binops = new haxe_ds_StringMap();
		var _this = this.binops;
		var value = function(e1,e2) {
			return me.expr(e1) + me.expr(e2);
		};
		if(__map_reserved["+"] != null) {
			_this.setReserved("+",value);
		} else {
			_this.h["+"] = value;
		}
		var _this1 = this.binops;
		var value1 = function(e11,e21) {
			return me.expr(e11) - me.expr(e21);
		};
		if(__map_reserved["-"] != null) {
			_this1.setReserved("-",value1);
		} else {
			_this1.h["-"] = value1;
		}
		var _this2 = this.binops;
		var value2 = function(e12,e22) {
			return me.expr(e12) * me.expr(e22);
		};
		if(__map_reserved["*"] != null) {
			_this2.setReserved("*",value2);
		} else {
			_this2.h["*"] = value2;
		}
		var _this3 = this.binops;
		var value3 = function(e13,e23) {
			return me.expr(e13) / me.expr(e23);
		};
		if(__map_reserved["/"] != null) {
			_this3.setReserved("/",value3);
		} else {
			_this3.h["/"] = value3;
		}
		var _this4 = this.binops;
		var value4 = function(e14,e24) {
			return me.expr(e14) % me.expr(e24);
		};
		if(__map_reserved["%"] != null) {
			_this4.setReserved("%",value4);
		} else {
			_this4.h["%"] = value4;
		}
		var _this5 = this.binops;
		var value5 = function(e15,e25) {
			return me.expr(e15) & me.expr(e25);
		};
		if(__map_reserved["&"] != null) {
			_this5.setReserved("&",value5);
		} else {
			_this5.h["&"] = value5;
		}
		var _this6 = this.binops;
		var value6 = function(e16,e26) {
			return me.expr(e16) | me.expr(e26);
		};
		if(__map_reserved["|"] != null) {
			_this6.setReserved("|",value6);
		} else {
			_this6.h["|"] = value6;
		}
		var _this7 = this.binops;
		var value7 = function(e17,e27) {
			return me.expr(e17) ^ me.expr(e27);
		};
		if(__map_reserved["^"] != null) {
			_this7.setReserved("^",value7);
		} else {
			_this7.h["^"] = value7;
		}
		var _this8 = this.binops;
		var value8 = function(e18,e28) {
			return me.expr(e18) << me.expr(e28);
		};
		if(__map_reserved["<<"] != null) {
			_this8.setReserved("<<",value8);
		} else {
			_this8.h["<<"] = value8;
		}
		var _this9 = this.binops;
		var value9 = function(e19,e29) {
			return me.expr(e19) >> me.expr(e29);
		};
		if(__map_reserved[">>"] != null) {
			_this9.setReserved(">>",value9);
		} else {
			_this9.h[">>"] = value9;
		}
		var _this10 = this.binops;
		var value10 = function(e110,e210) {
			return me.expr(e110) >>> me.expr(e210);
		};
		if(__map_reserved[">>>"] != null) {
			_this10.setReserved(">>>",value10);
		} else {
			_this10.h[">>>"] = value10;
		}
		var _this11 = this.binops;
		var value11 = function(e111,e211) {
			return me.expr(e111) == me.expr(e211);
		};
		if(__map_reserved["=="] != null) {
			_this11.setReserved("==",value11);
		} else {
			_this11.h["=="] = value11;
		}
		var _this12 = this.binops;
		var value12 = function(e112,e212) {
			return me.expr(e112) != me.expr(e212);
		};
		if(__map_reserved["!="] != null) {
			_this12.setReserved("!=",value12);
		} else {
			_this12.h["!="] = value12;
		}
		var _this13 = this.binops;
		var value13 = function(e113,e213) {
			return me.expr(e113) >= me.expr(e213);
		};
		if(__map_reserved[">="] != null) {
			_this13.setReserved(">=",value13);
		} else {
			_this13.h[">="] = value13;
		}
		var _this14 = this.binops;
		var value14 = function(e114,e214) {
			return me.expr(e114) <= me.expr(e214);
		};
		if(__map_reserved["<="] != null) {
			_this14.setReserved("<=",value14);
		} else {
			_this14.h["<="] = value14;
		}
		var _this15 = this.binops;
		var value15 = function(e115,e215) {
			return me.expr(e115) > me.expr(e215);
		};
		if(__map_reserved[">"] != null) {
			_this15.setReserved(">",value15);
		} else {
			_this15.h[">"] = value15;
		}
		var _this16 = this.binops;
		var value16 = function(e116,e216) {
			return me.expr(e116) < me.expr(e216);
		};
		if(__map_reserved["<"] != null) {
			_this16.setReserved("<",value16);
		} else {
			_this16.h["<"] = value16;
		}
		var _this17 = this.binops;
		var value17 = function(e117,e217) {
			if(me.expr(e117) != true) {
				return me.expr(e217) == true;
			} else {
				return true;
			}
		};
		if(__map_reserved["||"] != null) {
			_this17.setReserved("||",value17);
		} else {
			_this17.h["||"] = value17;
		}
		var _this18 = this.binops;
		var value18 = function(e118,e218) {
			if(me.expr(e118) == true) {
				return me.expr(e218) == true;
			} else {
				return false;
			}
		};
		if(__map_reserved["&&"] != null) {
			_this18.setReserved("&&",value18);
		} else {
			_this18.h["&&"] = value18;
		}
		var _this19 = this.binops;
		var value19 = $bind(this,this.assign);
		if(__map_reserved["="] != null) {
			_this19.setReserved("=",value19);
		} else {
			_this19.h["="] = value19;
		}
		var _this20 = this.binops;
		var value20 = function(e119,e219) {
			return new IntIterator(me.expr(e119),me.expr(e219));
		};
		if(__map_reserved["..."] != null) {
			_this20.setReserved("...",value20);
		} else {
			_this20.h["..."] = value20;
		}
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v11,v21) {
			return v11 - v21;
		});
		this.assignOp("*=",function(v12,v22) {
			return v12 * v22;
		});
		this.assignOp("/=",function(v13,v23) {
			return v13 / v23;
		});
		this.assignOp("%=",function(v14,v24) {
			return v14 % v24;
		});
		this.assignOp("&=",function(v15,v25) {
			return v15 & v25;
		});
		this.assignOp("|=",function(v16,v26) {
			return v16 | v26;
		});
		this.assignOp("^=",function(v17,v27) {
			return v17 ^ v27;
		});
		this.assignOp("<<=",function(v18,v28) {
			return v18 << v28;
		});
		this.assignOp(">>=",function(v19,v29) {
			return v19 >> v29;
		});
		this.assignOp(">>>=",function(v110,v210) {
			return v110 >>> v210;
		});
	}
	,assign: function(e1,e2) {
		var v = this.expr(e2);
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			if(l == null) {
				var _this1 = this.variables;
				if(__map_reserved[id] != null) {
					_this1.setReserved(id,v);
				} else {
					_this1.h[id] = v;
				}
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1.f;
			var e = e1.e;
			v = this.set(this.expr(e),f,v);
			break;
		case 16:
			var index = e1.index;
			var e3 = e1.e;
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				arr[index1] = v;
			}
			break;
		default:
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidOp("="));
		}
		return v;
	}
	,assignOp: function(op,fop) {
		var me = this;
		var _this = this.binops;
		var value = function(e1,e2) {
			return me.evalAssignOp(op,fop,e1,e2);
		};
		if(__map_reserved[op] != null) {
			_this.setReserved(op,value);
		} else {
			_this.h[op] = value;
		}
	}
	,evalAssignOp: function(op,fop,e1,e2) {
		var v;
		switch(e1._hx_index) {
		case 1:
			var id = e1.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) {
				var _this1 = this.variables;
				if(__map_reserved[id] != null) {
					_this1.setReserved(id,v);
				} else {
					_this1.h[id] = v;
				}
			} else {
				l.r = v;
			}
			break;
		case 5:
			var f = e1.f;
			var e = e1.e;
			var obj = this.expr(e);
			v = fop(this.get(obj,f),this.expr(e2));
			v = this.set(obj,f,v);
			break;
		case 16:
			var index = e1.index;
			var e3 = e1.e;
			var arr = this.expr(e3);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				v = fop((js_Boot.__cast(arr , haxe_IMap)).get(index1),this.expr(e2));
				(js_Boot.__cast(arr , haxe_IMap)).set(index1,v);
			} else {
				v = fop(arr[index1],this.expr(e2));
				arr[index1] = v;
			}
			break;
		default:
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidOp(op));
		}
		return v;
	}
	,increment: function(e,prefix,delta) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			var _this = this.locals;
			var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
			var v;
			if(l == null) {
				var _this1 = this.variables;
				v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
			} else {
				v = l.r;
			}
			if(prefix) {
				v += delta;
				if(l == null) {
					var _this2 = this.variables;
					var value = v;
					if(__map_reserved[id] != null) {
						_this2.setReserved(id,value);
					} else {
						_this2.h[id] = value;
					}
				} else {
					l.r = v;
				}
			} else if(l == null) {
				var _this3 = this.variables;
				var value1 = v + delta;
				if(__map_reserved[id] != null) {
					_this3.setReserved(id,value1);
				} else {
					_this3.h[id] = value1;
				}
			} else {
				l.r = v + delta;
			}
			return v;
		case 5:
			var f = e.f;
			var e1 = e.e;
			var obj = this.expr(e1);
			var v1 = this.get(obj,f);
			if(prefix) {
				v1 += delta;
				this.set(obj,f,v1);
			} else {
				this.set(obj,f,v1 + delta);
			}
			return v1;
		case 16:
			var index = e.index;
			var e2 = e.e;
			var arr = this.expr(e2);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				var v2 = (js_Boot.__cast(arr , haxe_IMap)).get(index1);
				if(prefix) {
					v2 += delta;
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2);
				} else {
					(js_Boot.__cast(arr , haxe_IMap)).set(index1,v2 + delta);
				}
				return v2;
			} else {
				var v3 = arr[index1];
				if(prefix) {
					v3 += delta;
					arr[index1] = v3;
				} else {
					arr[index1] = v3 + delta;
				}
				return v3;
			}
			break;
		default:
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidOp(delta > 0 ? "++" : "--"));
		}
	}
	,execute: function(expr) {
		this.depth = 0;
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		return this.exprReturn(expr);
	}
	,exprReturn: function(e) {
		try {
			return this.expr(e);
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			if(js_Boot.__instanceof(e2,hscript__$Interp_Stop)) {
				var e3 = e2;
				switch(e3._hx_index) {
				case 0:
					throw new js__$Boot_HaxeError("Invalid break");
				case 1:
					throw new js__$Boot_HaxeError("Invalid continue");
				case 2:
					var v = e3.v;
					return v;
				}
			} else {
				throw e1;
			}
		}
	}
	,duplicate: function(h) {
		var h2 = new haxe_ds_StringMap();
		var k = h.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			var value = __map_reserved[k1] != null ? h.getReserved(k1) : h.h[k1];
			if(__map_reserved[k1] != null) {
				h2.setReserved(k1,value);
			} else {
				h2.h[k1] = value;
			}
		}
		return h2;
	}
	,restore: function(old) {
		while(this.declared.length > old) {
			var d = this.declared.pop();
			var key = d.n;
			var value = d.old;
			var _this = this.locals;
			if(__map_reserved[key] != null) {
				_this.setReserved(key,value);
			} else {
				_this.h[key] = value;
			}
		}
	}
	,edef: function(e) {
		return e;
	}
	,error: function(e) {
		throw new js__$Boot_HaxeError(e);
	}
	,resolve: function(id) {
		var _this = this.locals;
		var l = __map_reserved[id] != null ? _this.getReserved(id) : _this.h[id];
		if(l != null) {
			return l.r;
		}
		var _this1 = this.variables;
		var v = __map_reserved[id] != null ? _this1.getReserved(id) : _this1.h[id];
		var tmp;
		if(v == null) {
			var _this2 = this.variables;
			tmp = !(__map_reserved[id] != null ? _this2.existsReserved(id) : _this2.h.hasOwnProperty(id));
		} else {
			tmp = false;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(hscript_Error.EUnknownVariable(id));
		}
		return v;
	}
	,expr: function(e) {
		var _gthis = this;
		switch(e._hx_index) {
		case 0:
			var c = e.c;
			switch(c._hx_index) {
			case 0:
				var v = c.v;
				return v;
			case 1:
				var f = c.f;
				return f;
			case 2:
				var s = c.s;
				return s;
			}
			break;
		case 1:
			var id = e.v;
			return this.resolve(id);
		case 2:
			var e1 = e.e;
			var n = e.n;
			var _this = this.locals;
			this.declared.push({ n : n, old : __map_reserved[n] != null ? _this.getReserved(n) : _this.h[n]});
			var this1 = this.locals;
			var value = { r : e1 == null ? null : this.expr(e1)};
			var _this1 = this1;
			if(__map_reserved[n] != null) {
				_this1.setReserved(n,value);
			} else {
				_this1.h[n] = value;
			}
			return null;
		case 3:
			var e2 = e.e;
			return this.expr(e2);
		case 4:
			var exprs = e.e;
			var old = this.declared.length;
			var v1 = null;
			var _g = 0;
			while(_g < exprs.length) {
				var e3 = exprs[_g];
				++_g;
				v1 = this.expr(e3);
			}
			this.restore(old);
			return v1;
		case 5:
			var f1 = e.f;
			var e4 = e.e;
			return this.get(this.expr(e4),f1);
		case 6:
			var e21 = e.e2;
			var e11 = e.e1;
			var op = e.op;
			var _this2 = this.binops;
			var fop = __map_reserved[op] != null ? _this2.getReserved(op) : _this2.h[op];
			if(fop == null) {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidOp(op));
			}
			return fop(e11,e21);
		case 7:
			var e5 = e.e;
			var prefix = e.prefix;
			var op1 = e.op;
			switch(op1) {
			case "!":
				return this.expr(e5) != true;
			case "++":
				return this.increment(e5,prefix,1);
			case "-":
				return -this.expr(e5);
			case "--":
				return this.increment(e5,prefix,-1);
			case "~":
				return ~this.expr(e5);
			default:
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidOp(op1));
			}
			break;
		case 8:
			var params = e.params;
			var e6 = e.e;
			var args = [];
			var _g1 = 0;
			while(_g1 < params.length) {
				var p = params[_g1];
				++_g1;
				args.push(this.expr(p));
			}
			if(e6._hx_index == 5) {
				var f2 = e6.f;
				var e7 = e6.e;
				var obj = this.expr(e7);
				if(obj == null) {
					throw new js__$Boot_HaxeError(hscript_Error.EInvalidAccess(f2));
				}
				return this.fcall(obj,f2,args);
			} else {
				return this.call(null,this.expr(e6),args);
			}
			break;
		case 9:
			var e22 = e.e2;
			var e12 = e.e1;
			var econd = e.cond;
			if(this.expr(econd) == true) {
				return this.expr(e12);
			} else if(e22 == null) {
				return null;
			} else {
				return this.expr(e22);
			}
			break;
		case 10:
			var e8 = e.e;
			var econd1 = e.cond;
			this.whileLoop(econd1,e8);
			return null;
		case 11:
			var e9 = e.e;
			var it = e.it;
			var v2 = e.v;
			this.forLoop(v2,it,e9);
			return null;
		case 12:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SBreak);
		case 13:
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SContinue);
		case 14:
			var name = e.name;
			var fexpr = e.e;
			var params1 = e.args;
			var capturedLocals = this.duplicate(this.locals);
			var me = this;
			var hasOpt = false;
			var minParams = 0;
			var _g2 = 0;
			while(_g2 < params1.length) {
				var p1 = params1[_g2];
				++_g2;
				if(p1.opt) {
					hasOpt = true;
				} else {
					minParams += 1;
				}
			}
			var f3 = function(args1) {
				if(args1.length != params1.length) {
					if(args1.length < minParams) {
						var str = "Invalid number of parameters. Got " + args1.length + ", required " + minParams;
						if(name != null) {
							str += " for function '" + name + "'";
						}
						throw new js__$Boot_HaxeError(str);
					}
					var args2 = [];
					var extraParams = args1.length - minParams;
					var pos = 0;
					var _g3 = 0;
					while(_g3 < params1.length) {
						var p2 = params1[_g3];
						++_g3;
						if(p2.opt) {
							if(extraParams > 0) {
								args2.push(args1[pos++]);
								--extraParams;
							} else {
								args2.push(null);
							}
						} else {
							args2.push(args1[pos++]);
						}
					}
					args1 = args2;
				}
				var old1 = me.locals;
				var depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				var _g11 = 0;
				var _g4 = params1.length;
				while(_g11 < _g4) {
					var i = _g11++;
					var key = params1[i].name;
					var _this3 = me.locals;
					var value1 = { r : args1[i]};
					if(__map_reserved[key] != null) {
						_this3.setReserved(key,value1);
					} else {
						_this3.h[key] = value1;
					}
				}
				var r = null;
				if(_gthis.inTry) {
					try {
						r = me.exprReturn(fexpr);
					} catch( e10 ) {
						haxe_CallStack.lastException = e10;
						var e13 = (e10 instanceof js__$Boot_HaxeError) ? e10.val : e10;
						me.locals = old1;
						me.depth = depth;
						throw js__$Boot_HaxeError.wrap(e13);
					}
				} else {
					r = me.exprReturn(fexpr);
				}
				me.locals = old1;
				me.depth = depth;
				return r;
			};
			var f4 = Reflect.makeVarArgs(f3);
			if(name != null) {
				if(this.depth == 0) {
					var _this4 = this.variables;
					if(__map_reserved[name] != null) {
						_this4.setReserved(name,f4);
					} else {
						_this4.h[name] = f4;
					}
				} else {
					var tmp = this.declared;
					var _this5 = this.locals;
					var tmp1 = __map_reserved[name] != null ? _this5.getReserved(name) : _this5.h[name];
					tmp.push({ n : name, old : tmp1});
					var ref = { r : f4};
					var _this6 = this.locals;
					if(__map_reserved[name] != null) {
						_this6.setReserved(name,ref);
					} else {
						_this6.h[name] = ref;
					}
					if(__map_reserved[name] != null) {
						capturedLocals.setReserved(name,ref);
					} else {
						capturedLocals.h[name] = ref;
					}
				}
			}
			return f4;
		case 15:
			var e14 = e.e;
			throw new js__$Boot_HaxeError(hscript__$Interp_Stop.SReturn(e14 == null ? null : this.expr(e14)));
		case 16:
			var index = e.index;
			var e15 = e.e;
			var arr = this.expr(e15);
			var index1 = this.expr(index);
			if(js_Boot.__instanceof(arr,haxe_IMap)) {
				return (js_Boot.__cast(arr , haxe_IMap)).get(index1);
			} else {
				return arr[index1];
			}
			break;
		case 17:
			var arr1 = e.e;
			var tmp2;
			if(arr1.length > 0) {
				var _g5 = arr1[0];
				tmp2 = _g5._hx_index == 6 && _g5.op == "=>";
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				var isAllString = true;
				var isAllInt = true;
				var isAllObject = true;
				var isAllEnum = true;
				var keys = [];
				var values = [];
				var _g12 = 0;
				while(_g12 < arr1.length) {
					var e16 = arr1[_g12];
					++_g12;
					if(e16._hx_index == 6) {
						if(e16.op == "=>") {
							var eValue = e16.e2;
							var eKey = e16.e1;
							var key1 = this.expr(eKey);
							var value2 = this.expr(eValue);
							isAllString = isAllString && typeof(key1) == "string";
							isAllInt = isAllInt && (typeof(key1) == "number" && ((key1 | 0) === key1));
							isAllObject = isAllObject && Reflect.isObject(key1);
							isAllEnum = isAllEnum && Reflect.isEnumValue(key1);
							keys.push(key1);
							values.push(value2);
						} else {
							throw new js__$Boot_HaxeError("=> expected");
						}
					} else {
						throw new js__$Boot_HaxeError("=> expected");
					}
				}
				var map;
				if(isAllInt) {
					map = new haxe_ds_IntMap();
				} else if(isAllString) {
					map = new haxe_ds_StringMap();
				} else if(isAllEnum) {
					map = new haxe_ds_EnumValueMap();
				} else if(isAllObject) {
					map = new haxe_ds_ObjectMap();
				} else {
					throw new js__$Boot_HaxeError("Inconsistent key types");
				}
				var _g21 = 0;
				var _g13 = keys.length;
				while(_g21 < _g13) {
					var n1 = _g21++;
					(js_Boot.__cast(map , haxe_IMap)).set(keys[n1],values[n1]);
				}
				return map;
			} else {
				var a = [];
				var _g14 = 0;
				while(_g14 < arr1.length) {
					var e17 = arr1[_g14];
					++_g14;
					a.push(this.expr(e17));
				}
				return a;
			}
			break;
		case 18:
			var params2 = e.params;
			var cl = e.cl;
			var a1 = [];
			var _g6 = 0;
			while(_g6 < params2.length) {
				var e18 = params2[_g6];
				++_g6;
				a1.push(this.expr(e18));
			}
			return this.cnew(cl,a1);
		case 19:
			var e19 = e.e;
			throw js__$Boot_HaxeError.wrap(this.expr(e19));
		case 20:
			var ecatch = e.ecatch;
			var n2 = e.v;
			var e20 = e.e;
			var old2 = this.declared.length;
			var oldTry = this.inTry;
			try {
				this.inTry = true;
				var v3 = this.expr(e20);
				this.restore(old2);
				this.inTry = oldTry;
				return v3;
			} catch( e23 ) {
				haxe_CallStack.lastException = e23;
				var e24 = (e23 instanceof js__$Boot_HaxeError) ? e23.val : e23;
				if(js_Boot.__instanceof(e24,hscript__$Interp_Stop)) {
					this.inTry = oldTry;
					throw new js__$Boot_HaxeError(e24);
				} else {
					this.restore(old2);
					this.inTry = oldTry;
					var _this7 = this.locals;
					this.declared.push({ n : n2, old : __map_reserved[n2] != null ? _this7.getReserved(n2) : _this7.h[n2]});
					var _this8 = this.locals;
					var value3 = { r : e24};
					if(__map_reserved[n2] != null) {
						_this8.setReserved(n2,value3);
					} else {
						_this8.h[n2] = value3;
					}
					var v4 = this.expr(ecatch);
					this.restore(old2);
					return v4;
				}
			}
			break;
		case 21:
			var fl = e.fl;
			var o = { };
			var _g7 = 0;
			while(_g7 < fl.length) {
				var f5 = fl[_g7];
				++_g7;
				this.set(o,f5.name,this.expr(f5.e));
			}
			return o;
		case 22:
			var e25 = e.e2;
			var e110 = e.e1;
			var econd2 = e.cond;
			if(this.expr(econd2) == true) {
				return this.expr(e110);
			} else {
				return this.expr(e25);
			}
			break;
		case 23:
			var def = e.defaultExpr;
			var cases = e.cases;
			var e26 = e.e;
			var val = this.expr(e26);
			var match = false;
			var _g8 = 0;
			while(_g8 < cases.length) {
				var c1 = cases[_g8];
				++_g8;
				var _g15 = 0;
				var _g22 = c1.values;
				while(_g15 < _g22.length) {
					var v5 = _g22[_g15];
					++_g15;
					if(this.expr(v5) == val) {
						match = true;
						break;
					}
				}
				if(match) {
					val = this.expr(c1.expr);
					break;
				}
			}
			if(!match) {
				val = def == null ? null : this.expr(def);
			}
			return val;
		case 24:
			var e27 = e.e;
			var econd3 = e.cond;
			this.doWhileLoop(econd3,e27);
			return null;
		case 25:
			var e28 = e.e;
			return this.expr(e28);
		}
	}
	,doWhileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(true) {
			try {
				this.expr(e);
			} catch( err ) {
				haxe_CallStack.lastException = err;
				var err1 = (err instanceof js__$Boot_HaxeError) ? err.val : err;
				if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
					var err2 = err1;
					switch(err2._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw new js__$Boot_HaxeError(err2);
					}
				} else {
					throw err;
				}
			}
			if(!(this.expr(econd) == true)) {
				break;
			}
		}
		this.restore(old);
	}
	,whileLoop: function(econd,e) {
		var old = this.declared.length;
		_hx_loop1: while(this.expr(econd) == true) try {
			this.expr(e);
		} catch( err ) {
			haxe_CallStack.lastException = err;
			var err1 = (err instanceof js__$Boot_HaxeError) ? err.val : err;
			if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
				var err2 = err1;
				switch(err2._hx_index) {
				case 0:
					break _hx_loop1;
				case 1:
					break;
				case 2:
					throw new js__$Boot_HaxeError(err2);
				}
			} else {
				throw err;
			}
		}
		this.restore(old);
	}
	,makeIterator: function(v) {
		try {
			v = $getIterator(v);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		}
		if(v.hasNext == null || v.next == null) {
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidIterator(v));
		}
		return v;
	}
	,forLoop: function(n,it,e) {
		var old = this.declared.length;
		var _this = this.locals;
		this.declared.push({ n : n, old : __map_reserved[n] != null ? _this.getReserved(n) : _this.h[n]});
		var it1 = this.makeIterator(this.expr(it));
		_hx_loop1: while(it1.hasNext()) {
			var this1 = this.locals;
			var value = { r : it1.next()};
			var _this1 = this1;
			if(__map_reserved[n] != null) {
				_this1.setReserved(n,value);
			} else {
				_this1.h[n] = value;
			}
			try {
				this.expr(e);
			} catch( err ) {
				haxe_CallStack.lastException = err;
				var err1 = (err instanceof js__$Boot_HaxeError) ? err.val : err;
				if(js_Boot.__instanceof(err1,hscript__$Interp_Stop)) {
					var err2 = err1;
					switch(err2._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw new js__$Boot_HaxeError(err2);
					}
				} else {
					throw err;
				}
			}
		}
		this.restore(old);
	}
	,isMap: function(o) {
		return js_Boot.__instanceof(o,haxe_IMap);
	}
	,getMapValue: function(map,key) {
		return (js_Boot.__cast(map , haxe_IMap)).get(key);
	}
	,setMapValue: function(map,key,value) {
		(js_Boot.__cast(map , haxe_IMap)).set(key,value);
	}
	,get: function(o,f) {
		if(o == null) {
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidAccess(f));
		}
		return Reflect.getProperty(o,f);
	}
	,set: function(o,f,v) {
		if(o == null) {
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidAccess(f));
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,fcall: function(o,f,args) {
		return this.call(o,this.get(o,f),args);
	}
	,call: function(o,f,args) {
		return f.apply(o,args);
	}
	,cnew: function(cl,args) {
		var c = $hxClasses[cl];
		if(c == null) {
			c = this.resolve(cl);
		}
		return Type.createInstance(c,args);
	}
	,__class__: hscript_Interp
};
var haxe_ui_scripting_ScriptInterp = function() {
	hscript_Interp.call(this);
	if(haxe_ui_scripting_ScriptInterp._staticClasses != null) {
		var name = haxe_ui_scripting_ScriptInterp._staticClasses.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			var _this = haxe_ui_scripting_ScriptInterp._staticClasses;
			var c = __map_reserved[name1] != null ? _this.getReserved(name1) : _this.h[name1];
			var _this1 = this.variables;
			var value = c;
			if(__map_reserved[name1] != null) {
				_this1.setReserved(name1,value);
			} else {
				_this1.h[name1] = value;
			}
		}
	}
	var _this2 = this.variables;
	var value1 = $bind(this,this.isVar);
	if(__map_reserved["isVar"] != null) {
		_this2.setReserved("isVar",value1);
	} else {
		_this2.h["isVar"] = value1;
	}
};
$hxClasses["haxe.ui.scripting.ScriptInterp"] = haxe_ui_scripting_ScriptInterp;
haxe_ui_scripting_ScriptInterp.__name__ = ["haxe","ui","scripting","ScriptInterp"];
haxe_ui_scripting_ScriptInterp.addClassAlias = function(alias,classPath) {
	if(haxe_ui_scripting_ScriptInterp._classAliases == null) {
		haxe_ui_scripting_ScriptInterp._classAliases = new haxe_ds_StringMap();
	}
	var _this = haxe_ui_scripting_ScriptInterp._classAliases;
	if(__map_reserved[alias] != null) {
		_this.setReserved(alias,classPath);
	} else {
		_this.h[alias] = classPath;
	}
};
haxe_ui_scripting_ScriptInterp.addStaticClass = function(alias,c) {
	if(haxe_ui_scripting_ScriptInterp._staticClasses == null) {
		haxe_ui_scripting_ScriptInterp._staticClasses = new haxe_ds_StringMap();
	}
	var _this = haxe_ui_scripting_ScriptInterp._staticClasses;
	var value = c;
	if(__map_reserved[alias] != null) {
		_this.setReserved(alias,value);
	} else {
		_this.h[alias] = value;
	}
};
haxe_ui_scripting_ScriptInterp.__super__ = hscript_Interp;
haxe_ui_scripting_ScriptInterp.prototype = $extend(hscript_Interp.prototype,{
	isVar: function(varName) {
		var _this = this.variables;
		if(__map_reserved[varName] != null) {
			return _this.existsReserved(varName);
		} else {
			return _this.h.hasOwnProperty(varName);
		}
	}
	,cnew: function(cl,args) {
		var tmp;
		if(haxe_ui_scripting_ScriptInterp._classAliases != null) {
			var _this = haxe_ui_scripting_ScriptInterp._classAliases;
			tmp = __map_reserved[cl] != null ? _this.existsReserved(cl) : _this.h.hasOwnProperty(cl);
		} else {
			tmp = false;
		}
		if(tmp) {
			var _this1 = haxe_ui_scripting_ScriptInterp._classAliases;
			cl = __map_reserved[cl] != null ? _this1.getReserved(cl) : _this1.h[cl];
		}
		return hscript_Interp.prototype.cnew.call(this,cl,args);
	}
	,get: function(o,f) {
		if(o == null) {
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidAccess(f));
		}
		var v = Reflect.getProperty(o,f);
		return this.parseResult(v);
	}
	,parseResult: function(v) {
		if(v == null) {
			return v;
		}
		var temp = Std.string(v);
		var regexp = new EReg("^_?(Bool|Float|Int|String)\\((.*)\\)","g");
		if(regexp.match(temp) == false) {
			return v;
		}
		var m1 = regexp.matched(1);
		var m2 = regexp.matched(2);
		switch(m1) {
		case "Bool":
			return parseFloat(m2);
		case "Float":
			return parseFloat(m2);
		case "Int":
			return Std.parseInt(m2);
		case "String":
			if(m2 == null) {
				return "null";
			} else {
				return "" + m2;
			}
			break;
		default:
		}
		return v;
	}
	,set: function(o,f,v) {
		if(o == null) {
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidAccess(f));
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	,__class__: haxe_ui_scripting_ScriptInterp
});
var haxe_ui_styles_Unit = $hxEnums["haxe.ui.styles.Unit"] = { __ename__ : true, __constructs__ : ["Pix","Percent","EM","REM","VH","VW"]
	,Pix: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ui.styles.Unit",toString:$estr}; },$_.__params__ = ["v"],$_)
	,Percent: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ui.styles.Unit",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EM: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"haxe.ui.styles.Unit",toString:$estr}; },$_.__params__ = ["v"],$_)
	,REM: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"haxe.ui.styles.Unit",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VH: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.ui.styles.Unit",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VW: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"haxe.ui.styles.Unit",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_ui_styles_FillStyle = $hxEnums["haxe.ui.styles.FillStyle"] = { __ename__ : true, __constructs__ : ["Transparent","Color","Gradient"]
	,Transparent: {_hx_index:0,__enum__:"haxe.ui.styles.FillStyle",toString:$estr}
	,Color: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"haxe.ui.styles.FillStyle",toString:$estr}; },$_.__params__ = ["c"],$_)
	,Gradient: ($_=function(a,b,c,d) { return {_hx_index:2,a:a,b:b,c:c,d:d,__enum__:"haxe.ui.styles.FillStyle",toString:$estr}; },$_.__params__ = ["a","b","c","d"],$_)
};
var haxe_ui_styles_Layout = $hxEnums["haxe.ui.styles.Layout"] = { __ename__ : true, __constructs__ : ["Horizontal","Vertical","Absolute","Dock","Inline"]
	,Horizontal: {_hx_index:0,__enum__:"haxe.ui.styles.Layout",toString:$estr}
	,Vertical: {_hx_index:1,__enum__:"haxe.ui.styles.Layout",toString:$estr}
	,Absolute: {_hx_index:2,__enum__:"haxe.ui.styles.Layout",toString:$estr}
	,Dock: {_hx_index:3,__enum__:"haxe.ui.styles.Layout",toString:$estr}
	,Inline: {_hx_index:4,__enum__:"haxe.ui.styles.Layout",toString:$estr}
};
var haxe_ui_styles_DockStyle = $hxEnums["haxe.ui.styles.DockStyle"] = { __ename__ : true, __constructs__ : ["Top","Left","Right","Bottom","Full"]
	,Top: {_hx_index:0,__enum__:"haxe.ui.styles.DockStyle",toString:$estr}
	,Left: {_hx_index:1,__enum__:"haxe.ui.styles.DockStyle",toString:$estr}
	,Right: {_hx_index:2,__enum__:"haxe.ui.styles.DockStyle",toString:$estr}
	,Bottom: {_hx_index:3,__enum__:"haxe.ui.styles.DockStyle",toString:$estr}
	,Full: {_hx_index:4,__enum__:"haxe.ui.styles.DockStyle",toString:$estr}
};
var haxe_ui_styles_TextAlign = $hxEnums["haxe.ui.styles.TextAlign"] = { __ename__ : true, __constructs__ : ["Left","Right","Center"]
	,Left: {_hx_index:0,__enum__:"haxe.ui.styles.TextAlign",toString:$estr}
	,Right: {_hx_index:1,__enum__:"haxe.ui.styles.TextAlign",toString:$estr}
	,Center: {_hx_index:2,__enum__:"haxe.ui.styles.TextAlign",toString:$estr}
};
var haxe_ui_styles_CssClass = function() {
};
$hxClasses["haxe.ui.styles.CssClass"] = haxe_ui_styles_CssClass;
haxe_ui_styles_CssClass.__name__ = ["haxe","ui","styles","CssClass"];
haxe_ui_styles_CssClass.prototype = {
	__class__: haxe_ui_styles_CssClass
};
var haxe_ui_styles_Rule = function() {
};
$hxClasses["haxe.ui.styles.Rule"] = haxe_ui_styles_Rule;
haxe_ui_styles_Rule.__name__ = ["haxe","ui","styles","Rule"];
haxe_ui_styles_Rule.prototype = {
	__class__: haxe_ui_styles_Rule
};
var haxe_ui_styles_Token = $hxEnums["haxe.ui.styles.Token"] = { __ename__ : true, __constructs__ : ["TIdent","TString","TInt","TFloat","TDblDot","TSharp","TPOpen","TPClose","TExclam","TComma","TEof","TPercent","TSemicolon","TBrOpen","TBrClose","TDot","TSpaces","TSlash","TStar"]
	,TIdent: ($_=function(i) { return {_hx_index:0,i:i,__enum__:"haxe.ui.styles.Token",toString:$estr}; },$_.__params__ = ["i"],$_)
	,TString: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.ui.styles.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TInt: ($_=function(i) { return {_hx_index:2,i:i,__enum__:"haxe.ui.styles.Token",toString:$estr}; },$_.__params__ = ["i"],$_)
	,TFloat: ($_=function(f) { return {_hx_index:3,f:f,__enum__:"haxe.ui.styles.Token",toString:$estr}; },$_.__params__ = ["f"],$_)
	,TDblDot: {_hx_index:4,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TSharp: {_hx_index:5,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TPOpen: {_hx_index:6,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TPClose: {_hx_index:7,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TExclam: {_hx_index:8,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TComma: {_hx_index:9,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TEof: {_hx_index:10,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TPercent: {_hx_index:11,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TSemicolon: {_hx_index:12,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TBrOpen: {_hx_index:13,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TBrClose: {_hx_index:14,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TDot: {_hx_index:15,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TSpaces: {_hx_index:16,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TSlash: {_hx_index:17,__enum__:"haxe.ui.styles.Token",toString:$estr}
	,TStar: {_hx_index:18,__enum__:"haxe.ui.styles.Token",toString:$estr}
};
var haxe_ui_styles_Value = $hxEnums["haxe.ui.styles.Value"] = { __ename__ : true, __constructs__ : ["VIdent","VString","VUnit","VFloat","VInt","VHex","VList","VGroup","VCall","VLabel","VSlash"]
	,VIdent: ($_=function(i) { return {_hx_index:0,i:i,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["i"],$_)
	,VString: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["s"],$_)
	,VUnit: ($_=function(v,unit) { return {_hx_index:2,v:v,unit:unit,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v","unit"],$_)
	,VFloat: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VInt: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VHex: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VList: ($_=function(l) { return {_hx_index:6,l:l,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["l"],$_)
	,VGroup: ($_=function(l) { return {_hx_index:7,l:l,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["l"],$_)
	,VCall: ($_=function(f,vl) { return {_hx_index:8,f:f,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["f","vl"],$_)
	,VLabel: ($_=function(v,val) { return {_hx_index:9,v:v,val:val,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_.__params__ = ["v","val"],$_)
	,VSlash: {_hx_index:10,__enum__:"haxe.ui.styles.Value",toString:$estr}
};
var haxe_ui_styles_Parser = function() {
};
$hxClasses["haxe.ui.styles.Parser"] = haxe_ui_styles_Parser;
haxe_ui_styles_Parser.__name__ = ["haxe","ui","styles","Parser"];
haxe_ui_styles_Parser.prototype = {
	notImplemented: function(pos) {
		haxe_Log.trace("Not implemented",pos);
	}
	,applyStyle: function(r,v,s) {
		switch(r) {
		case "background":
			if(this.applyComposite(["background-color","background-color-end","background-gradient-style"],v,s)) {
				return true;
			}
			if(this.getIdent(v) == "none") {
				s.backgroundColor = -2147483648;
				s.backgroundColorEnd = -2147483648;
				return true;
			}
			break;
		case "background-color":
			if(this.getIdent(v) == "none" || this.getIdent(v) == "transparent") {
				s.backgroundColor = -2147483648;
				s.backgroundColorEnd = -2147483648;
				return true;
			}
			var f = this.getCol(v);
			if(f != null) {
				s.backgroundColor = f;
				s.backgroundColorEnd = null;
				return true;
			}
			break;
		case "background-color-end":
			var f1 = this.getCol(v);
			if(f1 != null) {
				s.backgroundColorEnd = f1;
				return true;
			}
			break;
		case "background-gradient-style":
			var v1 = this.getIdent(v);
			if(v1 != null) {
				if(v1 == "vertical" || v1 == "horizontal") {
					s.backgroundGradientStyle = v1;
					return true;
				}
				return true;
			}
			break;
		case "background-image":
			var x = this.getString(v);
			if(x != null) {
				s.backgroundImage = x;
				return true;
			}
			break;
		case "background-image-clip":
			if(this.applyComposite(["background-image-clip-top","background-image-clip-left","background-image-clip-bottom","background-image-clip-right"],v,s)) {
				return true;
			}
			if(this.getIdent(v) == "none") {
				s.backgroundImageClipTop = null;
				s.backgroundImageClipLeft = null;
				s.backgroundImageClipBottom = null;
				s.backgroundImageClipRight = null;
				return true;
			}
			break;
		case "background-image-clip-bottom":
			var i = this.getVariant(v);
			if(i != null) {
				s.backgroundImageClipBottom = i;
				return true;
			}
			break;
		case "background-image-clip-left":
			var i1 = this.getVariant(v);
			if(i1 != null) {
				s.backgroundImageClipLeft = i1;
				return true;
			}
			break;
		case "background-image-clip-right":
			var i2 = this.getVariant(v);
			if(i2 != null) {
				s.backgroundImageClipRight = i2;
				return true;
			}
			break;
		case "background-image-clip-top":
			var i3 = this.getVariant(v);
			if(i3 != null) {
				s.backgroundImageClipTop = i3;
				return true;
			}
			break;
		case "background-image-repeat":
			var v2 = this.getIdent(v);
			if(v2 != null) {
				if(v2 == "repeat" || v2 == "stretch" || v2 == "none") {
					if(v2 == "none") {
						s.backgroundImageRepeat = null;
					} else {
						s.backgroundImageRepeat = v2;
					}
					return true;
				}
			}
			break;
		case "background-image-slice":
			if(this.applyComposite(["background-image-slice-top","background-image-slice-left","background-image-slice-bottom","background-image-slice-right"],v,s)) {
				return true;
			}
			if(this.getIdent(v) == "none") {
				s.backgroundImageSliceTop = null;
				s.backgroundImageSliceLeft = null;
				s.backgroundImageSliceBottom = null;
				s.backgroundImageSliceRight = null;
				return true;
			}
			break;
		case "background-image-slice-bottom":
			var i4 = this.getVariant(v);
			if(i4 != null) {
				s.backgroundImageSliceBottom = i4;
				return true;
			}
			break;
		case "background-image-slice-left":
			var i5 = this.getVariant(v);
			if(i5 != null) {
				s.backgroundImageSliceLeft = i5;
				return true;
			}
			break;
		case "background-image-slice-right":
			var i6 = this.getVariant(v);
			if(i6 != null) {
				s.backgroundImageSliceRight = i6;
				return true;
			}
			break;
		case "background-image-slice-top":
			var i7 = this.getVariant(v);
			if(i7 != null) {
				s.backgroundImageSliceTop = i7;
				return true;
			}
			break;
		case "background-opacity":
			var i8 = this.getVal(v);
			if(i8 != null) {
				s.backgroundOpacity = i8;
				return true;
			}
			break;
		case "border":
			if(this.applyComposite(["border-width","border-style","border-color"],v,s)) {
				return true;
			}
			if(this.getIdent(v) == "none") {
				s.borderTopSize = haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(-2147483648);
				s.borderLeftSize = haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(-2147483648);
				s.borderBottomSize = haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(-2147483648);
				s.borderRightSize = haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(-2147483648);
				s.borderTopColor = -2147483648;
				s.borderLeftColor = -2147483648;
				s.borderBottomColor = -2147483648;
				s.borderRightColor = -2147483648;
				return true;
			}
			break;
		case "border-bottom":
			if(this.applyComposite(["border-bottom-width","border-bottom-color"],v,s)) {
				return true;
			}
			if(this.getIdent(v) == "none") {
				s.borderBottomSize = haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(-2147483648);
				s.borderBottomColor = -2147483648;
				return true;
			}
			break;
		case "border-bottom-color":
			var c = this.getCol(v);
			if(c != null) {
				s.borderBottomColor = c;
				return true;
			}
			break;
		case "border-bottom-size":case "border-bottom-width":
			var i9 = this.getVariant(v,true,false);
			if(i9 != null) {
				s.borderBottomSize = i9;
				return true;
			}
			break;
		case "border-color":
			var c1 = this.getCol(v);
			if(c1 != null) {
				s.borderTopColor = c1;
				s.borderLeftColor = c1;
				s.borderBottomColor = c1;
				s.borderRightColor = c1;
				return true;
			}
			break;
		case "border-left":
			if(this.applyComposite(["border-left-width","border-left-color"],v,s)) {
				return true;
			}
			if(this.getIdent(v) == "none") {
				s.borderLeftSize = haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(-2147483648);
				s.borderLeftColor = -2147483648;
				return true;
			}
			break;
		case "border-left-color":
			var c2 = this.getCol(v);
			if(c2 != null) {
				s.borderLeftColor = c2;
				return true;
			}
			break;
		case "border-left-size":case "border-left-width":
			var i10 = this.getVariant(v,true,false);
			if(i10 != null) {
				s.borderLeftSize = i10;
				return true;
			}
			break;
		case "border-radius":
			if(this.getIdent(v) == "none") {
				s.borderRadius = haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(-2147483648);
				return true;
			}
			var i11 = this.getVariant(v,true,false);
			if(i11 != null) {
				s.borderRadius = i11;
				return true;
			}
			break;
		case "border-right":
			if(this.applyComposite(["border-right-width","border-right-color"],v,s)) {
				return true;
			}
			if(this.getIdent(v) == "none") {
				s.borderRightSize = haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(-2147483648);
				s.borderRightColor = -2147483648;
				return true;
			}
			break;
		case "border-right-color":
			var c3 = this.getCol(v);
			if(c3 != null) {
				s.borderRightColor = c3;
				return true;
			}
			break;
		case "border-right-size":case "border-right-width":
			var i12 = this.getVariant(v,true,false);
			if(i12 != null) {
				s.borderRightSize = i12;
				return true;
			}
			break;
		case "border-size":case "border-width":
			var i13 = this.getVariant(v,true,false);
			if(i13 != null) {
				s.borderTopSize = i13;
				s.borderLeftSize = i13;
				s.borderBottomSize = i13;
				s.borderRightSize = i13;
				return true;
			}
			break;
		case "border-style":
			if(this.getIdent(v) == "solid") {
				return true;
			}
			break;
		case "border-top":
			if(this.applyComposite(["border-top-width","border-top-color"],v,s)) {
				return true;
			}
			if(this.getIdent(v) == "none") {
				s.borderTopSize = haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(-2147483648);
				s.borderTopColor = -2147483648;
				return true;
			}
			break;
		case "border-top-color":
			var c4 = this.getCol(v);
			if(c4 != null) {
				s.borderTopColor = c4;
				return true;
			}
			break;
		case "border-top-size":case "border-top-width":
			var i14 = this.getVariant(v,true,false);
			if(i14 != null) {
				s.borderTopSize = i14;
				return true;
			}
			break;
		case "clip":
			var b = this.getBool(v);
			if(b != null) {
				s.clip = b;
				return true;
			}
			break;
		case "color":
			if(this.getIdent(v) == "none") {
				s.color = -2147483648;
				return true;
			}
			var c5 = this.getCol(v);
			if(c5 != null) {
				s.color = c5;
				return true;
			}
			break;
		case "cursor":
			var v3 = this.getIdent(v);
			if(v3 != null) {
				s.cursor = v3;
				return true;
			}
			return false;
		case "filter":
			var arr = this.getCall(v);
			if(arr != null) {
				s.filter = arr;
				return true;
			} else {
				var i15 = this.getIdent(v);
				if(i15 != null) {
					s.filter = [i15];
					return true;
				}
			}
			return false;
		case "font":
			return this.applyComposite(["font-name","font-size","font-style"],v,s);
		case "font-name":
			var x1 = this.getString(v);
			if(x1 != null) {
				s.fontName = x1;
				return true;
			}
			break;
		case "font-size":
			var i16 = this.getVariant(v,true,false);
			if(i16 != null) {
				s.fontSize = i16;
				return true;
			}
			break;
		case "font-style":
			var x2 = this.getIdent(v);
			if(x2 == "bold") {
				s.fontBold = true;
			} else if(x2 == "italic") {
				s.fontItalic = true;
			}
			return true;
		case "height":
			var i17 = this.getVal(v);
			if(this.getIdent(v) == "auto") {
				s.height = null;
				s.percentHeight = null;
				s.autoHeight = true;
				return true;
			} else if(i17 != null) {
				s.height = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(i17);
				return true;
			} else {
				var p = this.getUnit(v);
				if(p != null) {
					switch(p._hx_index) {
					case 1:
						var x3 = p.v;
						s.percentHeight = x3 * 100;
						return true;
					case 3:case 4:case 5:
						s.height = haxe_ui_util__$Variant_Variant_$Impl_$.fromUnit(p);
						return true;
					default:
					}
				}
			}
			break;
		case "hidden":
			var b1 = this.getBool(v);
			if(b1 != null) {
				s.hidden = b1;
				return true;
			}
			break;
		case "horizontal-align":
			var x4 = this.getIdent(v);
			switch(x4) {
			case "center":case "left":case "right":
				s.horizontalAlign = x4;
				return true;
			default:
			}
			break;
		case "horizontal-spacing":
			var i18 = this.getVariant(v);
			if(i18 != null) {
				s.horizontalSpacing = i18;
				return true;
			}
			break;
		case "icon":
			var x5 = this.getString(v);
			if(this.getIdent(v) == "none") {
				s.icon = null;
				return true;
			}
			if(x5 != null) {
				s.icon = x5;
				return true;
			}
			break;
		case "icon-position":
			var x6 = this.getIdent(v);
			switch(x6) {
			case "bottom":case "far-left":case "far-right":case "left":case "right":case "top":
				s.iconPosition = x6;
				return true;
			default:
			}
			break;
		case "margin":
			if(v._hx_index == 7) {
				if(v.l.length == 2) {
					var b2 = v.l[1];
					var a = v.l[0];
					var a1 = this.getVariant(a);
					var b3 = this.getVariant(b2);
					if(a1 != null && b3 != null) {
						s.marginTop = s.marginBottom = a1;
						s.marginLeft = s.marginRight = b3;
						return true;
					}
				} else {
					var i19 = this.getVariant(v);
					if(i19 != null) {
						s.margin(i19);
						return true;
					}
				}
			} else {
				var i20 = this.getVariant(v);
				if(i20 != null) {
					s.margin(i20);
					return true;
				}
			}
			break;
		case "margin-bottom":
			var i21 = this.getVariant(v);
			if(i21 != null) {
				s.marginBottom = i21;
				return true;
			}
			break;
		case "margin-left":
			var i22 = this.getVariant(v);
			if(i22 != null) {
				s.marginLeft = i22;
				return true;
			}
			break;
		case "margin-right":
			var i23 = this.getVariant(v);
			if(i23 != null) {
				s.marginRight = i23;
				return true;
			}
			break;
		case "margin-top":
			var i24 = this.getVariant(v);
			if(i24 != null) {
				s.marginTop = i24;
				return true;
			}
			break;
		case "native":
			var b4 = this.getBool(v);
			if(b4 != null) {
				s.native = b4;
				return true;
			}
			break;
		case "offset":
			return this.applyComposite(["offset-left","offset-top"],v,s);
		case "offset-left":
			var i25 = this.getVariant(v);
			if(i25 != null) {
				s.offsetLeft = i25;
				return true;
			}
			break;
		case "offset-top":
			var i26 = this.getVariant(v);
			if(i26 != null) {
				s.offsetTop = i26;
				return true;
			}
			break;
		case "opacity":
			var i27 = this.getVal(v);
			if(i27 != null) {
				s.opacity = i27;
				return true;
			}
			break;
		case "padding":
			if(v._hx_index == 7) {
				if(v.l.length == 2) {
					var b5 = v.l[1];
					var a2 = v.l[0];
					var a3 = this.getVariant(a2);
					var b6 = this.getVariant(b5);
					if(a3 != null && b6 != null) {
						s.paddingTop = s.paddingBottom = a3;
						s.paddingLeft = s.paddingRight = b6;
						return true;
					}
				} else {
					var i28 = this.getVariant(v);
					if(i28 != null) {
						s.set_padding(i28);
						return true;
					}
				}
			} else {
				var i29 = this.getVariant(v);
				if(i29 != null) {
					s.set_padding(i29);
					return true;
				}
			}
			break;
		case "padding-bottom":
			var i30 = this.getVariant(v);
			if(i30 != null) {
				s.paddingBottom = i30;
				return true;
			}
			break;
		case "padding-left":
			var i31 = this.getVariant(v);
			if(i31 != null) {
				s.paddingLeft = i31;
				return true;
			}
			break;
		case "padding-right":
			var i32 = this.getVariant(v);
			if(i32 != null) {
				s.paddingRight = i32;
				return true;
			}
			break;
		case "padding-top":
			var i33 = this.getVariant(v);
			if(i33 != null) {
				s.paddingTop = i33;
				return true;
			}
			break;
		case "spacing":
			return this.applyComposite(["vertical-spacing","horizontal-spacing"],v,s);
		case "text-align":
			var x7 = this.getIdent(v);
			switch(x7) {
			case "center":case "justify":case "left":case "right":
				s.textAlign = x7;
				return true;
			default:
			}
			break;
		case "vertical-align":
			var x8 = this.getIdent(v);
			switch(x8) {
			case "bottom":case "center":case "top":
				s.verticalAlign = x8;
				return true;
			default:
			}
			break;
		case "vertical-spacing":
			var i34 = this.getVariant(v);
			if(i34 != null) {
				s.verticalSpacing = i34;
				return true;
			}
			break;
		case "width":
			var i35 = this.getVal(v);
			if(this.getIdent(v) == "auto") {
				s.width = null;
				s.percentWidth = null;
				s.autoWidth = true;
				return true;
			} else if(i35 != null) {
				s.width = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(i35);
				return true;
			} else {
				var p1 = this.getUnit(v);
				if(p1 != null) {
					switch(p1._hx_index) {
					case 1:
						var x9 = p1.v;
						s.percentWidth = x9 * 100;
						return true;
					case 3:case 4:case 5:
						s.width = haxe_ui_util__$Variant_Variant_$Impl_$.fromUnit(p1);
						return true;
					default:
					}
				}
			}
			break;
		default:
			haxe_Log.trace("WARNING: Not implemented '" + r + "' = " + this.valueStr(v),{ fileName : "haxe/ui/styles/Parser.hx", lineNumber : 785, className : "haxe.ui.styles.Parser", methodName : "applyStyle"});
		}
		return false;
	}
	,applyComposite: function(names,v,s) {
		var vl;
		if(v._hx_index == 7) {
			var l = v.l;
			vl = l;
		} else {
			vl = [v];
		}
		if(names.length > vl.length) {
			var last = vl[vl.length - 1];
			var _g1 = 0;
			var _g = names.length - vl.length;
			while(_g1 < _g) {
				var i = _g1++;
				vl.push(last);
			}
		}
		while(vl.length > 0) {
			var found = false;
			var _g2 = 0;
			while(_g2 < names.length) {
				var n = names[_g2];
				++_g2;
				var count = 1;
				if(count > vl.length) {
					count = vl.length;
				}
				while(count > 0) {
					var v1 = count == 1 ? vl[0] : haxe_ui_styles_Value.VGroup(vl.slice(0,count));
					if(this.applyStyle(n,v1,s)) {
						found = true;
						HxOverrides.remove(names,n);
						var _g21 = 0;
						var _g11 = count;
						while(_g21 < _g11) {
							var i1 = _g21++;
							vl.shift();
						}
						break;
					}
					--count;
				}
				if(found) {
					break;
				}
			}
			if(!found) {
				return false;
			}
		}
		return true;
	}
	,getGroup: function(v,f) {
		if(v._hx_index == 7) {
			var l = v.l;
			var a = [];
			var _g = 0;
			while(_g < l.length) {
				var v1 = l[_g];
				++_g;
				var v2 = f(v1);
				if(v2 == null) {
					return null;
				}
				a.push(v2);
			}
			return a;
		} else {
			var v3 = f(v);
			if(v3 == null) {
				return null;
			} else {
				return [v3];
			}
		}
	}
	,getList: function(v,f) {
		if(v._hx_index == 6) {
			var l = v.l;
			var a = [];
			var _g = 0;
			while(_g < l.length) {
				var v1 = l[_g];
				++_g;
				var v2 = f(v1);
				if(v2 == null) {
					return null;
				}
				a.push(v2);
			}
			return a;
		} else {
			var v3 = f(v);
			if(v3 == null) {
				return null;
			} else {
				return [v3];
			}
		}
	}
	,getInt: function(v) {
		switch(v._hx_index) {
		case 2:
			var u = v.unit;
			var f = v.v;
			switch(u) {
			case "pt":
				return f * 4 / 3 | 0;
			case "px":
				return f | 0;
			default:
				return null;
			}
			break;
		case 4:
			var v1 = v.v;
			return v1 | 0;
		default:
			return null;
		}
	}
	,getBool: function(v) {
		switch(v._hx_index) {
		case 0:
			var v1 = v.i;
			if(v1 != "true") {
				return v1 == "yes";
			} else {
				return true;
			}
			break;
		case 4:
			var v2 = v.v;
			return (v2 | 0) == 1;
		default:
			return null;
		}
	}
	,getString: function(v) {
		if(v._hx_index == 1) {
			var v1 = v.s;
			return v1;
		} else {
			return null;
		}
	}
	,getCall: function(v) {
		if(v._hx_index == 8) {
			var params = v.vl;
			var v1 = v.f;
			var arr = [];
			arr.push(v1);
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				var c = this.getCol(p);
				if(c != null) {
					arr.push(c);
				} else {
					switch(p._hx_index) {
					case 0:
						var x = p.i;
						if(x == "true") {
							arr.push(true);
						} else if(x == "false") {
							arr.push(false);
						} else {
							arr.push(x);
						}
						break;
					case 3:
						var x1 = p.v;
						arr.push(x1);
						break;
					case 4:
						var x2 = p.v;
						arr.push(x2);
						break;
					default:
					}
				}
			}
			return arr;
		} else {
			return null;
		}
	}
	,getVal: function(v) {
		switch(v._hx_index) {
		case 2:
			var u = v.unit;
			var f = v.v;
			switch(u) {
			case "pt":
				return f * 4 / 3;
			case "px":
				return f;
			default:
				return null;
			}
			break;
		case 3:
			var v1 = v.v;
			return v1;
		case 4:
			var v2 = v.v;
			return v2;
		default:
			return null;
		}
	}
	,getUnit: function(v) {
		switch(v._hx_index) {
		case 2:
			var u = v.unit;
			var f = v.v;
			switch(u) {
			case "%":
				return haxe_ui_styles_Unit.Percent(f / 100);
			case "pt":
				return haxe_ui_styles_Unit.Pix(f * 4 / 3);
			case "px":
				return haxe_ui_styles_Unit.Pix(f);
			case "rem":
				return haxe_ui_styles_Unit.REM(f);
			case "vh":
				return haxe_ui_styles_Unit.VH(f);
			case "vw":
				return haxe_ui_styles_Unit.VW(f);
			default:
				return null;
			}
			break;
		case 3:
			var v1 = v.v;
			return haxe_ui_styles_Unit.Pix(v1);
		case 4:
			var v2 = v.v;
			return haxe_ui_styles_Unit.Pix(v2);
		default:
			return null;
		}
	}
	,getVariant: function(v,allowRem,allowViewport) {
		if(allowViewport == null) {
			allowViewport = true;
		}
		if(allowRem == null) {
			allowRem = true;
		}
		switch(v._hx_index) {
		case 2:
			var u = v.unit;
			var f = v.v;
			switch(u) {
			case "%":
				return haxe_ui_util__$Variant_Variant_$Impl_$.fromUnit(haxe_ui_styles_Unit.Percent(f / 100));
			case "pt":
				return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(f * 4 / 3);
			case "px":
				return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(f);
			case "rem":
				if(allowRem) {
					return haxe_ui_util__$Variant_Variant_$Impl_$.fromUnit(haxe_ui_styles_Unit.REM(f));
				} else {
					return null;
				}
				break;
			case "vh":
				if(allowViewport) {
					return haxe_ui_util__$Variant_Variant_$Impl_$.fromUnit(haxe_ui_styles_Unit.VH(f));
				} else {
					return null;
				}
				break;
			case "vw":
				if(allowViewport) {
					return haxe_ui_util__$Variant_Variant_$Impl_$.fromUnit(haxe_ui_styles_Unit.VW(f));
				} else {
					return null;
				}
				break;
			default:
				return null;
			}
			break;
		case 3:
			var v1 = v.v;
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(v1);
		case 4:
			var v2 = v.v;
			return haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(v2);
		default:
			return null;
		}
	}
	,mapIdent: function(v,vals) {
		var i = this.getIdent(v);
		if(i == null) {
			return null;
		}
		var _g = 0;
		while(_g < vals.length) {
			var v1 = vals[_g];
			++_g;
			if($hxEnums[v1.__enum__].__constructs__[v1._hx_index].toLowerCase() == i) {
				return v1;
			}
		}
		return null;
	}
	,getIdent: function(v) {
		if(v._hx_index == 0) {
			var v1 = v.i;
			return v1;
		} else {
			return null;
		}
	}
	,getColAlpha: function(v) {
		var c = this.getCol(v);
		if(c != null && c >>> 24 == 0) {
			c |= -16777216;
		}
		return c;
	}
	,getFill: function(v) {
		var c = this.getColAlpha(v);
		if(c != null) {
			return haxe_ui_styles_FillStyle.Color(c);
		}
		switch(v._hx_index) {
		case 0:
			if(v.i == "transparent") {
				return haxe_ui_styles_FillStyle.Transparent;
			}
			break;
		case 8:
			if(v.f == "gradient") {
				if(v.vl.length == 4) {
					var d = v.vl[3];
					var c1 = v.vl[2];
					var b = v.vl[1];
					var a = v.vl[0];
					var ca = this.getColAlpha(a);
					var cb = this.getColAlpha(b);
					var cc = this.getColAlpha(c1);
					var cd = this.getColAlpha(d);
					if(ca != null && cb != null && cc != null && cd != null) {
						return haxe_ui_styles_FillStyle.Gradient(ca,cb,cc,cd);
					}
				}
			}
			break;
		default:
		}
		return null;
	}
	,getCol: function(v) {
		switch(v._hx_index) {
		case 0:
			var i = v.i;
			switch(i) {
			case "aliceblue":
				return 15792383;
			case "antiquewhite":
				return 16444375;
			case "aqua":
				return 65535;
			case "aquamarine":
				return 8388564;
			case "azure":
				return 15794175;
			case "beige":
				return 16119260;
			case "bisque":
				return 16770244;
			case "black":
				return 0;
			case "blanchedalmond":
				return 16772045;
			case "blue":
				return 255;
			case "blueviolet":
				return 9055202;
			case "brown":
				return 10824234;
			case "burlywood":
				return 14596231;
			case "cadetblue":
				return 6266528;
			case "chartreuse":
				return 8388352;
			case "chocolate":
				return 13789470;
			case "coral":
				return 16744272;
			case "cornflowerblue":
				return 6591981;
			case "cornsilk":
				return 16775388;
			case "crimson":
				return 14423100;
			case "cyan":
				return 65535;
			case "darkblue":
				return 139;
			case "darkcyan":
				return 35723;
			case "darkgoldenrod":
				return 12092939;
			case "darkgray":
				return 11119017;
			case "darkgreen":
				return 25600;
			case "darkgrey":
				return 11119017;
			case "darkkhaki":
				return 12433259;
			case "darkmagenta":
				return 9109643;
			case "darkolivegreen":
				return 5597999;
			case "darkorange":
				return 16747520;
			case "darkorchid":
				return 10040012;
			case "darkred":
				return 9109504;
			case "darksalmon":
				return 15308410;
			case "darkseagreen":
				return 9419919;
			case "darkslateblue":
				return 4734347;
			case "darkslategray":
				return 3100495;
			case "darkslategrey":
				return 3100495;
			case "darkturquoise":
				return 52945;
			case "darkviolet":
				return 9699539;
			case "deeppink":
				return 16716947;
			case "deepskyblue":
				return 49151;
			case "dimgray":
				return 6908265;
			case "dimgrey":
				return 6908265;
			case "dodgerblue":
				return 2003199;
			case "firebrick":
				return 11674146;
			case "floralwhite":
				return 16775920;
			case "forestgreen":
				return 2263842;
			case "fuchsia":
				return 16711935;
			case "gainsboro":
				return 14474460;
			case "ghostwhite":
				return 16316671;
			case "gold":
				return 16766720;
			case "goldenrod":
				return 14329120;
			case "gray":
				return 8421504;
			case "green":
				return 32768;
			case "greenyellow":
				return 11403055;
			case "grey":
				return 8421504;
			case "honeydew":
				return 15794160;
			case "hotpink":
				return 16738740;
			case "indianred":
				return 13458524;
			case "indigo":
				return 4915330;
			case "ivory":
				return 16777200;
			case "khaki":
				return 15787660;
			case "lavender":
				return 15132410;
			case "lavenderblush":
				return 16773365;
			case "lawngreen":
				return 8190976;
			case "lemonchiffon":
				return 16775885;
			case "lightblue":
				return 11393254;
			case "lightcoral":
				return 15761536;
			case "lightcyan":
				return 14745599;
			case "lightgoldenrodyellow":
				return 16448210;
			case "lightgray":
				return 13882323;
			case "lightgreen":
				return 9498256;
			case "lightgrey":
				return 13882323;
			case "lightpink":
				return 16758465;
			case "lightsalmon":
				return 16752762;
			case "lightseagreen":
				return 2142890;
			case "lightskyblue":
				return 8900346;
			case "lightslategray":
				return 7833753;
			case "lightslategrey":
				return 7833753;
			case "lightsteelblue":
				return 11584734;
			case "lightyellow":
				return 16777184;
			case "lime":
				return 65280;
			case "limegreen":
				return 3329330;
			case "linen":
				return 16445670;
			case "magenta":
				return 16711935;
			case "maroon":
				return 8388608;
			case "mediumaquamarine":
				return 6737322;
			case "mediumblue":
				return 205;
			case "mediumorchid":
				return 12211667;
			case "mediumpurple":
				return 9662683;
			case "mediumseagreen":
				return 3978097;
			case "mediumslateblue":
				return 8087790;
			case "mediumspringgreen":
				return 64154;
			case "mediumturquoise":
				return 4772300;
			case "mediumvioletred":
				return 13047173;
			case "midnightblue":
				return 1644912;
			case "mintcream":
				return 16121850;
			case "mistyrose":
				return 16770273;
			case "moccasin":
				return 16770229;
			case "navajowhite":
				return 16768685;
			case "navy":
				return 128;
			case "oldlace":
				return 16643558;
			case "olive":
				return 8421376;
			case "olivedrab":
				return 7048739;
			case "orange":
				return 16753920;
			case "orangered":
				return 16729344;
			case "orchid":
				return 14315734;
			case "palegoldenrod":
				return 15657130;
			case "palegreen":
				return 10025880;
			case "paleturquoise":
				return 11529966;
			case "palevioletred":
				return 14381203;
			case "papayawhip":
				return 16773077;
			case "peachpuff":
				return 16767673;
			case "peru":
				return 13468991;
			case "pink":
				return 16761035;
			case "plum":
				return 14524637;
			case "powderblue":
				return 11591910;
			case "purple":
				return 8388736;
			case "rebeccapurple":
				return 6697881;
			case "red":
				return 16711680;
			case "rosybrown":
				return 12357519;
			case "royalblue":
				return 4286945;
			case "saddlebrown":
				return 9127187;
			case "salmon":
				return 16416882;
			case "sandybrown":
				return 16032864;
			case "seagreen":
				return 3050327;
			case "seashell":
				return 16774638;
			case "sienna":
				return 10506797;
			case "silver":
				return 12632256;
			case "skyblue":
				return 8900331;
			case "slateblue":
				return 6970061;
			case "slategray":
				return 7372944;
			case "slategrey":
				return 7372944;
			case "snow":
				return 16775930;
			case "springgreen":
				return 65407;
			case "steelblue":
				return 4620980;
			case "tan":
				return 13808780;
			case "teal":
				return 32896;
			case "thistle":
				return 14204888;
			case "tomato":
				return 16737095;
			case "turquoise":
				return 4251856;
			case "violet":
				return 15631086;
			case "wheat":
				return 16113331;
			case "white":
				return 16777215;
			case "whitesmoke":
				return 16119285;
			case "yellow":
				return 16776960;
			case "yellowgreen":
				return 10145074;
			default:
				return null;
			}
			break;
		case 5:
			var v1 = v.v;
			if(v1.length == 6) {
				return Std.parseInt("0x" + v1);
			} else if(v1.length == 3) {
				return Std.parseInt("0x" + v1.charAt(0) + v1.charAt(0) + v1.charAt(1) + v1.charAt(1) + v1.charAt(2) + v1.charAt(2));
			} else {
				return null;
			}
			break;
		case 8:
			if(v.f == "rgba") {
				if(v.vl.length == 4) {
					var a = v.vl[3];
					var b = v.vl[2];
					var g = v.vl[1];
					var r = v.vl[0];
					var r1 = this.getVal(r);
					var g1 = this.getVal(g);
					var b1 = this.getVal(b);
					var a1 = this.getVal(a);
					if(r1 != null && g1 != null && b1 != null && a1 != null) {
						var v2 = a1 * 255 | 0;
						if(v2 < 0) {
							v2 = 0;
						}
						if(v2 > 255) {
							v2 = 255;
						}
						var a2 = v2;
						if(a2 == 0) {
							a2 = 1;
						}
						var v3 = r1 | 0;
						if(v3 < 0) {
							v3 = 0;
						}
						if(v3 > 255) {
							v3 = 255;
						}
						var v4 = g1 | 0;
						if(v4 < 0) {
							v4 = 0;
						}
						if(v4 > 255) {
							v4 = 255;
						}
						var v5 = b1 | 0;
						if(v5 < 0) {
							v5 = 0;
						}
						if(v5 > 255) {
							v5 = 255;
						}
						return a2 << 24 | v3 << 16 | v4 << 8 | v5;
					} else {
						return null;
					}
				} else {
					return null;
				}
			} else {
				return null;
			}
			break;
		default:
			return null;
		}
	}
	,getFontName: function(v) {
		switch(v._hx_index) {
		case 0:
			var i = v.i;
			return i;
		case 1:
			var s = v.s;
			return s;
		case 7:
			var g = this.getGroup(v,$bind(this,this.getIdent));
			if(g == null) {
				return null;
			} else {
				return g.join(" ");
			}
			break;
		default:
			return null;
		}
	}
	,unexpected: function(t) {
		return null;
	}
	,expect: function(t) {
		var tk = this.readToken();
		if(tk != t) {
			this.unexpected(tk);
		}
	}
	,push: function(t) {
		this.tokens.push(t);
	}
	,isToken: function(t) {
		var tk = this.readToken();
		if(tk == t) {
			return true;
		}
		this.tokens.push(tk);
		return false;
	}
	,parse: function(css,s) {
		this.css = css;
		this.s = s;
		this.pos = 0;
		this.tokens = [];
		this.parseStyle(haxe_ui_styles_Token.TEof);
	}
	,valueStr: function(v) {
		switch(v._hx_index) {
		case 0:
			var i = v.i;
			return i;
		case 1:
			var s = v.s;
			return "\"" + s + "\"";
		case 2:
			var unit = v.unit;
			var f = v.v;
			return f + unit;
		case 3:
			var f1 = v.v;
			if(f1 == null) {
				return "null";
			} else {
				return "" + f1;
			}
			break;
		case 4:
			var v1 = v.v;
			if(v1 == null) {
				return "null";
			} else {
				return "" + v1;
			}
			break;
		case 5:
			var v2 = v.v;
			return "#" + v2;
		case 6:
			var l = v.l;
			var _g = [];
			var _g1 = 0;
			while(_g1 < l.length) {
				var v3 = l[_g1];
				++_g1;
				_g.push(this.valueStr(v3));
			}
			return _g.join(", ");
		case 7:
			var l1 = v.l;
			var _g2 = [];
			var _g11 = 0;
			while(_g11 < l1.length) {
				var v4 = l1[_g11];
				++_g11;
				_g2.push(this.valueStr(v4));
			}
			return _g2.join(" ");
		case 8:
			var args = v.vl;
			var f2 = v.f;
			var tmp = f2 + "(";
			var _g3 = [];
			var _g12 = 0;
			while(_g12 < args.length) {
				var v5 = args[_g12];
				++_g12;
				_g3.push(this.valueStr(v5));
			}
			return tmp + _g3.join(", ") + ")";
		case 9:
			var v6 = v.val;
			var label = v.v;
			return this.valueStr(v6) + " !" + label;
		case 10:
			return "/";
		}
	}
	,parseStyle: function(eof) {
		while(!this.isToken(eof)) {
			var r = this.readIdent();
			if(r == null) {
				break;
			}
			this.expect(haxe_ui_styles_Token.TDblDot);
			var v = this.readValue();
			if(v == null) {
				break;
			}
			var s = this.s;
			if(v._hx_index == 9) {
				var val = v.val;
				var label = v.v;
				if(label == "important") {
					v = val;
					if(this.simp == null) {
						this.simp = new haxe_ui_styles_Style();
					}
					s = this.simp;
				}
			}
			if(!this.applyStyle(r,v,s)) {
				haxe_Log.trace("Invalid value " + this.valueStr(v) + " for css " + r,{ fileName : "haxe/ui/styles/Parser.hx", lineNumber : 1316, className : "haxe.ui.styles.Parser", methodName : "parseStyle"});
			}
			if(this.isToken(eof)) {
				break;
			}
			this.expect(haxe_ui_styles_Token.TSemicolon);
		}
	}
	,parseRules: function(css) {
		this.css = css;
		this.pos = 0;
		this.tokens = [];
		var rules = [];
		while(!this.isToken(haxe_ui_styles_Token.TEof)) {
			var classes = this.readClasses();
			this.expect(haxe_ui_styles_Token.TBrOpen);
			this.s = new haxe_ui_styles_Style();
			this.simp = null;
			this.parseStyle(haxe_ui_styles_Token.TBrClose);
			var _g = 0;
			while(_g < classes.length) {
				var c = classes[_g];
				++_g;
				rules.push({ c : c, s : this.s, imp : false});
			}
			if(this.simp != null) {
				var _g1 = 0;
				while(_g1 < classes.length) {
					var c1 = classes[_g1];
					++_g1;
					rules.push({ c : c1, s : this.simp, imp : true});
				}
			}
		}
		return rules;
	}
	,parseClasses: function(css) {
		this.css = css;
		this.pos = 0;
		this.tokens = [];
		var c = this.readClasses();
		this.expect(haxe_ui_styles_Token.TEof);
		return c;
	}
	,readClasses: function() {
		var classes = [];
		while(true) {
			this.spacesTokens = true;
			this.isToken(haxe_ui_styles_Token.TSpaces);
			var c = this.readClass(null);
			this.spacesTokens = false;
			if(c == null) {
				break;
			}
			this.updateClass(c);
			classes.push(c);
			if(!this.isToken(haxe_ui_styles_Token.TComma)) {
				break;
			}
		}
		if(classes.length == 0) {
			this.unexpected(this.readToken());
		}
		return classes;
	}
	,updateClass: function(c) {
		var _g = c.node;
		switch(_g) {
		case "div":
			c.node = "box";
			break;
		case "h1":case "h2":case "h3":case "h4":
			c.pseudoClass = c.node;
			c.node = "label";
			break;
		case "span":
			c.node = "label";
			break;
		}
		if(c.parent != null) {
			this.updateClass(c.parent);
		}
	}
	,readClass: function(parent) {
		var c = new haxe_ui_styles_CssClass();
		c.parent = parent;
		var def = false;
		var last = null;
		_hx_loop1: while(true) {
			var t = this.readToken();
			if(last == null) {
				switch(t._hx_index) {
				case 0:
					var i = t.i;
					c.node = i;
					def = true;
					break;
				case 4:case 5:case 15:
					last = t;
					break;
				case 9:case 10:case 13:
					this.tokens.push(t);
					break _hx_loop1;
				case 16:
					if(def) {
						return this.readClass(c);
					} else {
						return null;
					}
					break;
				case 18:
					def = true;
					break;
				default:
					this.unexpected(t);
				}
			} else {
				switch(t._hx_index) {
				case 0:
					var i1 = t.i;
					switch(last._hx_index) {
					case 4:
						c.pseudoClass = i1;
						def = true;
						break;
					case 5:
						c.id = i1;
						def = true;
						break;
					case 15:
						c.className = i1;
						def = true;
						break;
					default:
						throw new js__$Boot_HaxeError("assert");
					}
					last = null;
					break;
				case 10:
					break _hx_loop1;
				default:
					this.unexpected(t);
				}
			}
		}
		if(def) {
			return c;
		} else {
			return parent;
		}
	}
	,readIdent: function() {
		var t = this.readToken();
		if(t._hx_index == 0) {
			var i = t.i;
			return i;
		} else {
			return this.unexpected(t);
		}
	}
	,readValue: function(opt) {
		var t = this.readToken();
		var v;
		switch(t._hx_index) {
		case 0:
			var i = t.i;
			v = haxe_ui_styles_Value.VIdent(i);
			break;
		case 1:
			var s = t.s;
			v = haxe_ui_styles_Value.VString(s);
			break;
		case 2:
			var i1 = t.i;
			v = this.readValueUnit(i1,i1);
			break;
		case 3:
			var f = t.f;
			v = this.readValueUnit(f,null);
			break;
		case 5:
			v = haxe_ui_styles_Value.VHex(this.readHex());
			break;
		case 17:
			v = haxe_ui_styles_Value.VSlash;
			break;
		default:
			if(!opt) {
				this.unexpected(t);
			}
			this.tokens.push(t);
			v = null;
		}
		if(v != null) {
			v = this.readValueNext(v);
		}
		return v;
	}
	,readHex: function() {
		var start = this.pos;
		while(true) {
			var c = this.css.charCodeAt(this.pos++);
			if(c >= 65 && c <= 70 || c >= 97 && c <= 102 || c >= 48 && c <= 57) {
				continue;
			}
			this.pos--;
			break;
		}
		return HxOverrides.substr(this.css,start,this.pos - start);
	}
	,readValueUnit: function(f,i) {
		var t = this.readToken();
		switch(t._hx_index) {
		case 0:
			var i1 = t.i;
			return haxe_ui_styles_Value.VUnit(f,i1);
		case 11:
			return haxe_ui_styles_Value.VUnit(f,"%");
		default:
			this.tokens.push(t);
			if(i != null) {
				return haxe_ui_styles_Value.VInt(i);
			} else {
				return haxe_ui_styles_Value.VFloat(f);
			}
		}
	}
	,readValueNext: function(v) {
		var t = this.readToken();
		switch(t._hx_index) {
		case 6:
			if(v._hx_index == 0) {
				var i = v.i;
				if(i == "url") {
					return this.readValueNext(haxe_ui_styles_Value.VCall("url",[haxe_ui_styles_Value.VString(this.readUrl())]));
				} else {
					var args;
					var _g = this.readValue();
					if(_g._hx_index == 6) {
						var l = _g.l;
						args = l;
					} else {
						var x = _g;
						args = [x];
					}
					this.expect(haxe_ui_styles_Token.TPClose);
					return this.readValueNext(haxe_ui_styles_Value.VCall(i,args));
				}
			} else {
				this.tokens.push(t);
				return v;
			}
			break;
		case 8:
			var t1 = this.readToken();
			if(t1._hx_index == 0) {
				var i1 = t1.i;
				return haxe_ui_styles_Value.VLabel(i1,v);
			} else {
				return this.unexpected(t1);
			}
			break;
		case 9:
			return this.loopComma(v,this.readValue());
		default:
			this.tokens.push(t);
			var v2 = this.readValue(true);
			if(v2 == null) {
				return v;
			} else {
				return this.loopNext(v,v2);
			}
		}
	}
	,loopNext: function(v,v2) {
		switch(v2._hx_index) {
		case 6:
			var l = v2.l;
			l[0] = this.loopNext(v,l[0]);
			return v2;
		case 7:
			var l1 = v2.l;
			l1.unshift(v);
			return v2;
		case 9:
			var v21 = v2.val;
			var lab = v2.v;
			return haxe_ui_styles_Value.VLabel(lab,this.loopNext(v,v21));
		default:
			return haxe_ui_styles_Value.VGroup([v,v2]);
		}
	}
	,loopComma: function(v,v2) {
		switch(v2._hx_index) {
		case 6:
			var l = v2.l;
			l.unshift(v);
			return v2;
		case 9:
			var v21 = v2.val;
			var lab = v2.v;
			return haxe_ui_styles_Value.VLabel(lab,this.loopComma(v,v21));
		default:
			return haxe_ui_styles_Value.VList([v,v2]);
		}
	}
	,isSpace: function(c) {
		if(!(c == 32 || c == 10 || c == 13)) {
			return c == 9;
		} else {
			return true;
		}
	}
	,isIdentChar: function(c) {
		if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 45)) {
			return c == 95;
		} else {
			return true;
		}
	}
	,isNum: function(c) {
		if(c >= 48) {
			return c <= 57;
		} else {
			return false;
		}
	}
	,next: function() {
		return this.css.charCodeAt(this.pos++);
	}
	,readUrl: function() {
		var c0 = this.css.charCodeAt(this.pos++);
		while(c0 == 32 || c0 == 10 || c0 == 13 || c0 == 9) c0 = this.css.charCodeAt(this.pos++);
		var quote = c0;
		if(quote == 39 || quote == 34) {
			this.pos--;
			var _g = this.readToken();
			if(_g._hx_index == 1) {
				var s = _g.s;
				var c01 = this.css.charCodeAt(this.pos++);
				while(c01 == 32 || c01 == 10 || c01 == 13 || c01 == 9) c01 = this.css.charCodeAt(this.pos++);
				if(c01 != 41) {
					throw new js__$Boot_HaxeError("Invalid char " + c01);
				}
				return s;
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
		}
		var start = this.pos - 1;
		while(c0 == c0) {
			c0 = this.css.charCodeAt(this.pos++);
			if(c0 == 41) {
				break;
			}
		}
		return StringTools.trim(HxOverrides.substr(this.css,start,this.pos - start - 1));
	}
	,readToken: function() {
		var t = this.tokens.pop();
		if(t != null) {
			return t;
		}
		while(true) {
			var c = this.css.charCodeAt(this.pos++);
			if(c != c) {
				return haxe_ui_styles_Token.TEof;
			}
			if(c == 32 || c == 10 || c == 13 || c == 9) {
				if(this.spacesTokens) {
					while(true) {
						var c1 = this.css.charCodeAt(this.pos++);
						if(!(c1 == 32 || c1 == 10 || c1 == 13 || c1 == 9)) {
							break;
						}
					}
					this.pos--;
					return haxe_ui_styles_Token.TSpaces;
				}
				continue;
			}
			if(c >= 48 && c <= 57 || c == 45) {
				var i = 0;
				var neg = false;
				if(c == 45) {
					c = 48;
					neg = true;
				}
				while(true) {
					i = i * 10 + (c - 48);
					c = this.css.charCodeAt(this.pos++);
					if(!(c >= 48 && c <= 57)) {
						break;
					}
				}
				if(c == 46) {
					var f = i;
					var k = 0.1;
					while(true) {
						c = this.css.charCodeAt(this.pos++);
						var c2 = c;
						if(!(c2 >= 48 && c2 <= 57)) {
							break;
						}
						f += (c - 48) * k;
						k *= 0.1;
					}
					this.pos--;
					return haxe_ui_styles_Token.TFloat(neg ? -f : f);
				}
				this.pos--;
				return haxe_ui_styles_Token.TInt(neg ? -i : i);
			}
			if(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 45 || c == 95) {
				var pos = this.pos - 1;
				while(true) {
					c = this.css.charCodeAt(this.pos++);
					if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 45 || c == 95 || c >= 48 && c <= 57)) {
						break;
					}
				}
				this.pos--;
				return haxe_ui_styles_Token.TIdent(HxOverrides.substr(this.css,pos,this.pos - pos));
			}
			switch(c) {
			case 33:
				return haxe_ui_styles_Token.TExclam;
			case 35:
				return haxe_ui_styles_Token.TSharp;
			case 37:
				return haxe_ui_styles_Token.TPercent;
			case 34:case 39:
				var pos1 = this.pos;
				var k1;
				while(true) {
					k1 = this.css.charCodeAt(this.pos++);
					if(!(k1 != c)) {
						break;
					}
					if(k1 != k1) {
						throw new js__$Boot_HaxeError("Unclosed string constant");
					}
					if(k1 == 92) {
						throw new js__$Boot_HaxeError("todo");
					}
				}
				return haxe_ui_styles_Token.TString(HxOverrides.substr(this.css,pos1,this.pos - pos1 - 1));
			case 40:
				return haxe_ui_styles_Token.TPOpen;
			case 41:
				return haxe_ui_styles_Token.TPClose;
			case 42:
				return haxe_ui_styles_Token.TStar;
			case 44:
				return haxe_ui_styles_Token.TComma;
			case 46:
				return haxe_ui_styles_Token.TDot;
			case 47:
				c = this.css.charCodeAt(this.pos++);
				if(c != 42) {
					this.pos--;
					return haxe_ui_styles_Token.TSlash;
				}
				while(true) {
					while(true) {
						c = this.css.charCodeAt(this.pos++);
						if(!(c != 42)) {
							break;
						}
						if(c != c) {
							throw new js__$Boot_HaxeError("Unclosed comment");
						}
					}
					c = this.css.charCodeAt(this.pos++);
					if(c == 47) {
						break;
					}
					if(c != c) {
						throw new js__$Boot_HaxeError("Unclosed comment");
					}
				}
				return this.readToken();
			case 58:
				return haxe_ui_styles_Token.TDblDot;
			case 59:
				return haxe_ui_styles_Token.TSemicolon;
			case 123:
				return haxe_ui_styles_Token.TBrOpen;
			case 125:
				return haxe_ui_styles_Token.TBrClose;
			default:
			}
			this.pos--;
			throw new js__$Boot_HaxeError("Invalid char " + this.css.charAt(this.pos));
		}
	}
	,__class__: haxe_ui_styles_Parser
};
var haxe_ui_styles_Style = function() {
};
$hxClasses["haxe.ui.styles.Style"] = haxe_ui_styles_Style;
haxe_ui_styles_Style.__name__ = ["haxe","ui","styles","Style"];
haxe_ui_styles_Style.prototype = {
	apply: function(s) {
		if(s.cursor != null) {
			this.cursor = s.cursor;
		}
		if(s.hidden != null) {
			this.hidden = s.hidden;
		}
		if(s.autoWidth != null) {
			this.autoWidth = s.autoWidth;
		}
		if(s.autoHeight != null) {
			this.autoHeight = s.autoHeight;
		}
		if(s.verticalSpacing != null) {
			this.verticalSpacing = s.verticalSpacing;
		}
		if(s.horizontalSpacing != null) {
			this.horizontalSpacing = s.horizontalSpacing;
		}
		if(s.offsetLeft != null) {
			this.offsetLeft = s.offsetLeft;
		}
		if(s.offsetTop != null) {
			this.offsetTop = s.offsetTop;
		}
		if(s.width != null) {
			this.width = s.width;
			this.autoWidth = false;
		}
		if(s.height != null) {
			this.height = s.height;
			this.autoHeight = false;
		}
		if(s.percentWidth != null) {
			this.percentWidth = s.percentWidth;
			this.autoWidth = false;
		}
		if(s.percentHeight != null) {
			this.percentHeight = s.percentHeight;
			this.autoHeight = false;
		}
		if(s.paddingTop != null) {
			this.paddingTop = s.paddingTop;
		}
		if(s.paddingLeft != null) {
			this.paddingLeft = s.paddingLeft;
		}
		if(s.paddingRight != null) {
			this.paddingRight = s.paddingRight;
		}
		if(s.paddingBottom != null) {
			this.paddingBottom = s.paddingBottom;
		}
		if(s.marginTop != null) {
			this.marginTop = s.marginTop;
		}
		if(s.marginLeft != null) {
			this.marginLeft = s.marginLeft;
		}
		if(s.marginRight != null) {
			this.marginRight = s.marginRight;
		}
		if(s.marginBottom != null) {
			this.marginBottom = s.marginBottom;
		}
		if(s.color != null) {
			this.color = s.color;
		}
		if(s.backgroundColor != null) {
			this.backgroundColor = s.backgroundColor;
			this.backgroundColorEnd = null;
		}
		if(s.backgroundColorEnd != null) {
			this.backgroundColorEnd = s.backgroundColorEnd;
		}
		if(s.backgroundGradientStyle != null) {
			this.backgroundGradientStyle = s.backgroundGradientStyle;
		}
		if(s.backgroundOpacity != null) {
			this.backgroundOpacity = s.backgroundOpacity;
		}
		if(s.backgroundImage != null) {
			this.backgroundImage = s.backgroundImage;
		}
		if(s.backgroundImageRepeat != null) {
			this.backgroundImageRepeat = s.backgroundImageRepeat;
		}
		if(s.backgroundImageClipTop != null) {
			this.backgroundImageClipTop = s.backgroundImageClipTop;
		}
		if(s.backgroundImageClipLeft != null) {
			this.backgroundImageClipLeft = s.backgroundImageClipLeft;
		}
		if(s.backgroundImageClipBottom != null) {
			this.backgroundImageClipBottom = s.backgroundImageClipBottom;
		}
		if(s.backgroundImageClipRight != null) {
			this.backgroundImageClipRight = s.backgroundImageClipRight;
		}
		if(s.backgroundImageSliceTop != null) {
			this.backgroundImageSliceTop = s.backgroundImageSliceTop;
		}
		if(s.backgroundImageSliceLeft != null) {
			this.backgroundImageSliceLeft = s.backgroundImageSliceLeft;
		}
		if(s.backgroundImageSliceBottom != null) {
			this.backgroundImageSliceBottom = s.backgroundImageSliceBottom;
		}
		if(s.backgroundImageSliceRight != null) {
			this.backgroundImageSliceRight = s.backgroundImageSliceRight;
		}
		if(s.borderColor != null) {
			this.borderColor = s.borderColor;
		}
		if(s.borderTopColor != null) {
			this.borderTopColor = s.borderTopColor;
		}
		if(s.borderLeftColor != null) {
			this.borderLeftColor = s.borderLeftColor;
		}
		if(s.borderBottomColor != null) {
			this.borderBottomColor = s.borderBottomColor;
		}
		if(s.borderRightColor != null) {
			this.borderRightColor = s.borderRightColor;
		}
		if(s.borderSize != null) {
			this.borderSize = s.borderSize;
		}
		if(s.borderTopSize != null) {
			this.borderTopSize = s.borderTopSize;
		}
		if(s.borderLeftSize != null) {
			this.borderLeftSize = s.borderLeftSize;
		}
		if(s.borderBottomSize != null) {
			this.borderBottomSize = s.borderBottomSize;
		}
		if(s.borderRightSize != null) {
			this.borderRightSize = s.borderRightSize;
		}
		if(s.borderRadius != null) {
			this.borderRadius = s.borderRadius;
		}
		if(s.borderOpacity != null) {
			this.borderOpacity = s.borderOpacity;
		}
		if(s.filter != null) {
			this.filter = s.filter.slice();
		}
		if(s.icon != null) {
			this.icon = s.icon;
		}
		if(s.iconPosition != null) {
			this.iconPosition = s.iconPosition;
		}
		if(s.horizontalAlign != null) {
			this.horizontalAlign = s.horizontalAlign;
		}
		if(s.verticalAlign != null) {
			this.verticalAlign = s.verticalAlign;
		}
		if(s.textAlign != null) {
			this.textAlign = s.textAlign;
		}
		if(s.opacity != null) {
			this.opacity = s.opacity;
		}
		if(s.clip != null) {
			this.clip = s.clip;
		}
		if(s.native != null) {
			this.native = s.native;
		}
		if(s.fontName != null) {
			this.fontName = s.fontName;
		}
		if(s.fontSize != null) {
			this.fontSize = s.fontSize;
		}
		if(s.fontBold != null) {
			this.fontBold = s.fontBold;
		}
		if(s.fontUnderline != null) {
			this.fontUnderline = s.fontUnderline;
		}
		if(s.fontItalic != null) {
			this.fontItalic = s.fontItalic;
		}
		this.assignNulls();
	}
	,equalTo: function(s) {
		if(s.cursor != this.cursor) {
			return false;
		}
		if(s.hidden != this.hidden) {
			return false;
		}
		if(s.autoWidth != this.autoWidth) {
			return false;
		}
		if(s.autoHeight != this.autoHeight) {
			return false;
		}
		if(s.verticalSpacing != this.verticalSpacing) {
			return false;
		}
		if(s.horizontalSpacing != this.horizontalSpacing) {
			return false;
		}
		if(s.offsetLeft != this.offsetLeft) {
			return false;
		}
		if(s.offsetTop != this.offsetTop) {
			return false;
		}
		if(s.width != this.width) {
			return false;
		}
		if(s.height != this.height) {
			return false;
		}
		if(s.percentWidth != this.percentWidth) {
			return false;
		}
		if(s.percentHeight != this.percentHeight) {
			return false;
		}
		if(s.paddingTop != this.paddingTop) {
			return false;
		}
		if(s.paddingLeft != this.paddingLeft) {
			return false;
		}
		if(s.paddingRight != this.paddingRight) {
			return false;
		}
		if(s.paddingBottom != this.paddingBottom) {
			return false;
		}
		if(s.marginTop != this.marginTop) {
			return false;
		}
		if(s.marginLeft != this.marginLeft) {
			return false;
		}
		if(s.marginRight != this.marginRight) {
			return false;
		}
		if(s.marginBottom != this.marginBottom) {
			return false;
		}
		if(s.color != this.color) {
			return false;
		}
		if(s.backgroundColor != this.backgroundColor) {
			return false;
		}
		if(s.backgroundColorEnd != this.backgroundColorEnd) {
			return false;
		}
		if(s.backgroundGradientStyle != this.backgroundGradientStyle) {
			return false;
		}
		if(s.backgroundOpacity != this.backgroundOpacity) {
			return false;
		}
		if(s.backgroundImage != this.backgroundImage) {
			return false;
		}
		if(s.backgroundImageRepeat != this.backgroundImageRepeat) {
			return false;
		}
		if(s.backgroundImageClipTop != this.backgroundImageClipTop) {
			return false;
		}
		if(s.backgroundImageClipLeft != this.backgroundImageClipLeft) {
			return false;
		}
		if(s.backgroundImageClipBottom != this.backgroundImageClipBottom) {
			return false;
		}
		if(s.backgroundImageClipRight != this.backgroundImageClipRight) {
			return false;
		}
		if(s.backgroundImageSliceTop != this.backgroundImageSliceTop) {
			return false;
		}
		if(s.backgroundImageSliceLeft != this.backgroundImageSliceLeft) {
			return false;
		}
		if(s.backgroundImageSliceBottom != this.backgroundImageSliceBottom) {
			return false;
		}
		if(s.backgroundImageSliceRight != this.backgroundImageSliceRight) {
			return false;
		}
		if(s.borderColor != this.borderColor) {
			return false;
		}
		if(s.borderTopColor != this.borderTopColor) {
			return false;
		}
		if(s.borderLeftColor != this.borderLeftColor) {
			return false;
		}
		if(s.borderBottomColor != this.borderBottomColor) {
			return false;
		}
		if(s.borderRightColor != this.borderRightColor) {
			return false;
		}
		if(s.borderSize != this.borderSize) {
			return false;
		}
		if(s.borderTopSize != this.borderTopSize) {
			return false;
		}
		if(s.borderLeftSize != this.borderLeftSize) {
			return false;
		}
		if(s.borderBottomSize != this.borderBottomSize) {
			return false;
		}
		if(s.borderRightSize != this.borderRightSize) {
			return false;
		}
		if(s.borderRadius != this.borderRadius) {
			return false;
		}
		if(s.borderOpacity != this.borderOpacity) {
			return false;
		}
		if(s.filter != this.filter) {
			return false;
		}
		if(s.icon != this.icon) {
			return false;
		}
		if(s.iconPosition != this.iconPosition) {
			return false;
		}
		if(s.horizontalAlign != this.horizontalAlign) {
			return false;
		}
		if(s.verticalAlign != this.verticalAlign) {
			return false;
		}
		if(s.textAlign != this.textAlign) {
			return false;
		}
		if(s.opacity != this.opacity) {
			return false;
		}
		if(s.clip != this.clip) {
			return false;
		}
		if(s.native != this.native) {
			return false;
		}
		if(s.fontName != this.fontName) {
			return false;
		}
		if(s.fontSize != this.fontSize) {
			return false;
		}
		if(s.fontBold != this.fontBold) {
			return false;
		}
		if(s.fontUnderline != this.fontUnderline) {
			return false;
		}
		if(s.fontItalic != this.fontItalic) {
			return false;
		}
		return true;
	}
	,assignNulls: function() {
		if(this.color == -2147483648) {
			this.color = null;
		}
		if(this.backgroundColor == -2147483648) {
			this.backgroundColor = null;
			this.backgroundColorEnd = null;
		}
		if(this.backgroundColorEnd == -2147483648) {
			this.backgroundColor = null;
			this.backgroundColorEnd = null;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.borderSize) == -2147483648) {
			this.borderSize = null;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.borderTopSize) == -2147483648) {
			this.borderTopSize = null;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.borderLeftSize) == -2147483648) {
			this.borderLeftSize = null;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.borderBottomSize) == -2147483648) {
			this.borderBottomSize = null;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.borderRightSize) == -2147483648) {
			this.borderRightSize = null;
		}
		if(haxe_ui_util__$Variant_Variant_$Impl_$.toInt(this.borderRadius) == -2147483648) {
			this.borderRadius = null;
		}
		if(this.borderColor == -2147483648) {
			this.borderColor = null;
		}
		if(this.borderTopColor == -2147483648) {
			this.borderTopColor = null;
		}
		if(this.borderLeftColor == -2147483648) {
			this.borderLeftColor = null;
		}
		if(this.borderBottomColor == -2147483648) {
			this.borderBottomColor = null;
		}
		if(this.borderRightColor == -2147483648) {
			this.borderRightColor = null;
		}
		if(this.filter != null && this.filter[0] == "none") {
			this.filter = null;
		}
		if(this.icon == "none") {
			this.icon = null;
		}
	}
	,set_padding: function(value) {
		this.paddingTop = this.paddingLeft = this.paddingRight = this.paddingBottom = value;
		return value;
	}
	,margin: function(v) {
		this.marginTop = v;
		this.marginLeft = v;
		this.marginRight = v;
		this.marginBottom = v;
	}
	,__class__: haxe_ui_styles_Style
	,__properties__: {set_padding:"set_padding"}
};
var haxe_ui_themes_Theme = function() {
	this.styles = [];
};
$hxClasses["haxe.ui.themes.Theme"] = haxe_ui_themes_Theme;
haxe_ui_themes_Theme.__name__ = ["haxe","ui","themes","Theme"];
haxe_ui_themes_Theme.prototype = {
	__class__: haxe_ui_themes_Theme
};
var haxe_ui_themes_ThemeManager = function() {
	this._themes = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.ThemeManager"] = haxe_ui_themes_ThemeManager;
haxe_ui_themes_ThemeManager.__name__ = ["haxe","ui","themes","ThemeManager"];
haxe_ui_themes_ThemeManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_themes_ThemeManager.get_instance = function() {
	if(haxe_ui_themes_ThemeManager._instance == null) {
		haxe_ui_themes_ThemeManager._instance = new haxe_ui_themes_ThemeManager();
	}
	return haxe_ui_themes_ThemeManager._instance;
};
haxe_ui_themes_ThemeManager.prototype = {
	getTheme: function(themeName) {
		var _this = this._themes;
		var theme = __map_reserved[themeName] != null ? _this.getReserved(themeName) : _this.h[themeName];
		if(theme == null) {
			theme = new haxe_ui_themes_Theme();
			var _this1 = this._themes;
			if(__map_reserved[themeName] != null) {
				_this1.setReserved(themeName,theme);
			} else {
				_this1.h[themeName] = theme;
			}
		}
		return theme;
	}
	,addStyleResource: function(themeName,resourceId) {
		this.getTheme(themeName).styles.push(resourceId);
	}
	,applyTheme: function(themeName) {
		this.applyThemeStyles("global");
		this.applyThemeStyles(themeName);
	}
	,applyThemeStyles: function(themeName) {
		var _this = this._themes;
		var theme = __map_reserved[themeName] != null ? _this.getReserved(themeName) : _this.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.applyThemeStyles(theme.parent);
		}
		var styles = theme.styles;
		styles.reverse();
		var _g = 0;
		while(_g < styles.length) {
			var s = styles[_g];
			++_g;
			var css = haxe_ui_Toolkit.get_assets().getText(s);
			if(css != null) {
				haxe_ui_Toolkit.styleSheet.addRules(css);
			} else {
				haxe_Log.trace("WARNING: could not find " + s,{ fileName : "haxe/ui/themes/ThemeManager.hx", lineNumber : 59, className : "haxe.ui.themes.ThemeManager", methodName : "applyThemeStyles"});
			}
		}
	}
	,__class__: haxe_ui_themes_ThemeManager
};
var haxe_ui_util_CallStackHelper = function() { };
$hxClasses["haxe.ui.util.CallStackHelper"] = haxe_ui_util_CallStackHelper;
haxe_ui_util_CallStackHelper.__name__ = ["haxe","ui","util","CallStackHelper"];
haxe_ui_util_CallStackHelper.traceCallStack = function() {
	var arr = haxe_CallStack.callStack();
	if(arr == null) {
		haxe_Log.trace("Callstack is null!",{ fileName : "haxe/ui/util/CallStackHelper.hx", lineNumber : 9, className : "haxe.ui.util.CallStackHelper", methodName : "traceCallStack"});
		return;
	}
	haxe_Log.trace(haxe_CallStack.toString(arr),{ fileName : "haxe/ui/util/CallStackHelper.hx", lineNumber : 12, className : "haxe.ui.util.CallStackHelper", methodName : "traceCallStack"});
	haxe_Log.trace(">>>>>>>>>>>>>>>>>>>>>>>>>>>> END >>>>>>>>>>>>>>>>>>>>>>>>>>>>",{ fileName : "haxe/ui/util/CallStackHelper.hx", lineNumber : 13, className : "haxe.ui.util.CallStackHelper", methodName : "traceCallStack"});
};
haxe_ui_util_CallStackHelper.traceExceptionStack = function() {
	var arr = haxe_CallStack.exceptionStack();
	if(arr == null) {
		haxe_Log.trace("Callstack is null!",{ fileName : "haxe/ui/util/CallStackHelper.hx", lineNumber : 19, className : "haxe.ui.util.CallStackHelper", methodName : "traceExceptionStack"});
		return;
	}
	haxe_Log.trace(haxe_CallStack.toString(arr),{ fileName : "haxe/ui/util/CallStackHelper.hx", lineNumber : 22, className : "haxe.ui.util.CallStackHelper", methodName : "traceExceptionStack"});
	haxe_Log.trace(">>>>>>>>>>>>>>>>>>>>>>>>>>>> END >>>>>>>>>>>>>>>>>>>>>>>>>>>>",{ fileName : "haxe/ui/util/CallStackHelper.hx", lineNumber : 23, className : "haxe.ui.util.CallStackHelper", methodName : "traceExceptionStack"});
};
haxe_ui_util_CallStackHelper.getCallStackString = function() {
	var arr = haxe_CallStack.callStack();
	if(arr == null) {
		throw new js__$Boot_HaxeError("Callstack is null!");
	}
	return haxe_CallStack.toString(arr);
};
var haxe_ui_util_CallbackMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.CallbackMap"] = haxe_ui_util_CallbackMap;
haxe_ui_util_CallbackMap.__name__ = ["haxe","ui","util","CallbackMap"];
haxe_ui_util_CallbackMap.prototype = {
	add: function(key,callback) {
		if(callback == null) {
			return false;
		}
		var b = false;
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(callback);
			var _this1 = this._map;
			if(__map_reserved[key] != null) {
				_this1.setReserved(key,arr);
			} else {
				_this1.h[key] = arr;
			}
			b = true;
		} else if(arr.contains(callback) == false) {
			arr.push(callback);
		}
		return b;
	}
	,remove: function(key,callback) {
		var b = false;
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr != null) {
			arr.remove(callback);
			if(arr.get_length() == 0) {
				this._map.remove(key);
				b = true;
			}
		}
		return b;
	}
	,removeAll: function(key) {
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr != null) {
			while(arr.get_length() > 0) arr.remove(arr.get(0));
			this._map.remove(key);
		}
	}
	,invoke: function(key,param) {
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr != null) {
			arr = arr.copy();
			var fn = arr.iterator();
			while(fn.hasNext()) {
				var fn1 = fn.next();
				fn1(param);
			}
		}
	}
	,invokeAndRemove: function(key,param) {
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr != null) {
			arr = arr.copy();
			this.removeAll(key);
			var fn = arr.iterator();
			while(fn.hasNext()) {
				var fn1 = fn.next();
				fn1(param);
			}
		}
	}
	,count: function(key) {
		var n = 0;
		var _this = this._map;
		var arr = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,__class__: haxe_ui_util_CallbackMap
};
var haxe_ui_util__$Color_Color_$Impl_$ = {};
$hxClasses["haxe.ui.util._Color.Color_Impl_"] = haxe_ui_util__$Color_Color_$Impl_$;
haxe_ui_util__$Color_Color_$Impl_$.__name__ = ["haxe","ui","util","_Color","Color_Impl_"];
haxe_ui_util__$Color_Color_$Impl_$.fromString = function(s) {
	if(StringTools.startsWith(s,"0x") || StringTools.startsWith(s,"#")) {
		return Std.parseInt("0x" + s.substring(s.length - 6));
	}
	switch(s) {
	case "aqua":
		return 65535;
	case "black":
		return 0;
	case "blue":
		return 255;
	case "fuchsia":
		return 16711935;
	case "green":
		return 32768;
	case "gray":case "grey":
		return 8421504;
	case "lime":
		return 65280;
	case "maroon":
		return 8388608;
	case "navy":
		return 128;
	case "olive":
		return 8421376;
	case "purple":
		return 8388736;
	case "red":
		return 16711680;
	case "silver":
		return 12632256;
	case "teal":
		return 32896;
	case "white":
		return 16777215;
	case "yellow":
		return 16776960;
	default:
		return 0;
	}
};
haxe_ui_util__$Color_Color_$Impl_$.toInt = function(this1) {
	return this1;
};
haxe_ui_util__$Color_Color_$Impl_$.or = function(a,b) {
	return haxe_ui_util__$Color_Color_$Impl_$.toInt(a) | haxe_ui_util__$Color_Color_$Impl_$.toInt(b);
};
var haxe_ui_util_ColorUtil = function() { };
$hxClasses["haxe.ui.util.ColorUtil"] = haxe_ui_util_ColorUtil;
haxe_ui_util_ColorUtil.__name__ = ["haxe","ui","util","ColorUtil"];
haxe_ui_util_ColorUtil.buildColorArray = function(startColor,endColor,size) {
	var array = [];
	var r1 = startColor >> 16 & 255;
	var g1 = startColor >> 8 & 255;
	var b1 = startColor & 255;
	var r2 = endColor >> 16 & 255;
	var g2 = endColor >> 8 & 255;
	var b2 = endColor & 255;
	var rd = r2 - r1;
	var gd = g2 - g1;
	var bd = b2 - b1;
	var ri = rd / (size - 1);
	var gi = gd / (size - 1);
	var bi = bd / (size - 1);
	var r = r1;
	var g = g1;
	var b = b1;
	var _g1 = 0;
	var _g = size;
	while(_g1 < _g) {
		var n = _g1++;
		var c = Math.round(r) << 16 | Math.round(g) << 8 | Math.round(b);
		array.push(c);
		r += ri;
		g += gi;
		b += bi;
	}
	return array;
};
haxe_ui_util_ColorUtil.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1,s.length);
	} else if(StringTools.startsWith(s,"0x")) {
		s = s.substring(2,s.length);
	}
	return Std.parseInt("0xFF" + s);
};
haxe_ui_util_ColorUtil.color = function(r,g,b) {
	return Math.round(r) << 16 | Math.round(g) << 8 | Math.round(b);
};
haxe_ui_util_ColorUtil.r = function(c) {
	return c >> 16 & 255;
};
haxe_ui_util_ColorUtil.g = function(c) {
	return c >> 8 & 255;
};
haxe_ui_util_ColorUtil.b = function(c) {
	return c & 255;
};
var haxe_ui_util_ComponentUtil = function() { };
$hxClasses["haxe.ui.util.ComponentUtil"] = haxe_ui_util_ComponentUtil;
haxe_ui_util_ComponentUtil.__name__ = ["haxe","ui","util","ComponentUtil"];
haxe_ui_util_ComponentUtil.getDepth = function(target) {
	var count = 0;
	while(target.parentComponent != null) {
		target = target.parentComponent;
		++count;
	}
	return count;
};
var haxe_ui_util_EventMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.EventMap"] = haxe_ui_util_EventMap;
haxe_ui_util_EventMap.__name__ = ["haxe","ui","util","EventMap"];
haxe_ui_util_EventMap.prototype = {
	keys: function() {
		return this._map.keys();
	}
	,add: function(type,listener) {
		var b = false;
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(listener);
			var _this1 = this._map;
			if(__map_reserved[type] != null) {
				_this1.setReserved(type,arr);
			} else {
				_this1.h[type] = arr;
			}
			b = true;
		} else if(arr.contains(listener) == false) {
			arr.push(listener);
		}
		return b;
	}
	,remove: function(type,listener) {
		var b = false;
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr != null) {
			arr.remove(listener);
			if(arr.get_length() == 0) {
				this._map.remove(type);
				b = true;
			}
		}
		return b;
	}
	,invoke: function(type,event,target) {
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr != null) {
			arr = arr.copy();
			var fn = arr.iterator();
			while(fn.hasNext()) {
				var fn1 = fn.next();
				var c = event.clone();
				c.target = target;
				fn1(c);
			}
		}
	}
	,listenerCount: function(type) {
		var n = 0;
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,listeners: function(type) {
		var _this = this._map;
		var arr = __map_reserved[type] != null ? _this.getReserved(type) : _this.h[type];
		if(arr == null) {
			return null;
		}
		return arr;
	}
	,__class__: haxe_ui_util_EventMap
};
var haxe_ui_util_FunctionArray = function(array) {
	if(array == null) {
		this._array = [];
	} else {
		this._array = array;
	}
};
$hxClasses["haxe.ui.util.FunctionArray"] = haxe_ui_util_FunctionArray;
haxe_ui_util_FunctionArray.__name__ = ["haxe","ui","util","FunctionArray"];
haxe_ui_util_FunctionArray.prototype = {
	get: function(index) {
		return this._array[index];
	}
	,get_length: function() {
		return this._array.length;
	}
	,push: function(x) {
		return this._array.push(x);
	}
	,pop: function() {
		return this._array.pop();
	}
	,indexOf: function(x,fromIndex) {
		if(fromIndex == null) {
			fromIndex = 0;
		}
		return this._array.indexOf(x,fromIndex);
	}
	,remove: function(x) {
		return HxOverrides.remove(this._array,x);
	}
	,contains: function(x) {
		return this.indexOf(x) != -1;
	}
	,iterator: function() {
		return HxOverrides.iter(this._array);
	}
	,copy: function() {
		return new haxe_ui_util_FunctionArray(this._array.slice());
	}
	,toString: function() {
		var s = "[";
		var iter = this.iterator();
		while(iter.hasNext()) {
			s += Std.string(iter.next());
			if(iter.hasNext()) {
				s += ", ";
			}
		}
		s += "]";
		return s;
	}
	,__class__: haxe_ui_util_FunctionArray
	,__properties__: {get_length:"get_length"}
};
var haxe_ui_util_MathUtil = function() { };
$hxClasses["haxe.ui.util.MathUtil"] = haxe_ui_util_MathUtil;
haxe_ui_util_MathUtil.__name__ = ["haxe","ui","util","MathUtil"];
haxe_ui_util_MathUtil.distance = function(x1,y1,x2,y2) {
	return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
};
var haxe_ui_util_Size = function(width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.util.Size"] = haxe_ui_util_Size;
haxe_ui_util_Size.__name__ = ["haxe","ui","util","Size"];
haxe_ui_util_Size.prototype = {
	toString: function() {
		return "[" + this.width + "x" + this.height + "]";
	}
	,__class__: haxe_ui_util_Size
};
var haxe_ui_util_Slice9 = function() { };
$hxClasses["haxe.ui.util.Slice9"] = haxe_ui_util_Slice9;
haxe_ui_util_Slice9.__name__ = ["haxe","ui","util","Slice9"];
haxe_ui_util_Slice9.buildRects = function(w,h,bitmapWidth,bitmapHeight,slice) {
	var srcRects = haxe_ui_util_Slice9.buildSrcRects(bitmapWidth,bitmapHeight,slice);
	var dstRects = haxe_ui_util_Slice9.buildDstRects(w,h,srcRects);
	return { src : srcRects, dst : dstRects};
};
haxe_ui_util_Slice9.buildSrcRects = function(bitmapWidth,bitmapHeight,slice) {
	var x1 = slice.left;
	var y1 = slice.top;
	var x2 = slice.get_right();
	var y2 = slice.get_bottom();
	var srcRects = [];
	srcRects.push(new haxe_ui_util_Rectangle(0,0,x1,y1));
	srcRects.push(new haxe_ui_util_Rectangle(x1,0,x2 - x1,y1));
	srcRects.push(new haxe_ui_util_Rectangle(x2,0,bitmapWidth - x2,y1));
	srcRects.push(new haxe_ui_util_Rectangle(0,y1,x1,y2 - y1));
	srcRects.push(new haxe_ui_util_Rectangle(x1,y1,x2 - x1,y2 - y1));
	srcRects.push(new haxe_ui_util_Rectangle(x2,y1,bitmapWidth - x2,y2 - y1));
	srcRects.push(new haxe_ui_util_Rectangle(0,y2,x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_util_Rectangle(x1,y2,x2 - x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_util_Rectangle(x2,y2,bitmapWidth - x2,bitmapHeight - y2));
	return srcRects;
};
haxe_ui_util_Slice9.buildDstRects = function(w,h,srcRects) {
	var dstRects = [];
	dstRects.push(new haxe_ui_util_Rectangle(0,0,srcRects[0].width,srcRects[0].height));
	dstRects.push(new haxe_ui_util_Rectangle(srcRects[0].width,0,w - srcRects[0].width - srcRects[2].width,srcRects[1].height));
	dstRects.push(new haxe_ui_util_Rectangle(w - srcRects[2].width,0,srcRects[2].width,srcRects[2].height));
	dstRects.push(new haxe_ui_util_Rectangle(0,srcRects[0].height,srcRects[3].width,h - srcRects[0].height - srcRects[6].height));
	dstRects.push(new haxe_ui_util_Rectangle(srcRects[3].width,srcRects[0].height,w - srcRects[3].width - srcRects[5].width,h - srcRects[1].height - srcRects[7].height));
	dstRects.push(new haxe_ui_util_Rectangle(w - srcRects[5].width,srcRects[2].height,srcRects[5].width,h - srcRects[2].height - srcRects[8].height));
	dstRects.push(new haxe_ui_util_Rectangle(0,h - srcRects[6].height,srcRects[6].width,srcRects[6].height));
	dstRects.push(new haxe_ui_util_Rectangle(srcRects[6].width,h - srcRects[7].height,w - srcRects[6].width - srcRects[8].width,srcRects[7].height));
	dstRects.push(new haxe_ui_util_Rectangle(w - srcRects[8].width,h - srcRects[8].height,srcRects[8].width,srcRects[8].height));
	return dstRects;
};
var haxe_ui_util_StringUtil = function() { };
$hxClasses["haxe.ui.util.StringUtil"] = haxe_ui_util_StringUtil;
haxe_ui_util_StringUtil.__name__ = ["haxe","ui","util","StringUtil"];
haxe_ui_util_StringUtil.capitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeHyphens = function(s) {
	var r = s;
	var n = r.indexOf("-");
	while(n != -1) {
		var before = HxOverrides.substr(r,0,n);
		var after = HxOverrides.substr(r,n + 1,r.length);
		r = before + haxe_ui_util_StringUtil.capitalizeFirstLetter(after);
		n = r.indexOf("-",n + 1);
	}
	return r;
};
haxe_ui_util_StringUtil.replaceVars = function(s,params) {
	if(params != null) {
		var k = params.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			s = StringTools.replace(s,"${" + k1 + "}",__map_reserved[k1] != null ? params.getReserved(k1) : params.h[k1]);
		}
	}
	return s;
};
var haxe_ui_util_Timer = function(delay,callback) {
	haxe_ui_backend_TimerBase.call(this,delay,callback);
};
$hxClasses["haxe.ui.util.Timer"] = haxe_ui_util_Timer;
haxe_ui_util_Timer.__name__ = ["haxe","ui","util","Timer"];
haxe_ui_util_Timer.delay = function(f,time_ms) {
	var t = null;
	t = new haxe_ui_util_Timer(time_ms,function() {
		t.stop();
		f();
	});
	return t;
};
haxe_ui_util_Timer.__super__ = haxe_ui_backend_TimerBase;
haxe_ui_util_Timer.prototype = $extend(haxe_ui_backend_TimerBase.prototype,{
	stop: function() {
		haxe_ui_backend_TimerBase.prototype.stop.call(this);
	}
	,__class__: haxe_ui_util_Timer
});
var haxe_ui_util_VariantType = $hxEnums["haxe.ui.util.VariantType"] = { __ename__ : true, __constructs__ : ["Int","Float","Unit","String","Bool","DataSource"]
	,Int: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,Float: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,Unit: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,String: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,Bool: ($_=function(s) { return {_hx_index:4,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
	,DataSource: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var haxe_ui_util__$Variant_Variant_$Impl_$ = {};
$hxClasses["haxe.ui.util._Variant.Variant_Impl_"] = haxe_ui_util__$Variant_Variant_$Impl_$;
haxe_ui_util__$Variant_Variant_$Impl_$.__name__ = ["haxe","ui","util","_Variant","Variant_Impl_"];
haxe_ui_util__$Variant_Variant_$Impl_$.__properties__ = {get_isNull:"get_isNull",get_isDataSource:"get_isDataSource",get_isBool:"get_isBool",get_isNumber:"get_isNumber",get_isUnit:"get_isUnit",get_isFloat:"get_isFloat",get_isInt:"get_isInt",get_isString:"get_isString"};
haxe_ui_util__$Variant_Variant_$Impl_$.fromString = function(s) {
	return haxe_ui_util_VariantType.String(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toString = function(this1) {
	if(this1 == null) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 1:
		var s1 = this1.s;
		if(s1 == null) {
			return "null";
		} else {
			return "" + s1;
		}
		break;
	case 2:
		var s2 = this1.s;
		return Std.string(s2);
	case 3:
		var s3 = this1.s;
		return s3;
	case 4:
		var s4 = this1.s;
		if(s4 == null) {
			return "null";
		} else {
			return "" + s4;
		}
		break;
	case 5:
		var s5 = this1.s;
		return Std.string(s5);
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isString = function(this1) {
	if(this1._hx_index == 3) {
		return true;
	} else {
		return false;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromInt = function(s) {
	return haxe_ui_util_VariantType.Int(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toInt = function(this1) {
	if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s1 = this1.s;
		return s1 | 0;
	case 2:
		var s2 = this1.s;
		switch(s2._hx_index) {
		case 0:
			var v = s2.v;
			return v | 0;
		case 3:
			var v1 = s2.v;
			return v1 * haxe_ui_Toolkit.pixelsPerRem | 0;
		case 4:
			var v2 = s2.v;
			return v2 / 100 * haxe_ui_core_Screen.get_instance().get_height() | 0;
		case 5:
			var v3 = s2.v;
			return v3 / 100 * haxe_ui_core_Screen.get_instance().get_width() | 0;
		default:
			throw new js__$Boot_HaxeError("Variant Type Error");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isInt = function(this1) {
	if(this1._hx_index == 0) {
		return true;
	} else {
		return false;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat = function(s) {
	return haxe_ui_util_VariantType.Float(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toFloat = function(this1) {
	if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 1:
		var s = this1.s;
		return s;
	case 2:
		var s1 = this1.s;
		switch(s1._hx_index) {
		case 0:
			var v = s1.v;
			return v;
		case 3:
			var v1 = s1.v;
			return v1 * haxe_ui_Toolkit.pixelsPerRem;
		case 4:
			var v2 = s1.v;
			return v2 / 100 * haxe_ui_core_Screen.get_instance().get_height();
		case 5:
			var v3 = s1.v;
			return v3 / 100 * haxe_ui_core_Screen.get_instance().get_width();
		default:
			throw new js__$Boot_HaxeError("Variant Typfe Error");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isFloat = function(this1) {
	if(this1._hx_index == 1) {
		return true;
	} else {
		return false;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromUnit = function(s) {
	return haxe_ui_util_VariantType.Unit(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toUnit = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return haxe_ui_styles_Unit.Pix(s);
	case 1:
		var s1 = this1.s;
		return haxe_ui_styles_Unit.Pix(s1);
	case 2:
		var s2 = this1.s;
		return s2;
	default:
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isUnit = function(this1) {
	if(this1._hx_index == 2) {
		return true;
	} else {
		return false;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:case 1:case 2:
		return true;
	default:
		return false;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.toNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s1 = this1.s;
		return s1;
	case 2:
		var s2 = this1.s;
		switch(s2._hx_index) {
		case 0:
			var v = s2.v;
			return v;
		case 3:
			var v1 = s2.v;
			return v1 * haxe_ui_Toolkit.pixelsPerRem;
		case 4:
			var v2 = s2.v;
			return v2 / 100 * haxe_ui_core_Screen.get_instance().get_height();
		case 5:
			var v3 = s2.v;
			return v3 / 100 * haxe_ui_core_Screen.get_instance().get_width();
		default:
			throw new js__$Boot_HaxeError("Variant Type Error");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromBool = function(s) {
	return haxe_ui_util_VariantType.Bool(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toBool = function(this1) {
	if(this1 == null) {
		return false;
	}
	if(this1._hx_index == 4) {
		var s = this1.s;
		return s;
	} else {
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isBool = function(this1) {
	if(this1._hx_index == 4) {
		return true;
	}
	return false;
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromDataSource = function(s) {
	return haxe_ui_util_VariantType.DataSource(s);
};
haxe_ui_util__$Variant_Variant_$Impl_$.toDataSource = function(this1) {
	if(this1._hx_index == 5) {
		var s = this1.s;
		return s;
	} else {
		throw new js__$Boot_HaxeError("Variant Type Error");
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isDataSource = function(this1) {
	if(this1._hx_index == 5) {
		return true;
	}
	return false;
};
haxe_ui_util__$Variant_Variant_$Impl_$.addFloat = function(lhs,rhs) {
	return lhs + haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
};
haxe_ui_util__$Variant_Variant_$Impl_$.addInt = function(lhs,rhs) {
	return lhs + haxe_ui_util__$Variant_Variant_$Impl_$.toInt(rhs);
};
haxe_ui_util__$Variant_Variant_$Impl_$.subtractFloat = function(lhs,rhs) {
	return lhs - haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
};
haxe_ui_util__$Variant_Variant_$Impl_$.subtractInt = function(lhs,rhs) {
	return lhs - haxe_ui_util__$Variant_Variant_$Impl_$.toInt(rhs);
};
haxe_ui_util__$Variant_Variant_$Impl_$.add = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:case 1:case 2:
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:case 1:case 2:
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) + haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs));
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1) && haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(rhs)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) + haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs));
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.postInc = function(this1) {
	if(this1._hx_index == 2) {
		if(this1._hx_index == 2) {
			var s = this1.s;
			switch(s._hx_index) {
			case 0:
				var v = s.v;
				var old = this1;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.Pix(v + 1));
				return old;
			case 3:
				var v1 = s.v;
				var old1 = this1;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.REM(v1 + 1));
				return old1;
			case 4:
				var v2 = s.v;
				var old2 = this1;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.VH(v2 + 1));
				return old2;
			case 5:
				var v3 = s.v;
				var old3 = this1;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.VW(v3 + 1));
				return old3;
			default:
				throw new js__$Boot_HaxeError("Variant Type Error");
			}
		} else {
			throw new js__$Boot_HaxeError("Variant Type Error");
		}
	} else {
		var tmp;
		switch(this1._hx_index) {
		case 0:case 1:case 2:
			tmp = true;
			break;
		default:
			tmp = false;
		}
		if(tmp) {
			var old4 = this1;
			this1 = haxe_ui_util_VariantType.Float(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) + 1);
			return old4;
		} else {
			throw new js__$Boot_HaxeError("Variant operation error");
		}
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.preInc = function(this1) {
	if(this1._hx_index == 2) {
		if(this1._hx_index == 2) {
			var s = this1.s;
			switch(s._hx_index) {
			case 0:
				var v = s.v;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.Pix(v + 1));
				return this1;
			case 3:
				var v1 = s.v;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.REM(v1 + 1));
				return this1;
			case 4:
				var v2 = s.v;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.VH(v2 + 1));
				return this1;
			case 5:
				var v3 = s.v;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.VW(v3 + 1));
				return this1;
			default:
				throw new js__$Boot_HaxeError("Variant Type Error");
			}
		} else {
			throw new js__$Boot_HaxeError("Variant Type Error");
		}
	} else {
		var tmp;
		switch(this1._hx_index) {
		case 0:case 1:case 2:
			tmp = true;
			break;
		default:
			tmp = false;
		}
		if(tmp) {
			this1 = haxe_ui_util_VariantType.Float(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) + 1);
			return this1;
		} else {
			throw new js__$Boot_HaxeError("Variant operation error");
		}
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.subtract = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:case 1:case 2:
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:case 1:case 2:
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) - haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs));
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1) && haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(rhs)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromString(StringTools.replace(haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1),haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs),""));
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.postDeinc = function(this1) {
	if(this1._hx_index == 2) {
		if(this1._hx_index == 2) {
			var s = this1.s;
			switch(s._hx_index) {
			case 0:
				var v = s.v;
				var old = this1;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.Pix(v - 1));
				return old;
			case 3:
				var v1 = s.v;
				var old1 = this1;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.REM(v1 - 1));
				return old1;
			case 4:
				var v2 = s.v;
				var old2 = this1;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.VH(v2 - 1));
				return old2;
			case 5:
				var v3 = s.v;
				var old3 = this1;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.VW(v3 - 1));
				return old3;
			default:
				throw new js__$Boot_HaxeError("Variant Type Error");
			}
		} else {
			throw new js__$Boot_HaxeError("Variant Type Error");
		}
	} else {
		var tmp;
		switch(this1._hx_index) {
		case 0:case 1:case 2:
			tmp = true;
			break;
		default:
			tmp = false;
		}
		if(tmp) {
			var old4 = this1;
			this1 = haxe_ui_util_VariantType.Float(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) - 1);
			return old4;
		} else {
			throw new js__$Boot_HaxeError("Variant operation error");
		}
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.preDeinc = function(this1) {
	if(this1._hx_index == 2) {
		if(this1._hx_index == 2) {
			var s = this1.s;
			switch(s._hx_index) {
			case 0:
				var v = s.v;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.Pix(v - 1));
				return this1;
			case 3:
				var v1 = s.v;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.REM(v1 - 1));
				return this1;
			case 4:
				var v2 = s.v;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.VH(v2 - 1));
				return this1;
			case 5:
				var v3 = s.v;
				this1 = haxe_ui_util_VariantType.Unit(haxe_ui_styles_Unit.VW(v3 - 1));
				return this1;
			default:
				throw new js__$Boot_HaxeError("Variant Type Error");
			}
		} else {
			throw new js__$Boot_HaxeError("Variant Type Error");
		}
	} else {
		var tmp;
		switch(this1._hx_index) {
		case 0:case 1:case 2:
			tmp = true;
			break;
		default:
			tmp = false;
		}
		if(tmp) {
			this1 = haxe_ui_util_VariantType.Float(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) - 1);
			return this1;
		} else {
			throw new js__$Boot_HaxeError("Variant operation error");
		}
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.multiply = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:case 1:case 2:
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:case 1:case 2:
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) * haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs));
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.divide = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:case 1:case 2:
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:case 1:case 2:
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) / haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs));
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.gt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:case 1:case 2:
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) > haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) > haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs);
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.gte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:case 1:case 2:
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) >= haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) >= haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs);
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.lt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:case 1:case 2:
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) < haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) < haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs);
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.lte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:case 1:case 2:
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1) <= haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(rhs);
	} else if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isString(this1)) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) <= haxe_ui_util__$Variant_Variant_$Impl_$.toString(rhs);
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.negate = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:case 1:case 2:
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(-haxe_ui_util__$Variant_Variant_$Impl_$.toNumber(this1));
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.invert = function(this1) {
	if(haxe_ui_util__$Variant_Variant_$Impl_$.get_isBool(this1)) {
		var v = haxe_ui_util__$Variant_Variant_$Impl_$.toBool(this1);
		v = !v;
		return haxe_ui_util__$Variant_Variant_$Impl_$.fromBool(v);
	}
	throw new js__$Boot_HaxeError("Variant operation error");
};
haxe_ui_util__$Variant_Variant_$Impl_$.get_isNull = function(this1) {
	if(this1 != null) {
		return haxe_ui_util__$Variant_Variant_$Impl_$.toString(this1) == null;
	} else {
		return true;
	}
};
haxe_ui_util__$Variant_Variant_$Impl_$.fromDynamic = function(r) {
	var v = null;
	if(r != null) {
		if(haxe_ui_util__$Variant_Variant_$Impl_$.containsOnlyDigits(r) && isNaN(parseFloat("" + Std.string(r))) == false) {
			if(Std.string(r).indexOf(".") != -1) {
				v = haxe_ui_util__$Variant_Variant_$Impl_$.fromFloat(parseFloat("" + Std.string(r)));
			} else {
				v = haxe_ui_util__$Variant_Variant_$Impl_$.fromInt(Std.parseInt("" + Std.string(r)));
			}
		} else if("" + Std.string(r) == "true" || Std.string(r) + "" == "false") {
			v = haxe_ui_util__$Variant_Variant_$Impl_$.fromBool("" + Std.string(r) == "true");
		} else if(js_Boot.__instanceof(r,haxe_ui_util_VariantType.String)) {
			v = haxe_ui_util__$Variant_Variant_$Impl_$.fromString(Std.string(r));
		} else if(js_Boot.__instanceof(r,haxe_ui_util_VariantType.DataSource)) {
			v = r;
		} else if(js_Boot.__instanceof(r,haxe_ui_styles_Unit)) {
			v = r;
		} else {
			v = haxe_ui_util__$Variant_Variant_$Impl_$.fromString(Std.string(r));
		}
	}
	return v;
};
haxe_ui_util__$Variant_Variant_$Impl_$.containsOnlyDigits = function(s) {
	if(js_Boot.__instanceof(s,haxe_ui_util_VariantType.Int) || js_Boot.__instanceof(s,haxe_ui_util_VariantType.Float)) {
		return true;
	}
	var t = Std.string(s);
	var _g1 = 0;
	var _g = t.length;
	while(_g1 < _g) {
		var i = _g1++;
		var c = t.charAt(i);
		if(c != "0" && c != "1" && c != "2" && c != "3" && c != "4" && c != "5" && c != "6" && c != "7" && c != "8" && c != "9" && c != ".") {
			return false;
		}
	}
	return true;
};
haxe_ui_util__$Variant_Variant_$Impl_$.toDynamic = function(v) {
	var d = null;
	if(v != null) {
		switch(v._hx_index) {
		case 0:
			var y = v.s;
			d = y;
			break;
		case 1:
			var y1 = v.s;
			d = y1;
			break;
		case 2:
			var y2 = v.s;
			d = y2;
			break;
		case 3:
			var y3 = v.s;
			d = y3;
			break;
		case 4:
			var y4 = v.s;
			d = y4;
			break;
		case 5:
			var y5 = v.s;
			d = y5;
			break;
		}
	}
	return d;
};
var haxe_ui_util_filters_Filter = function() {
};
$hxClasses["haxe.ui.util.filters.Filter"] = haxe_ui_util_filters_Filter;
haxe_ui_util_filters_Filter.__name__ = ["haxe","ui","util","filters","Filter"];
haxe_ui_util_filters_Filter.prototype = {
	__class__: haxe_ui_util_filters_Filter
};
var haxe_ui_util_filters_Blur = function() {
	haxe_ui_util_filters_Filter.call(this);
};
$hxClasses["haxe.ui.util.filters.Blur"] = haxe_ui_util_filters_Blur;
haxe_ui_util_filters_Blur.__name__ = ["haxe","ui","util","filters","Blur"];
haxe_ui_util_filters_Blur.__super__ = haxe_ui_util_filters_Filter;
haxe_ui_util_filters_Blur.prototype = $extend(haxe_ui_util_filters_Filter.prototype,{
	__class__: haxe_ui_util_filters_Blur
});
var haxe_ui_util_filters_DropShadow = function() {
	haxe_ui_util_filters_Filter.call(this);
};
$hxClasses["haxe.ui.util.filters.DropShadow"] = haxe_ui_util_filters_DropShadow;
haxe_ui_util_filters_DropShadow.__name__ = ["haxe","ui","util","filters","DropShadow"];
haxe_ui_util_filters_DropShadow.__super__ = haxe_ui_util_filters_Filter;
haxe_ui_util_filters_DropShadow.prototype = $extend(haxe_ui_util_filters_Filter.prototype,{
	__class__: haxe_ui_util_filters_DropShadow
});
var haxe_ui_util_filters_FilterParser = function() { };
$hxClasses["haxe.ui.util.filters.FilterParser"] = haxe_ui_util_filters_FilterParser;
haxe_ui_util_filters_FilterParser.__name__ = ["haxe","ui","util","filters","FilterParser"];
haxe_ui_util_filters_FilterParser.parseFilter = function(filterDetails) {
	var filter = null;
	if(filterDetails[0] == "drop-shadow") {
		filter = haxe_ui_util_filters_FilterParser.parseDropShadow(filterDetails);
	} else if(filterDetails[0] == "blur") {
		filter = haxe_ui_util_filters_FilterParser.parseBlur(filterDetails);
	}
	return filter;
};
haxe_ui_util_filters_FilterParser.parseDropShadow = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_util_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_util_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var dropShadow = new haxe_ui_util_filters_DropShadow();
	dropShadow.distance = copy[0];
	dropShadow.angle = copy[1];
	dropShadow.color = copy[2];
	dropShadow.alpha = copy[3];
	dropShadow.blurX = copy[4];
	dropShadow.blurY = copy[5];
	dropShadow.strength = copy[6];
	dropShadow.quality = copy[7];
	dropShadow.inner = copy[8];
	return dropShadow;
};
haxe_ui_util_filters_FilterParser.parseBlur = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_util_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_util_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var blur = new haxe_ui_util_filters_Blur();
	blur.amount = copy[0];
	return blur;
};
haxe_ui_util_filters_FilterParser.copyFilterDefaults = function(filterName,params) {
	var copy = [];
	var _this = haxe_ui_util_filters_FilterParser.filterParamDefaults;
	var defaultParams = __map_reserved[filterName] != null ? _this.getReserved(filterName) : _this.h[filterName];
	if(defaultParams != null) {
		var _g = 0;
		while(_g < defaultParams.length) {
			var p = defaultParams[_g];
			++_g;
			copy.push(p);
		}
	}
	if(params != null) {
		var n = 0;
		var _g1 = 0;
		while(_g1 < params.length) {
			var p1 = params[_g1];
			++_g1;
			copy[n] = p1;
			++n;
		}
	}
	return copy;
};
haxe_ui_util_filters_FilterParser.buildDefaults = function() {
	if(haxe_ui_util_filters_FilterParser.filterParamDefaults != null) {
		return;
	}
	haxe_ui_util_filters_FilterParser.filterParamDefaults = new haxe_ds_StringMap();
	var v = [];
	var _this = haxe_ui_util_filters_FilterParser.filterParamDefaults;
	if(__map_reserved["drop-shadow"] != null) {
		_this.setReserved("drop-shadow",v);
	} else {
		_this.h["drop-shadow"] = v;
	}
	var this1 = haxe_ui_util_filters_FilterParser.filterParamDefaults;
	var _this1 = haxe_ui_util_filters_FilterParser.filterParamDefaults;
	var v1 = (__map_reserved["drop-shadow"] != null ? _this1.getReserved("drop-shadow") : _this1.h["drop-shadow"]).concat([4,45,0,1,4,4,1,1,false,false,false]);
	var _this2 = this1;
	if(__map_reserved["drop-shadow"] != null) {
		_this2.setReserved("drop-shadow",v1);
	} else {
		_this2.h["drop-shadow"] = v1;
	}
	var v2 = [];
	var _this3 = haxe_ui_util_filters_FilterParser.filterParamDefaults;
	if(__map_reserved["blur"] != null) {
		_this3.setReserved("blur",v2);
	} else {
		_this3.h["blur"] = v2;
	}
	var this2 = haxe_ui_util_filters_FilterParser.filterParamDefaults;
	var _this4 = haxe_ui_util_filters_FilterParser.filterParamDefaults;
	var v3 = (__map_reserved["blur"] != null ? _this4.getReserved("blur") : _this4.h["blur"]).concat([1]);
	var _this5 = this2;
	if(__map_reserved["blur"] != null) {
		_this5.setReserved("blur",v3);
	} else {
		_this5.h["blur"] = v3;
	}
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g1 = 0;
	var _g = position;
	while(_g1 < _g) {
		var i = _g1++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = ["haxe","xml","XmlParserException"];
haxe_xml_XmlParserException.prototype = {
	toString: function() {
		return Type.getClassName(js_Boot.getClass(this)) + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(c == c) {
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				var tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCharCode(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					}
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCharCode(c1);
				} else {
					var _this = haxe_xml_Parser.escapes;
					if(!(__map_reserved[s] != null ? _this.existsReserved(s) : _this.h.hasOwnProperty(s))) {
						if(strict) {
							throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
						}
						buf.b += Std.string("&" + s + ";");
					} else {
						var _this1 = haxe_xml_Parser.escapes;
						var x = __map_reserved[s] != null ? _this1.getReserved(s) : _this1.h[s];
						buf.b += Std.string(x);
					}
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCharCode(c),str,p));
				}
				buf.b += "&";
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				start = p--;
				state = escapeNext;
			}
			break;
		}
		c = str.charCodeAt(++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			var len6 = p - start;
			buf.b += len6 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len6);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		var len7 = p - start;
		buf.b += len7 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len7);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw new js__$Boot_HaxeError(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = ["haxe","xml","Printer"];
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	writeNode: function(value,tabs) {
		var _g = value.nodeType;
		switch(_g) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + value.nodeType);
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
				}
				var child = HxOverrides.iter(value.children);
				while(child.hasNext()) {
					var child1 = child.next();
					this.writeNode(child1,this.pretty ? tabs + "\t" : tabs);
				}
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + value.nodeType);
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input1 = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input1);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			var input2 = StringTools.trim(value.nodeValue);
			this.output.b += Std.string(input2);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			var input3 = StringTools.trim(commentContent);
			this.output.b += Std.string(input3);
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
			}
			var child2 = HxOverrides.iter(value.children);
			while(child2.hasNext()) {
				var child3 = child2.next();
				this.writeNode(child3,tabs);
			}
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
		}
		var child = HxOverrides.iter(value.children);
		while(child.hasNext()) {
			var child1 = child.next();
			var _g = child1.nodeType;
			switch(_g) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child1.nodeType == Xml.Document || child1.nodeType == Xml.Element) {
					throw new js__$Boot_HaxeError("Bad node type, unexpected " + child1.nodeType);
				}
				if(StringTools.ltrim(child1.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var hscript_Const = $hxEnums["hscript.Const"] = { __ename__ : true, __constructs__ : ["CInt","CFloat","CString"]
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["f"],$_)
	,CString: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Expr = $hxEnums["hscript.Expr"] = { __ename__ : true, __constructs__ : ["EConst","EIdent","EVar","EParent","EBlock","EField","EBinop","EUnop","ECall","EIf","EWhile","EFor","EBreak","EContinue","EFunction","EReturn","EArray","EArrayDecl","ENew","EThrow","ETry","EObject","ETernary","ESwitch","EDoWhile","EMeta"]
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EIdent: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EVar: ($_=function(n,t,e) { return {_hx_index:2,n:n,t:t,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["n","t","e"],$_)
	,EParent: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EBlock: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EField: ($_=function(e,f) { return {_hx_index:5,e:e,f:f,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","f"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:6,op:op,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["op","e1","e2"],$_)
	,EUnop: ($_=function(op,prefix,e) { return {_hx_index:7,op:op,prefix:prefix,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["op","prefix","e"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:8,e:e,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","params"],$_)
	,EIf: ($_=function(cond,e1,e2) { return {_hx_index:9,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,EWhile: ($_=function(cond,e) { return {_hx_index:10,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EFor: ($_=function(v,it,e) { return {_hx_index:11,v:v,it:it,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["v","it","e"],$_)
	,EBreak: {_hx_index:12,__enum__:"hscript.Expr",toString:$estr}
	,EContinue: {_hx_index:13,__enum__:"hscript.Expr",toString:$estr}
	,EFunction: ($_=function(args,e,name,ret) { return {_hx_index:14,args:args,e:e,name:name,ret:ret,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["args","e","name","ret"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:15,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","index"],$_)
	,EArrayDecl: ($_=function(e) { return {_hx_index:17,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ENew: ($_=function(cl,params) { return {_hx_index:18,cl:cl,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cl","params"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:19,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ETry: ($_=function(e,v,t,ecatch) { return {_hx_index:20,e:e,v:v,t:t,ecatch:ecatch,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","v","t","ecatch"],$_)
	,EObject: ($_=function(fl) { return {_hx_index:21,fl:fl,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["fl"],$_)
	,ETernary: ($_=function(cond,e1,e2) { return {_hx_index:22,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,ESwitch: ($_=function(e,cases,defaultExpr) { return {_hx_index:23,e:e,cases:cases,defaultExpr:defaultExpr,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","cases","defaultExpr"],$_)
	,EDoWhile: ($_=function(cond,e) { return {_hx_index:24,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EMeta: ($_=function(name,args,e) { return {_hx_index:25,name:name,args:args,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["name","args","e"],$_)
};
var hscript_CType = $hxEnums["hscript.CType"] = { __ename__ : true, __constructs__ : ["CTPath","CTFun","CTAnon","CTParent"]
	,CTPath: ($_=function(path,params) { return {_hx_index:0,path:path,params:params,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["path","params"],$_)
	,CTFun: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["args","ret"],$_)
	,CTAnon: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["fields"],$_)
	,CTParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["t"],$_)
};
var hscript_Error = $hxEnums["hscript.Error"] = { __ename__ : true, __constructs__ : ["EInvalidChar","EUnexpected","EUnterminatedString","EUnterminatedComment","EUnknownVariable","EInvalidIterator","EInvalidOp","EInvalidAccess"]
	,EInvalidChar: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EUnexpected: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["s"],$_)
	,EUnterminatedString: {_hx_index:2,__enum__:"hscript.Error",toString:$estr}
	,EUnterminatedComment: {_hx_index:3,__enum__:"hscript.Error",toString:$estr}
	,EUnknownVariable: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidIterator: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidOp: ($_=function(op) { return {_hx_index:6,op:op,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["op"],$_)
	,EInvalidAccess: ($_=function(f) { return {_hx_index:7,f:f,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["f"],$_)
};
var hscript__$Interp_Stop = $hxEnums["hscript._Interp.Stop"] = { __ename__ : true, __constructs__ : ["SBreak","SContinue","SReturn"]
	,SBreak: {_hx_index:0,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SContinue: {_hx_index:1,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SReturn: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"hscript._Interp.Stop",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var hscript_Token = $hxEnums["hscript.Token"] = { __ename__ : true, __constructs__ : ["TEof","TConst","TId","TOp","TPOpen","TPClose","TBrOpen","TBrClose","TDot","TComma","TSemicolon","TBkOpen","TBkClose","TQuestion","TDoubleDot","TMeta"]
	,TEof: {_hx_index:0,__enum__:"hscript.Token",toString:$estr}
	,TConst: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TId: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TOp: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPOpen: {_hx_index:4,__enum__:"hscript.Token",toString:$estr}
	,TPClose: {_hx_index:5,__enum__:"hscript.Token",toString:$estr}
	,TBrOpen: {_hx_index:6,__enum__:"hscript.Token",toString:$estr}
	,TBrClose: {_hx_index:7,__enum__:"hscript.Token",toString:$estr}
	,TDot: {_hx_index:8,__enum__:"hscript.Token",toString:$estr}
	,TComma: {_hx_index:9,__enum__:"hscript.Token",toString:$estr}
	,TSemicolon: {_hx_index:10,__enum__:"hscript.Token",toString:$estr}
	,TBkOpen: {_hx_index:11,__enum__:"hscript.Token",toString:$estr}
	,TBkClose: {_hx_index:12,__enum__:"hscript.Token",toString:$estr}
	,TQuestion: {_hx_index:13,__enum__:"hscript.Token",toString:$estr}
	,TDoubleDot: {_hx_index:14,__enum__:"hscript.Token",toString:$estr}
	,TMeta: ($_=function(s) { return {_hx_index:15,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Parser = function() {
	this.uid = 0;
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"]];
	this.opPriority = new haxe_ds_StringMap();
	this.opRightAssoc = new haxe_ds_StringMap();
	this.unops = new haxe_ds_StringMap();
	var _g1 = 0;
	var _g = priorities.length;
	while(_g1 < _g) {
		var i = _g1++;
		var _g2 = 0;
		var _g3 = priorities[i];
		while(_g2 < _g3.length) {
			var x = _g3[_g2];
			++_g2;
			var _this = this.opPriority;
			if(__map_reserved[x] != null) {
				_this.setReserved(x,i);
			} else {
				_this.h[x] = i;
			}
			if(i == 9) {
				var _this1 = this.opRightAssoc;
				if(__map_reserved[x] != null) {
					_this1.setReserved(x,true);
				} else {
					_this1.h[x] = true;
				}
			}
		}
	}
	var x1 = "!";
	var _this2 = this.unops;
	var value = x1 == "++" || x1 == "--";
	if(__map_reserved[x1] != null) {
		_this2.setReserved(x1,value);
	} else {
		_this2.h[x1] = value;
	}
	var x2 = "++";
	var _this3 = this.unops;
	var value1 = x2 == "++" || x2 == "--";
	if(__map_reserved[x2] != null) {
		_this3.setReserved(x2,value1);
	} else {
		_this3.h[x2] = value1;
	}
	var x3 = "--";
	var _this4 = this.unops;
	var value2 = x3 == "++" || x3 == "--";
	if(__map_reserved[x3] != null) {
		_this4.setReserved(x3,value2);
	} else {
		_this4.h[x3] = value2;
	}
	var x4 = "-";
	var _this5 = this.unops;
	var value3 = x4 == "++" || x4 == "--";
	if(__map_reserved[x4] != null) {
		_this5.setReserved(x4,value3);
	} else {
		_this5.h[x4] = value3;
	}
	var x5 = "~";
	var _this6 = this.unops;
	var value4 = x5 == "++" || x5 == "--";
	if(__map_reserved[x5] != null) {
		_this6.setReserved(x5,value4);
	} else {
		_this6.h[x5] = value4;
	}
};
$hxClasses["hscript.Parser"] = hscript_Parser;
hscript_Parser.__name__ = ["hscript","Parser"];
hscript_Parser.prototype = {
	error: function(err,pmin,pmax) {
		throw new js__$Boot_HaxeError(err);
	}
	,invalidChar: function(c) {
		throw new js__$Boot_HaxeError(hscript_Error.EInvalidChar(c));
	}
	,parseString: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.uid = 0;
		return this.parse(new haxe_io_StringInput(s),origin);
	}
	,parse: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.line = 1;
		this.tokens = new haxe_ds_GenericStack();
		this.char = -1;
		this.input = s;
		this.ops = [];
		this.idents = [];
		var _g1 = 0;
		var _g = this.opChars.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g11 = 0;
		var _g2 = this.identChars.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.idents[HxOverrides.cca(this.identChars,i1)] = true;
		}
		var a = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			a.push(this.parseFullExpr());
		}
		if(a.length == 1) {
			return a[0];
		} else {
			return hscript_Expr.EBlock(a);
		}
	}
	,unexpected: function(tk) {
		throw new js__$Boot_HaxeError(hscript_Error.EUnexpected(this.tokenString(tk)));
	}
	,push: function(tk) {
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) {
			this.unexpected(t);
		}
	}
	,getIdent: function() {
		var tk = this.token();
		if(tk._hx_index == 2) {
			var id = tk.s;
			return id;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	,expr: function(e) {
		return e;
	}
	,pmin: function(e) {
		return 0;
	}
	,pmax: function(e) {
		return 0;
	}
	,mk: function(e,pmin,pmax) {
		return e;
	}
	,isBlock: function(e) {
		switch(e._hx_index) {
		case 2:
			var e1 = e.e;
			if(e1 != null) {
				return this.isBlock(e1);
			} else {
				return false;
			}
			break;
		case 6:
			var e2 = e.e2;
			return this.isBlock(e2);
		case 7:
			var e3 = e.e;
			var prefix = e.prefix;
			if(!prefix) {
				return this.isBlock(e3);
			} else {
				return false;
			}
			break;
		case 9:
			var e21 = e.e2;
			var e11 = e.e1;
			if(e21 != null) {
				return this.isBlock(e21);
			} else {
				return this.isBlock(e11);
			}
			break;
		case 10:
			var e4 = e.e;
			return this.isBlock(e4);
		case 11:
			var e5 = e.e;
			return this.isBlock(e5);
		case 14:
			var e6 = e.e;
			return this.isBlock(e6);
		case 15:
			var e7 = e.e;
			if(e7 != null) {
				return this.isBlock(e7);
			} else {
				return false;
			}
			break;
		case 20:
			var e8 = e.ecatch;
			return this.isBlock(e8);
		case 4:case 21:case 23:
			return true;
		case 24:
			var e9 = e.e;
			return this.isBlock(e9);
		default:
			return false;
		}
	}
	,parseFullExpr: function() {
		var e = this.parseExpr();
		var tk = this.token();
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				this.unexpected(tk);
			}
		}
		return e;
	}
	,parseObject: function(p1) {
		var fl = [];
		_hx_loop1: while(true) {
			var tk = this.token();
			var id = null;
			switch(tk._hx_index) {
			case 1:
				var c = tk.c;
				if(!this.allowJSON) {
					this.unexpected(tk);
				}
				if(c._hx_index == 2) {
					var s = c.s;
					id = s;
				} else {
					this.unexpected(tk);
				}
				break;
			case 2:
				var i = tk.s;
				id = i;
				break;
			case 7:
				break _hx_loop1;
			default:
				this.unexpected(tk);
			}
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			fl.push({ name : id, e : this.parseExpr()});
			tk = this.token();
			switch(tk._hx_index) {
			case 7:
				break _hx_loop1;
			case 9:
				break;
			default:
				this.unexpected(tk);
			}
		}
		return this.parseExprNext(hscript_Expr.EObject(fl));
	}
	,parseExpr: function() {
		var tk = this.token();
		switch(tk._hx_index) {
		case 1:
			var c = tk.c;
			return this.parseExprNext(hscript_Expr.EConst(c));
		case 2:
			var id = tk.s;
			var e = this.parseStructure(id);
			if(e == null) {
				e = hscript_Expr.EIdent(id);
			}
			return this.parseExprNext(e);
		case 3:
			var op = tk.s;
			var _this = this.unops;
			if(__map_reserved[op] != null ? _this.existsReserved(op) : _this.h.hasOwnProperty(op)) {
				return this.makeUnop(op,this.parseExpr());
			}
			return this.unexpected(tk);
		case 4:
			var e1 = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TPClose) {
				this.unexpected(t);
			}
			return this.parseExprNext(hscript_Expr.EParent(e1));
		case 6:
			tk = this.token();
			switch(tk._hx_index) {
			case 1:
				var c1 = tk.c;
				if(this.allowJSON) {
					if(c1._hx_index == 2) {
						var tk2 = this.token();
						var _this1 = this.tokens;
						_this1.head = new haxe_ds_GenericCell(tk2,_this1.head);
						var _this2 = this.tokens;
						_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
						if(tk2._hx_index == 14) {
							return this.parseExprNext(this.parseObject(0));
						}
					} else {
						var _this3 = this.tokens;
						_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
					}
				} else {
					var _this4 = this.tokens;
					_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
				}
				break;
			case 2:
				var tk21 = this.token();
				var _this5 = this.tokens;
				_this5.head = new haxe_ds_GenericCell(tk21,_this5.head);
				var _this6 = this.tokens;
				_this6.head = new haxe_ds_GenericCell(tk,_this6.head);
				if(tk21._hx_index == 14) {
					return this.parseExprNext(this.parseObject(0));
				}
				break;
			case 7:
				return this.parseExprNext(hscript_Expr.EObject([]));
			default:
				var _this7 = this.tokens;
				_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
			}
			var a = [];
			while(true) {
				a.push(this.parseFullExpr());
				tk = this.token();
				if(tk == hscript_Token.TBrClose) {
					break;
				}
				var _this8 = this.tokens;
				_this8.head = new haxe_ds_GenericCell(tk,_this8.head);
			}
			return hscript_Expr.EBlock(a);
		case 11:
			var a1 = [];
			tk = this.token();
			while(tk != hscript_Token.TBkClose) {
				var _this9 = this.tokens;
				_this9.head = new haxe_ds_GenericCell(tk,_this9.head);
				a1.push(this.parseExpr());
				tk = this.token();
				if(tk == hscript_Token.TComma) {
					tk = this.token();
				}
			}
			if(a1.length == 1) {
				var _g = a1[0];
				switch(_g._hx_index) {
				case 10:case 11:case 24:
					var tmp = "__a_" + this.uid++;
					var e2 = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a1[0]),hscript_Expr.EIdent(tmp)]);
					return this.parseExprNext(e2);
				default:
				}
			}
			return this.parseExprNext(hscript_Expr.EArrayDecl(a1));
		case 15:
			var id1 = tk.s;
			if(this.allowMetadata) {
				var args = this.parseMetaArgs();
				return hscript_Expr.EMeta(id1,args,this.parseExpr());
			} else {
				return this.unexpected(tk);
			}
			break;
		default:
			return this.unexpected(tk);
		}
	}
	,parseMetaArgs: function() {
		var tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return null;
		}
		var args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var _this1 = this.tokens;
			_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
			_hx_loop1: while(true) {
				args.push(this.parseExpr());
				var _g = this.token();
				switch(_g._hx_index) {
				case 5:
					break _hx_loop1;
				case 9:
					break;
				default:
					var tk1 = _g;
					this.unexpected(tk1);
				}
			}
		}
		return args;
	}
	,mapCompr: function(tmp,e) {
		var edef;
		switch(e._hx_index) {
		case 3:
			var e2 = e.e;
			edef = hscript_Expr.EParent(this.mapCompr(tmp,e2));
			break;
		case 4:
			if(e.e.length == 1) {
				var e1 = e.e[0];
				edef = hscript_Expr.EBlock([this.mapCompr(tmp,e1)]);
			} else {
				edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			}
			break;
		case 9:
			var e21 = e.e2;
			var e11 = e.e1;
			var cond = e.cond;
			edef = e21 == null ? hscript_Expr.EIf(cond,this.mapCompr(tmp,e11),null) : hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			break;
		case 10:
			var e22 = e.e;
			var cond1 = e.cond;
			edef = hscript_Expr.EWhile(cond1,this.mapCompr(tmp,e22));
			break;
		case 11:
			var e23 = e.e;
			var it = e.it;
			var v = e.v;
			edef = hscript_Expr.EFor(v,it,this.mapCompr(tmp,e23));
			break;
		case 24:
			var e24 = e.e;
			var cond2 = e.cond;
			edef = hscript_Expr.EDoWhile(cond2,this.mapCompr(tmp,e24));
			break;
		default:
			edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
		}
		return edef;
	}
	,makeUnop: function(op,e) {
		switch(e._hx_index) {
		case 6:
			var e2 = e.e2;
			var e1 = e.e1;
			var bop = e.op;
			return hscript_Expr.EBinop(bop,this.makeUnop(op,e1),e2);
		case 22:
			var e3 = e.e2;
			var e21 = e.e1;
			var e11 = e.cond;
			return hscript_Expr.ETernary(this.makeUnop(op,e11),e21,e3);
		default:
			return hscript_Expr.EUnop(op,true,e);
		}
	}
	,makeBinop: function(op,e1,e) {
		switch(e._hx_index) {
		case 6:
			var e3 = e.e2;
			var e2 = e.e1;
			var op2 = e.op;
			var tmp;
			var _this = this.opPriority;
			var tmp1 = __map_reserved[op] != null ? _this.getReserved(op) : _this.h[op];
			var _this1 = this.opPriority;
			if(tmp1 <= (__map_reserved[op2] != null ? _this1.getReserved(op2) : _this1.h[op2])) {
				var _this2 = this.opRightAssoc;
				tmp = !(__map_reserved[op] != null ? _this2.existsReserved(op) : _this2.h.hasOwnProperty(op));
			} else {
				tmp = false;
			}
			if(tmp) {
				return hscript_Expr.EBinop(op2,this.makeBinop(op,e1,e2),e3);
			} else {
				return hscript_Expr.EBinop(op,e1,e);
			}
			break;
		case 22:
			var e4 = e.e2;
			var e31 = e.e1;
			var e21 = e.cond;
			var _this3 = this.opRightAssoc;
			if(__map_reserved[op] != null ? _this3.existsReserved(op) : _this3.h.hasOwnProperty(op)) {
				return hscript_Expr.EBinop(op,e1,e);
			} else {
				return hscript_Expr.ETernary(this.makeBinop(op,e1,e21),e31,e4);
			}
			break;
		default:
			return hscript_Expr.EBinop(op,e1,e);
		}
	}
	,parseStructure: function(id) {
		switch(id) {
		case "break":
			return hscript_Expr.EBreak;
		case "continue":
			return hscript_Expr.EContinue;
		case "do":
			var e = this.parseExpr();
			var tk = this.token();
			if(tk._hx_index == 2) {
				if(tk.s != "while") {
					this.unexpected(tk);
				}
			} else {
				this.unexpected(tk);
			}
			var econd = this.parseExpr();
			return hscript_Expr.EDoWhile(econd,e);
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var tk1 = this.token();
			if(!Type.enumEq(tk1,hscript_Token.TId("in"))) {
				this.unexpected(tk1);
			}
			var eiter = this.parseExpr();
			var t1 = this.token();
			if(t1 != hscript_Token.TPClose) {
				this.unexpected(t1);
			}
			var e1 = this.parseExpr();
			return hscript_Expr.EFor(vname,eiter,e1);
		case "function":
			var tk2 = this.token();
			var name = null;
			if(tk2._hx_index == 2) {
				var id1 = tk2.s;
				name = id1;
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk2,_this.head);
			}
			var t2 = this.token();
			if(t2 != hscript_Token.TPOpen) {
				this.unexpected(t2);
			}
			var args = [];
			tk2 = this.token();
			if(tk2 != hscript_Token.TPClose) {
				var done = false;
				while(!done) {
					var name1 = null;
					var opt = false;
					if(tk2._hx_index == 13) {
						opt = true;
						tk2 = this.token();
					}
					if(tk2._hx_index == 2) {
						var id2 = tk2.s;
						name1 = id2;
					} else {
						this.unexpected(tk2);
					}
					tk2 = this.token();
					var arg = { name : name1};
					args.push(arg);
					if(opt) {
						arg.opt = true;
					}
					if(tk2 == hscript_Token.TDoubleDot && this.allowTypes) {
						arg.t = this.parseType();
						tk2 = this.token();
					}
					switch(tk2._hx_index) {
					case 5:
						done = true;
						break;
					case 9:
						tk2 = this.token();
						break;
					default:
						this.unexpected(tk2);
					}
				}
			}
			var ret = null;
			if(this.allowTypes) {
				tk2 = this.token();
				if(tk2 != hscript_Token.TDoubleDot) {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(tk2,_this1.head);
				} else {
					ret = this.parseType();
				}
			}
			var body = this.parseExpr();
			return hscript_Expr.EFunction(args,body,name,ret);
		case "if":
			var t3 = this.token();
			if(t3 != hscript_Token.TPOpen) {
				this.unexpected(t3);
			}
			var cond = this.parseExpr();
			var t4 = this.token();
			if(t4 != hscript_Token.TPClose) {
				this.unexpected(t4);
			}
			var e11 = this.parseExpr();
			var e2 = null;
			var semic = false;
			var tk3 = this.token();
			if(tk3 == hscript_Token.TSemicolon) {
				semic = true;
				tk3 = this.token();
			}
			if(Type.enumEq(tk3,hscript_Token.TId("else"))) {
				e2 = this.parseExpr();
			} else {
				var _this2 = this.tokens;
				_this2.head = new haxe_ds_GenericCell(tk3,_this2.head);
				if(semic) {
					var _this3 = this.tokens;
					_this3.head = new haxe_ds_GenericCell(hscript_Token.TSemicolon,_this3.head);
				}
			}
			return hscript_Expr.EIf(cond,e11,e2);
		case "new":
			var a = [];
			a.push(this.getIdent());
			var next = true;
			while(next) {
				var tk4 = this.token();
				switch(tk4._hx_index) {
				case 4:
					next = false;
					break;
				case 8:
					a.push(this.getIdent());
					break;
				default:
					this.unexpected(tk4);
				}
			}
			var args1 = this.parseExprList(hscript_Token.TPClose);
			return hscript_Expr.ENew(a.join("."),args1);
		case "return":
			var tk5 = this.token();
			var _this4 = this.tokens;
			_this4.head = new haxe_ds_GenericCell(tk5,_this4.head);
			var e3 = tk5 == hscript_Token.TSemicolon ? null : this.parseExpr();
			return hscript_Expr.EReturn(e3);
		case "switch":
			var e4 = this.parseExpr();
			var def = null;
			var cases = [];
			var t5 = this.token();
			if(t5 != hscript_Token.TBrOpen) {
				this.unexpected(t5);
			}
			_hx_loop3: while(true) {
				var tk6 = this.token();
				switch(tk6._hx_index) {
				case 2:
					switch(tk6.s) {
					case "case":
						var c = { values : [], expr : null};
						cases.push(c);
						_hx_loop4: while(true) {
							var e5 = this.parseExpr();
							c.values.push(e5);
							tk6 = this.token();
							switch(tk6._hx_index) {
							case 9:
								break;
							case 14:
								break _hx_loop4;
							default:
								this.unexpected(tk6);
							}
						}
						var exprs = [];
						_hx_loop5: while(true) {
							tk6 = this.token();
							var _this5 = this.tokens;
							_this5.head = new haxe_ds_GenericCell(tk6,_this5.head);
							switch(tk6._hx_index) {
							case 2:
								switch(tk6.s) {
								case "case":case "default":
									break _hx_loop5;
								default:
									exprs.push(this.parseFullExpr());
								}
								break;
							case 7:
								break _hx_loop5;
							default:
								exprs.push(this.parseFullExpr());
							}
						}
						c.expr = exprs.length == 1 ? exprs[0] : exprs.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs);
						break;
					case "default":
						if(def != null) {
							this.unexpected(tk6);
						}
						var t6 = this.token();
						if(t6 != hscript_Token.TDoubleDot) {
							this.unexpected(t6);
						}
						var exprs1 = [];
						_hx_loop6: while(true) {
							tk6 = this.token();
							var _this6 = this.tokens;
							_this6.head = new haxe_ds_GenericCell(tk6,_this6.head);
							switch(tk6._hx_index) {
							case 2:
								switch(tk6.s) {
								case "case":case "default":
									break _hx_loop6;
								default:
									exprs1.push(this.parseFullExpr());
								}
								break;
							case 7:
								break _hx_loop6;
							default:
								exprs1.push(this.parseFullExpr());
							}
						}
						def = exprs1.length == 1 ? exprs1[0] : exprs1.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs1);
						break;
					default:
						this.unexpected(tk6);
					}
					break;
				case 7:
					break _hx_loop3;
				default:
					this.unexpected(tk6);
				}
			}
			return hscript_Expr.ESwitch(e4,cases,def);
		case "throw":
			var e6 = this.parseExpr();
			return hscript_Expr.EThrow(e6);
		case "try":
			var e7 = this.parseExpr();
			var tk7 = this.token();
			if(!Type.enumEq(tk7,hscript_Token.TId("catch"))) {
				this.unexpected(tk7);
			}
			var t7 = this.token();
			if(t7 != hscript_Token.TPOpen) {
				this.unexpected(t7);
			}
			var vname1 = this.getIdent();
			var t8 = this.token();
			if(t8 != hscript_Token.TDoubleDot) {
				this.unexpected(t8);
			}
			var t9 = null;
			if(this.allowTypes) {
				t9 = this.parseType();
			} else {
				tk7 = this.token();
				if(!Type.enumEq(tk7,hscript_Token.TId("Dynamic"))) {
					this.unexpected(tk7);
				}
			}
			var t10 = this.token();
			if(t10 != hscript_Token.TPClose) {
				this.unexpected(t10);
			}
			var ec = this.parseExpr();
			return hscript_Expr.ETry(e7,vname1,t9,ec);
		case "var":
			var ident = this.getIdent();
			var tk8 = this.token();
			var t11 = null;
			if(tk8 == hscript_Token.TDoubleDot && this.allowTypes) {
				t11 = this.parseType();
				tk8 = this.token();
			}
			var e8 = null;
			if(Type.enumEq(tk8,hscript_Token.TOp("="))) {
				e8 = this.parseExpr();
			} else {
				var _this7 = this.tokens;
				_this7.head = new haxe_ds_GenericCell(tk8,_this7.head);
			}
			return hscript_Expr.EVar(ident,t11,e8);
		case "while":
			var econd1 = this.parseExpr();
			var e9 = this.parseExpr();
			return hscript_Expr.EWhile(econd1,e9);
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		switch(tk._hx_index) {
		case 3:
			var op = tk.s;
			var _this = this.unops;
			if(__map_reserved[op] != null ? _this.getReserved(op) : _this.h[op]) {
				if(this.isBlock(e1) || e1._hx_index == 3) {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
					return e1;
				}
				return this.parseExprNext(hscript_Expr.EUnop(op,false,e1));
			}
			return this.makeBinop(op,e1,this.parseExpr());
		case 4:
			return this.parseExprNext(hscript_Expr.ECall(e1,this.parseExprList(hscript_Token.TPClose)));
		case 8:
			var field = this.getIdent();
			return this.parseExprNext(hscript_Expr.EField(e1,field));
		case 11:
			var e2 = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TBkClose) {
				this.unexpected(t);
			}
			return this.parseExprNext(hscript_Expr.EArray(e1,e2));
		case 13:
			var e21 = this.parseExpr();
			var t1 = this.token();
			if(t1 != hscript_Token.TDoubleDot) {
				this.unexpected(t1);
			}
			var e3 = this.parseExpr();
			return hscript_Expr.ETernary(e1,e21,e3);
		default:
			var _this2 = this.tokens;
			_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
			return e1;
		}
	}
	,parseType: function() {
		var t = this.token();
		switch(t._hx_index) {
		case 2:
			var v = t.s;
			var path = [v];
			while(true) {
				t = this.token();
				if(t != hscript_Token.TDot) {
					break;
				}
				path.push(this.getIdent());
			}
			var params = null;
			if(t._hx_index == 3) {
				var op = t.s;
				if(op == "<") {
					params = [];
					_hx_loop2: while(true) {
						params.push(this.parseType());
						t = this.token();
						switch(t._hx_index) {
						case 3:
							var op1 = t.s;
							if(op1 == ">") {
								break _hx_loop2;
							}
							if(HxOverrides.cca(op1,0) == 62) {
								var _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(hscript_Token.TOp(HxOverrides.substr(op1,1,null)),_this.head);
								break _hx_loop2;
							}
							break;
						case 9:
							continue;
						default:
						}
						this.unexpected(t);
					}
				} else {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(t,_this1.head);
				}
			} else {
				var _this2 = this.tokens;
				_this2.head = new haxe_ds_GenericCell(t,_this2.head);
			}
			return this.parseTypeNext(hscript_CType.CTPath(path,params));
		case 4:
			var t1 = this.parseType();
			var t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			return this.parseTypeNext(hscript_CType.CTParent(t1));
		case 6:
			var fields = [];
			var meta = null;
			_hx_loop3: while(true) {
				t = this.token();
				switch(t._hx_index) {
				case 2:
					if(t.s == "var") {
						var name = this.getIdent();
						var t3 = this.token();
						if(t3 != hscript_Token.TDoubleDot) {
							this.unexpected(t3);
						}
						fields.push({ name : name, t : this.parseType(), meta : meta});
						meta = null;
						var t4 = this.token();
						if(t4 != hscript_Token.TSemicolon) {
							this.unexpected(t4);
						}
					} else {
						var name1 = t.s;
						var t5 = this.token();
						if(t5 != hscript_Token.TDoubleDot) {
							this.unexpected(t5);
						}
						fields.push({ name : name1, t : this.parseType(), meta : meta});
						t = this.token();
						switch(t._hx_index) {
						case 7:
							break _hx_loop3;
						case 9:
							break;
						default:
							this.unexpected(t);
						}
					}
					break;
				case 7:
					break _hx_loop3;
				case 15:
					var name2 = t.s;
					if(meta == null) {
						meta = [];
					}
					meta.push({ name : name2, params : this.parseMetaArgs()});
					break;
				default:
					this.unexpected(t);
				}
			}
			return this.parseTypeNext(hscript_CType.CTAnon(fields));
		default:
			return this.unexpected(t);
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		if(tk._hx_index == 3) {
			var op = tk.s;
			if(op != "->") {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				return t;
			}
		} else {
			var _this1 = this.tokens;
			_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
			return t;
		}
		var t2 = this.parseType();
		if(t2._hx_index == 1) {
			var args = t2.args;
			args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = [];
		var tk = this.token();
		if(tk == etk) {
			return args;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk._hx_index != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
			}
		}
		return args;
	}
	,incPos: function() {
	}
	,readChar: function() {
		try {
			return this.input.readByte();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			return 0;
		}
	}
	,readString: function(until) {
		var c = 0;
		var b = new haxe_io_BytesOutput();
		var esc = false;
		var old = this.line;
		var s = this.input;
		while(true) {
			try {
				c = s.readByte();
			} catch( e ) {
				haxe_CallStack.lastException = e;
				var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
				this.line = old;
				throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 34:case 39:case 92:
					b.writeByte(c);
					break;
				case 47:
					if(this.allowJSON) {
						b.writeByte(c);
					} else {
						this.invalidChar(c);
					}
					break;
				case 110:
					b.writeByte(10);
					break;
				case 114:
					b.writeByte(13);
					break;
				case 116:
					b.writeByte(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c);
					}
					var code = null;
					try {
						code = s.readString(4);
					} catch( e2 ) {
						haxe_CallStack.lastException = e2;
						var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
						this.line = old;
						throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
					}
					var k = 0;
					var _g = 0;
					while(_g < 4) {
						var i = _g++;
						k <<= 4;
						var char = HxOverrides.cca(code,i);
						if(char == null) {
							this.invalidChar(char);
						} else {
							switch(char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								k += char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								k += char - 55;
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								k += char - 87;
								break;
							default:
								this.invalidChar(char);
							}
						}
					}
					if(k <= 127) {
						b.writeByte(k);
					} else if(k <= 2047) {
						b.writeByte(192 | k >> 6);
						b.writeByte(128 | k & 63);
					} else {
						b.writeByte(224 | k >> 12);
						b.writeByte(128 | k >> 6 & 63);
						b.writeByte(128 | k & 63);
					}
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) {
				esc = true;
			} else if(c == until) {
				break;
			} else {
				if(c == 10) {
					this.line++;
				}
				b.writeByte(c);
			}
		}
		return b.getBytes().toString();
	}
	,token: function() {
		if(this.tokens.head != null) {
			var _this = this.tokens;
			var k = _this.head;
			if(k == null) {
				return null;
			} else {
				_this.head = k.next;
				return k.elt;
			}
		}
		var char;
		if(this.char < 0) {
			char = this.readChar();
		} else {
			char = this.char;
			this.char = -1;
		}
		while(true) {
			switch(char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				break;
			case 9:case 13:case 32:
				break;
			case 34:
				return hscript_Token.TConst(hscript_Const.CString(this.readString(34)));
			case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString(39)));
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				char = this.readChar();
				switch(char) {
				case 46:
					char = this.readChar();
					if(char != 46) {
						this.invalidChar(char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n = char - 48;
					var exp = 1;
					while(true) {
						char = this.readChar();
						exp *= 10;
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + (char - 48);
							break;
						default:
							this.char = char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this.char = char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n1 = (char - 48) * 1.0;
				var exp1 = 0.;
				while(true) {
					char = this.readChar();
					exp1 *= 10;
					switch(char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.readChar() == 46) {
								var _this1 = this.tokens;
								_this1.head = new haxe_ds_GenericCell(hscript_Token.TOp("..."),_this1.head);
								var i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar(char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + (char - 48);
						break;
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar(char);
						}
						var n2 = 0;
						while(true) {
							char = this.readChar();
							switch(char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n2 = (n2 << 4) + char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n2 = (n2 << 4) + (char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n2 = (n2 << 4) + (char - 87);
								break;
							default:
								this.char = char;
								return hscript_Token.TConst(hscript_Const.CInt(n2));
							}
						}
						break;
					default:
						this.char = char;
						var i1 = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i1 == n1 ? hscript_Const.CInt(i1) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				char = this.readChar();
				if(char == 61) {
					return hscript_Token.TOp("==");
				} else if(char == 62) {
					return hscript_Token.TOp("=>");
				}
				this.char = char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				char = this.readChar();
				if(this.idents[char] || char == 58) {
					var id = String.fromCharCode(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TMeta(id);
						}
						id += String.fromCharCode(char);
					}
				}
				this.invalidChar(char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[char]) {
					var op = String.fromCharCode(char);
					var prev = -1;
					while(true) {
						char = this.readChar();
						if(!this.ops[char] || prev == 61) {
							if(HxOverrides.cca(op,0) == 47) {
								return this.tokenComment(op,char);
							}
							this.char = char;
							return hscript_Token.TOp(op);
						}
						prev = char;
						op += String.fromCharCode(char);
					}
				}
				if(this.idents[char]) {
					var id1 = String.fromCharCode(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TId(id1);
						}
						id1 += String.fromCharCode(char);
					}
				}
				this.invalidChar(char);
			}
			char = this.readChar();
		}
	}
	,tokenComment: function(op,char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			try {
				while(char != 13 && char != 10) char = s.readByte();
				this.char = char;
			} catch( e ) {
				haxe_CallStack.lastException = e;
				var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			}
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			if(op == "/**/") {
				this.char = char;
				return this.token();
			}
			try {
				while(true) {
					while(char != 42) {
						if(char == 10) {
							this.line++;
						}
						char = s.readByte();
					}
					char = s.readByte();
					if(char == 47) {
						break;
					}
				}
			} catch( e2 ) {
				haxe_CallStack.lastException = e2;
				var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
				this.line = old;
				throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedComment);
			}
			return this.token();
		}
		this.char = char;
		return hscript_Token.TOp(op);
	}
	,constString: function(c) {
		switch(c._hx_index) {
		case 0:
			var v = c.v;
			if(v == null) {
				return "null";
			} else {
				return "" + v;
			}
			break;
		case 1:
			var f = c.f;
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 2:
			var s = c.s;
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t._hx_index) {
		case 0:
			return "<eof>";
		case 1:
			var c = t.c;
			return this.constString(c);
		case 2:
			var s = t.s;
			return s;
		case 3:
			var s1 = t.s;
			return s1;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			var id = t.s;
			return "@" + id;
		}
	}
	,__class__: hscript_Parser
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if((o instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g11 = 0;
			var _g3 = l;
			while(_g11 < _g3) {
				var i1 = _g11++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if((o instanceof cl)) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if((o instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return $hxEnums[o.__enum__] == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null ? 0 : byteOffset;
	this.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.byteLength = this.length;
	this.byteOffset = this.offset;
	this.buffer = this.buf;
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		var i = this.getInt32(byteOffset,littleEndian);
		var sign = 1 - (i >>> 31 << 1);
		var e = i >> 23 & 255;
		if(e == 255) {
			if((i & 8388607) == 0) {
				if(sign > 0) {
					return Infinity;
				} else {
					return -Infinity;
				}
			} else {
				return NaN;
			}
		} else {
			var m = e == 0 ? (i & 8388607) << 1 : i & 8388607 | 8388608;
			return sign * m * Math.pow(2,e - 150);
		}
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		var lo = littleEndian ? a : b;
		var hi = littleEndian ? b : a;
		var sign = 1 - (hi >>> 31 << 1);
		var e = hi >> 20 & 2047;
		if(e == 2047) {
			if(lo == 0 && (hi & 1048575) == 0) {
				if(sign > 0) {
					return Infinity;
				} else {
					return -Infinity;
				}
			} else {
				return NaN;
			}
		} else {
			var m = 2.220446049250313e-16 * ((hi & 1048575) * 4294967296. + (lo >>> 31) * 2147483648. + (lo & 2147483647));
			if(e == 0) {
				m *= 2.0;
			} else {
				m += 1.0;
			}
			return sign * m * Math.pow(2,e - 1023);
		}
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0 ? value + 128 & 255 : value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0 ? value + 65536 : value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		var tmp;
		if(value == 0) {
			tmp = 0;
		} else {
			var af = value < 0 ? -value : value;
			var exp = Math.floor(Math.log(af) / 0.6931471805599453);
			if(exp > 127) {
				tmp = 2139095040;
			} else {
				if(exp <= -127) {
					exp = -127;
					af *= 7.1362384635298e+44;
				} else {
					af = (af / Math.pow(2,exp) - 1.0) * 8388608;
				}
				tmp = (value < 0 ? -2147483648 : 0) | exp + 127 << 23 | Math.round(af);
			}
		}
		this.setUint32(byteOffset,tmp,littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.i64tmp;
		if(value == 0) {
			i64.low = 0;
			i64.high = 0;
		} else if(!isFinite(value)) {
			i64.low = 0;
			i64.high = value > 0 ? 2146435072 : -1048576;
		} else {
			var av = value < 0 ? -value : value;
			var exp = Math.floor(Math.log(av) / 0.6931471805599453);
			if(exp > 1023) {
				i64.low = -1;
				i64.high = 2146435071;
			} else {
				if(exp <= -1023) {
					exp = -1023;
					av /= 2.2250738585072014e-308;
				} else {
					av = av / Math.pow(2,exp) - 1.0;
				}
				var sig = Math.round(av * 4503599627370496.);
				var sig_l = sig | 0;
				var sig_h = sig / 4294967296.0 | 0;
				i64.low = sig_l;
				i64.high = (value < 0 ? -2147483648 : 0) | exp + 1023 << 20 | sig_h;
			}
		}
		var i641 = i64;
		if(littleEndian) {
			this.setUint32(byteOffset,i641.low,true);
			this.setUint32(byteOffset + 4,i641.high,true);
		} else {
			this.setUint32(byteOffset,i641.high,false);
			this.setUint32(byteOffset + 4,i641.low,false);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if((arg1 instanceof js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(offset == null) {
		offset = 0;
	}
	if((arg.buffer instanceof js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var panels_Khanvas = function() {
	var _gthis = this;
	haxe_ui_core_Component.call(this);
	var c0 = new haxe_ui_containers_VBox();
	var c1 = new custom_Canvas();
	c1.set_id("khanvas-container");
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c1.set_styleString("background-color: #1E1E1E;");
	c0.addComponent(c1);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("fullscreen");
	c11.set_text("Fullscreen");
	c11.set_horizontalAlign("right");
	c0.addComponent(c11);
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleNames("container");
	c0.set_script("");
	this.addComponent(c0);
	this.addClass("khanvas-container");
	this.addClass("custom-component");
	this.fullscreen = this.findComponent("fullscreen",haxe_ui_components_Button,true);
	this.khanvasContainer = this.findComponent("khanvas-container",custom_Canvas,true);
	this.fullscreen.set_onClick(function(e) {
		_gthis.khanvasContainer.fullscreen();
	});
};
$hxClasses["panels.Khanvas"] = panels_Khanvas;
panels_Khanvas.__name__ = ["panels","Khanvas"];
panels_Khanvas.__super__ = haxe_ui_core_Component;
panels_Khanvas.prototype = $extend(haxe_ui_core_Component.prototype,{
	cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new panels_Khanvas();
	}
	,__class__: panels_Khanvas
});
var panels_Log = function() {
	var _gthis = this;
	haxe_ui_core_Component.call(this);
	var c0 = new haxe_ui_containers_VBox();
	var c1 = new haxe_ui_containers_ScrollView();
	c1.set_id("log");
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c1.set_percentContentWidth(100.);
	c1.set_styleString("border: none;");
	c0.addComponent(c1);
	var c11 = new haxe_ui_containers_HBox();
	var c2 = new haxe_ui_components_Button();
	c2.set_id("copyLog");
	c2.set_text("Copy");
	c11.addComponent(c2);
	var c21 = new haxe_ui_components_Button();
	c21.set_id("clearLog");
	c21.set_text("Clear");
	c11.addComponent(c21);
	c11.set_horizontalAlign("right");
	c0.addComponent(c11);
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleNames("container");
	c0.set_script("");
	this.addComponent(c0);
	this.addClass("log-container");
	this.addClass("custom-component");
	this.copyLog = this.findComponent("copyLog",haxe_ui_components_Button,true);
	this.log = this.findComponent("log",haxe_ui_containers_ScrollView,true);
	this.clearLog = this.findComponent("clearLog",haxe_ui_components_Button,true);
	panels_Log.instance = this;
	this.clearLog.set_onClick(function(e) {
		_gthis.log.clearContents();
	});
	this.copyLog.set_onClick(function(e1) {
		var data = "";
		var _g = 0;
		var _g1 = _gthis.log.get_contents().get_childComponents();
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			data += c.findComponent(null,haxe_ui_components_Label).get_text() + "\n";
		}
		var temp = window.document.createElement("textarea");
		temp.style.border = "none";
		temp.style.outline = "none";
		temp.style.boxShadow = "none";
		temp.style.background = "transparent";
		window.document.body.appendChild(temp);
		temp.value = data;
		temp.select();
		try {
			var successful = window.document.execCommand("copy");
		} catch( e2 ) {
			haxe_CallStack.lastException = e2;
			var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
		}
		window.document.body.removeChild(temp);
	});
};
$hxClasses["panels.Log"] = panels_Log;
panels_Log.__name__ = ["panels","Log"];
panels_Log.__super__ = haxe_ui_core_Component;
panels_Log.prototype = $extend(haxe_ui_core_Component.prototype,{
	logMessage: function(message,error) {
		if(error == null) {
			error = false;
		}
		var _gthis = this;
		if(StringTools.startsWith(message,"Using Kha from ")) {
			this.khaLocation = message.substring("Using Kha from ".length);
			var parts = this.khaLocation.split("\\");
			parts.pop();
			this.kgLocationWin = parts.join("\\");
			var parts1 = this.khaLocation.split("/");
			parts1.pop();
			this.kgLocationLin = parts1.join("/");
			return;
		}
		if(this.kgLocationWin != null) {
			message = StringTools.replace(message,this.kgLocationWin + "\\Projects\\Checkouts\\" + project_Project.get_instance().sha + "\\","");
		}
		if(this.kgLocationLin != null) {
			message = StringTools.replace(message,this.kgLocationLin + "/Projects/Checkouts/" + project_Project.get_instance().sha + "/","");
		}
		var hbox = new haxe_ui_containers_HBox();
		hbox.set_percentWidth(100);
		var label = new haxe_ui_components_Label();
		label.set_percentWidth(100);
		label.set_text(message);
		if(error == true) {
			label.set_styleNames("error");
		}
		hbox.addComponent(label);
		this.log.addComponent(hbox);
		haxe_ui_util_Timer.delay(function() {
			_gthis.log.set_vscrollPos(_gthis.log.get_vscrollMax() + 200);
		},50);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new panels_Log();
	}
	,__class__: panels_Log
});
var project_IProjectListener = function() { };
$hxClasses["project.IProjectListener"] = project_IProjectListener;
project_IProjectListener.__name__ = ["project","IProjectListener"];
project_IProjectListener.prototype = {
	__class__: project_IProjectListener
};
var panels_ResourceManager = function() {
	this._loaded = false;
	var _gthis = this;
	haxe_ui_core_Component.call(this);
	var c0 = new haxe_ui_containers_VBox();
	var c1 = new custom_TreeView();
	c1.set_id("resourceTree");
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c0.addComponent(c1);
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleNames("container");
	c0.set_script("");
	this.addComponent(c0);
	this.addClass("resourcemanager-container");
	this.addClass("custom-component");
	this.resourceTree = this.findComponent("resourceTree",custom_TreeView,true);
	panels_ResourceManager.instance = this;
	EventDispatcher.get_instance().registerListener(this);
	this.resourceTree.set_onChange(function(e) {
		project_Project.get_instance().set_activeResource(_gthis.resourceTree.selectedNode.userData);
		EventDispatcher.get_instance().dispatchEvent(0,_gthis.resourceTree.selectedNode.userData);
	});
};
$hxClasses["panels.ResourceManager"] = panels_ResourceManager;
panels_ResourceManager.__name__ = ["panels","ResourceManager"];
panels_ResourceManager.__interfaces__ = [IListener,project_IProjectListener];
panels_ResourceManager.__super__ = haxe_ui_core_Component;
panels_ResourceManager.prototype = $extend(haxe_ui_core_Component.prototype,{
	projectRefreshed: function() {
		this.resourceTree.clear();
		var _g = 0;
		var _g1 = project_Project.get_instance().resourcesRoot.flatten();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			this.resourceTree.addNode(r.get_fullName(),r.get_icon()).userData = r;
		}
		this._loaded = true;
	}
	,projectResourceAdded: function(resource) {
		if(this._loaded == false) {
			return;
		}
		this.resourceTree.clear();
		var _g = 0;
		var _g1 = project_Project.get_instance().resourcesRoot.flatten();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			this.resourceTree.addNode(r.get_fullName(),r.get_icon()).userData = r;
		}
	}
	,activeResourceChanged: function(resource) {
	}
	,onEvent: function(event,data) {
		if(event == 0) {
			var resource = data;
			haxe_Log.trace(resource.get_fullName(),{ fileName : "src/panels/ResourceManager.hx", lineNumber : 59, className : "panels.ResourceManager", methodName : "onEvent"});
			this.resourceTree.findNode(resource.get_fullName()).select();
		}
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new panels_ResourceManager();
	}
	,__class__: panels_ResourceManager
});
var panels_Tabs = function() {
	var _gthis = this;
	haxe_ui_core_Component.call(this);
	var c0 = new haxe_ui_containers_VBox();
	var c1 = new haxe_ui_containers_TabView();
	c1.set_id("resources");
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c0.addComponent(c1);
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_script("");
	this.addComponent(c0);
	this.addClass("tabs-container");
	this.addClass("custom-component");
	this.resources = this.findComponent("resources",haxe_ui_containers_TabView,true);
	EventDispatcher.get_instance().registerListener(this);
	this.resources.set_onBeforeChange(function(e) {
		if(_gthis.resources.get_selectedPage() == null) {
			return;
		}
		project_Project.get_instance().saveAll();
	});
	this.resources.set_onChange(function(e1) {
		if(_gthis.resources.get_selectedPage() == null) {
			return;
		}
		project_Project.get_instance().set_activeResource(_gthis.resources.get_selectedPage().userData.resource);
	});
};
$hxClasses["panels.Tabs"] = panels_Tabs;
panels_Tabs.__name__ = ["panels","Tabs"];
panels_Tabs.__interfaces__ = [IListener,project_IProjectListener];
panels_Tabs.__super__ = haxe_ui_core_Component;
panels_Tabs.prototype = $extend(haxe_ui_core_Component.prototype,{
	projectRefreshed: function() {
	}
	,onEvent: function(event,data) {
		var _gthis = this;
		if(event == 0) {
			var resource = data;
			haxe_ui_util_Timer.delay(function() {
				var index = _gthis.indexFromResource(resource);
				if(index != -1) {
					_gthis.resources.set_pageIndex(index);
				}
			},100);
		}
	}
	,removeAllTabs: function() {
		this.resources.removeAllPages();
	}
	,projectResourceAdded: function(resource) {
		var editor = null;
		var _g = resource.type;
		switch(_g) {
		case 2:
			editor = new editors_SourceEditor(resource,this.resources);
			break;
		case 3:
			editor = new editors_ShaderEditor(resource,this.resources);
			break;
		case 4:
			editor = new editors_AssetEditor(resource,this.resources);
			break;
		default:
		}
		if(editor != null) {
			editor.set_percentWidth(editor.set_percentHeight(100));
			editor.set_text(resource.name);
			editor.set_icon(resource.get_icon());
			editor.userData = { resource : resource, index : this.resources.get_pageCount()};
			this.resources.addComponent(editor);
		}
	}
	,activeResourceChanged: function(resource) {
		var index = this.indexFromResource(resource);
		if(index != -1) {
			this.resources.set_pageIndex(index);
		}
	}
	,indexFromResource: function(resource) {
		var index = -1;
		var n = 0;
		var _g = 0;
		var _g1 = this.resources.get_pages();
		while(_g < _g1.length) {
			var page = _g1[_g];
			++_g;
			if(page.userData.resource == resource) {
				index = n;
				break;
			}
			++n;
		}
		return index;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		return c;
	}
	,self: function() {
		return new panels_Tabs();
	}
	,__class__: panels_Tabs
});
var project_Project = function() {
	this._listeners = [];
	this.resourcesRoot = new project_Resource(1);
};
$hxClasses["project.Project"] = project_Project;
project_Project.__name__ = ["project","Project"];
project_Project.__properties__ = {get_instance:"get_instance"};
project_Project.get_instance = function() {
	if(project_Project._instance == null) {
		project_Project._instance = new project_Project();
	}
	return project_Project._instance;
};
project_Project.prototype = {
	addResource: function(type,name,content) {
		if(content == null) {
			content = "";
		}
		var r = null;
		switch(type) {
		case 2:
			var folder = this.resourcesRoot.findResource(1,"Sources");
			if(folder == null) {
				folder = this.resourcesRoot.addResource(1,"Sources");
			}
			r = folder.addResource(type,name,content);
			break;
		case 3:
			var folder1 = this.resourcesRoot.findResource(1,"Shaders");
			if(folder1 == null) {
				folder1 = this.resourcesRoot.addResource(1,"Shaders");
			}
			r = folder1.addResource(type,name,content);
			break;
		case 4:
			var folder2 = this.resourcesRoot.findResource(1,"Assets");
			if(folder2 == null) {
				folder2 = this.resourcesRoot.addResource(1,"Assets");
			}
			r = folder2.addResource(type,name,content);
			break;
		default:
			r = this.resourcesRoot.addResource(type,name,content);
		}
		var _g = 0;
		var _g1 = this._listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l.projectResourceAdded(r);
		}
		return r;
	}
	,findResource: function(type,name) {
		return this.resourcesRoot.findResource(type,name);
	}
	,hasResource: function(type,name) {
		return this.resourcesRoot.hasResource(type,name);
	}
	,registerListener: function(listener) {
		this._listeners.push(listener);
	}
	,get_activeResource: function() {
		return this._activeResource;
	}
	,set_activeResource: function(value) {
		if(value == this._activeResource) {
			return value;
		}
		this._activeResource = value;
		var _g = 0;
		var _g1 = this._listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l.activeResourceChanged(this._activeResource);
		}
		return value;
	}
	,refresh: function(sha,callback) {
		var _gthis = this;
		this.sha = sha;
		Server.sources(sha).handle(function(sources) {
			var _g = 0;
			while(_g < sources.length) {
				var source = [sources[_g]];
				++_g;
				Server.source(sha,source[0]).handle((function(source1) {
					return function(content) {
						_gthis.addResource(2,source1[0],content);
					};
				})(source));
			}
			Server.shaders(sha).handle(function(shaders) {
				var _g1 = 0;
				while(_g1 < shaders.length) {
					var shader = [shaders[_g1]];
					++_g1;
					Server.shader(sha,shader[0]).handle((function(shader1) {
						return function(content1) {
							_gthis.addResource(3,shader1[0],content1);
						};
					})(shader));
				}
				Server.assets(sha).handle(function(assets) {
					var _g2 = 0;
					while(_g2 < assets.length) {
						var asset = assets[_g2];
						++_g2;
						_gthis.addResource(4,asset);
					}
				});
				var cookie = window.document.cookie.split(";");
				var lastFile = null;
				var _g3 = 0;
				while(_g3 < cookie.length) {
					var c = cookie[_g3];
					++_g3;
					c = StringTools.trim(c);
					var parts = c.split("=");
					if(StringTools.trim(parts[0]) == "lastFile") {
						lastFile = StringTools.trim(parts[1]);
						break;
					}
				}
				var lastResource = null;
				var _g4 = 0;
				var _g11 = _gthis.resourcesRoot.flatten();
				while(_g4 < _g11.length) {
					var r = _g11[_g4];
					++_g4;
					if(r.get_fullName() == lastFile) {
						lastResource = r;
						break;
					}
				}
				if(lastResource != null) {
					_gthis.set_activeResource(lastResource);
				}
				if(callback != null) {
					callback();
				}
				var _g5 = 0;
				var _g12 = _gthis._listeners;
				while(_g5 < _g12.length) {
					var l = _g12[_g5];
					++_g5;
					l.projectRefreshed();
				}
			});
		});
	}
	,saveAll: function(cb,autoSave) {
		if(autoSave == null) {
			autoSave = false;
		}
		var _gthis = this;
		var oldSha = this.sha;
		this.saveResources(this.resourcesRoot.flatten(),function() {
			if(_gthis.sha != oldSha) {
				window.history.pushState("","","#" + _gthis.sha);
			}
			if(cb != null) {
				cb();
			}
		},autoSave);
	}
	,saveResources: function(list,callback,autoSave) {
		var _gthis = this;
		if(list.length == 0) {
			callback();
			return;
		}
		var resource = list.shift();
		if(resource.get_dirty() == true) {
			var _g = resource.type;
			switch(_g) {
			case 2:
				Server.setSource(this.sha,StringTools.replace(resource.get_fullName(),"Sources/",""),resource.content).handle(function(newSha) {
					_gthis.sha = newSha;
					MainView.updateSha(_gthis.sha);
					resource.set_dirty(false);
					if(autoSave == true) {
						panels_Log.instance.logMessage("'" + resource.get_fullName() + "' auto saved");
					} else {
						panels_Log.instance.logMessage("'" + resource.get_fullName() + "' saved");
					}
					_gthis.saveResources(list,callback,autoSave);
				});
				break;
			case 3:
				Server.setShader(this.sha,StringTools.replace(resource.get_fullName(),"Shaders/",""),resource.content).handle(function(newSha1) {
					_gthis.sha = newSha1;
					MainView.updateSha(_gthis.sha);
					resource.set_dirty(false);
					if(autoSave == true) {
						panels_Log.instance.logMessage("'" + resource.get_fullName() + "' auto saved");
					} else {
						panels_Log.instance.logMessage("'" + resource.get_fullName() + "' saved");
					}
					_gthis.saveResources(list,callback,autoSave);
				});
				break;
			default:
				this.saveResources(list,callback,autoSave);
			}
		} else {
			this.saveResources(list,callback,autoSave);
		}
	}
	,build: function(name,content) {
		var _gthis = this;
		this.saveAll(function() {
			Server.compile(_gthis.sha).handle(function(result) {
				WorkerKha.instance.load("/projects/" + _gthis.sha + "/khaworker.js");
			});
		});
	}
	,inject: function(name,content) {
		var _gthis = this;
		this.saveAll(function() {
			Server.compile(_gthis.sha).handle(function(result) {
				WorkerKha.instance.inject("/projects/" + _gthis.sha + "/khaworker.js");
			});
		});
	}
	,download: function() {
		var _gthis = this;
		Server.download(this.sha).handle(function(e) {
			window.location.replace("/archives/" + _gthis.sha + ".zip");
		});
	}
	,__class__: project_Project
	,__properties__: {set_activeResource:"set_activeResource",get_activeResource:"get_activeResource"}
};
var project_Resource = function(type,name,parent,content) {
	if(content == null) {
		content = "";
	}
	this._dirty = false;
	this._listeners = [];
	this.type = type;
	this.name = name;
	this.parent = parent;
	this.content = content;
};
$hxClasses["project.Resource"] = project_Resource;
project_Resource.__name__ = ["project","Resource"];
project_Resource.prototype = {
	addListener: function(l) {
		this._listeners.push(l);
	}
	,get_dirty: function() {
		return this._dirty;
	}
	,set_dirty: function(value) {
		if(value == this._dirty) {
			return value;
		}
		this._dirty = value;
		var _g = 0;
		var _g1 = this._listeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l.onDirtyChanged();
		}
		return value;
	}
	,get_childResources: function() {
		if(this._childResources == null) {
			return [];
		}
		return this._childResources;
	}
	,flatten: function() {
		var resources = [];
		resources = resources.concat(this.get_childResources());
		var _g = 0;
		var _g1 = this.get_childResources();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			resources = resources.concat(r.flatten());
		}
		return resources;
	}
	,addResource: function(type,name,content) {
		if(content == null) {
			content = "";
		}
		if(this.type != 1) {
			throw new js__$Boot_HaxeError("Can only added child resources to a folder");
		}
		if(this.hasResource(type,name)) {
			return this.findResource(type,name);
		}
		if(this._childResources == null) {
			this._childResources = [];
		}
		var resource = null;
		if(name.indexOf("/") != -1) {
			var path = name.split("/");
			name = path.pop();
			var ref = this;
			var _g = 0;
			while(_g < path.length) {
				var p = path[_g];
				++_g;
				p = StringTools.trim(p);
				if(p.length == 0) {
					continue;
				}
				ref = ref.addResource(1,p);
			}
			resource = ref.addResource(type,name,content);
		} else {
			resource = new project_Resource(type,name,this,content);
			this._childResources.push(resource);
		}
		this.sort();
		return resource;
	}
	,sort: function() {
		if(this._childResources != null) {
			this._childResources.sort(function(r1,r2) {
				if(r1.type == 1 && r2.type != 1) {
					return -1;
				}
				if(r1.type != 1 && r2.type == 1) {
					return 1;
				}
				var a = r1.name.toLowerCase();
				var b = r2.name.toLowerCase();
				if(a < b) {
					return -1;
				}
				if(a > b) {
					return 1;
				}
				return 0;
			});
		}
	}
	,findResource: function(type,name) {
		var match = null;
		if(this._childResources != null) {
			var _g = 0;
			var _g1 = this._childResources;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.type == type && child.name.toLowerCase() == name.toLowerCase()) {
					match = child;
					break;
				}
			}
		}
		return match;
	}
	,hasResource: function(type,name) {
		return this.findResource(type,name) != null;
	}
	,get_icon: function() {
		var icon = null;
		var _g = this.type;
		switch(_g) {
		case 1:
			icon = "img/folder.png";
			break;
		case 2:
			icon = "img/file_grey.png";
			break;
		case 3:
			icon = "img/layers_grey.png";
			break;
		case 4:
			icon = IconUtil.assetIcon(this.name);
			break;
		default:
		}
		return icon;
	}
	,get_fullName: function() {
		var p = this.parent;
		var parts = [];
		while(p != null) {
			if(p.name != null) {
				parts.push(p.name);
			}
			p = p.parent;
		}
		parts.reverse();
		parts.push(this.name);
		return parts.join("/");
	}
	,toString: function() {
		return this.get_fullName();
	}
	,__class__: project_Resource
	,__properties__: {get_fullName:"get_fullName",get_icon:"get_icon",get_childResources:"get_childResources",set_dirty:"set_dirty",get_dirty:"get_dirty"}
};
var tink_core_Annex = function(target) {
	this.target = target;
	this.registry = new haxe_ds_ObjectMap();
};
$hxClasses["tink.core.Annex"] = tink_core_Annex;
tink_core_Annex.__name__ = ["tink","core","Annex"];
tink_core_Annex.prototype = {
	__class__: tink_core_Annex
};
var tink_core__$Any_Any_$Impl_$ = {};
$hxClasses["tink.core._Any.Any_Impl_"] = tink_core__$Any_Any_$Impl_$;
tink_core__$Any_Any_$Impl_$.__name__ = ["tink","core","_Any","Any_Impl_"];
tink_core__$Any_Any_$Impl_$.__promote = function(this1) {
	return this1;
};
var tink_core__$Callback_Callback_$Impl_$ = {};
$hxClasses["tink.core._Callback.Callback_Impl_"] = tink_core__$Callback_Callback_$Impl_$;
tink_core__$Callback_Callback_$Impl_$.__name__ = ["tink","core","_Callback","Callback_Impl_"];
tink_core__$Callback_Callback_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.toFunction = function(this1) {
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.invoke = function(this1,data) {
	if(tink_core__$Callback_Callback_$Impl_$.depth < 1000) {
		tink_core__$Callback_Callback_$Impl_$.depth++;
		this1(data);
		tink_core__$Callback_Callback_$Impl_$.depth--;
	} else {
		var _e = this1;
		var f = function(data1) {
			tink_core__$Callback_Callback_$Impl_$.invoke(_e,data1);
		};
		var data2 = data;
		tink_core__$Callback_Callback_$Impl_$.defer(function() {
			f(data2);
		});
	}
};
tink_core__$Callback_Callback_$Impl_$.ignore = function(cb) {
	return tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,tink_core_Noise.Noise);
	});
};
tink_core__$Callback_Callback_$Impl_$.fromNiladic = function(f) {
	var this1 = function(r) {
		f();
	};
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.fromMany = function(callbacks) {
	return function(v) {
		var _g = 0;
		while(_g < callbacks.length) {
			var callback = callbacks[_g];
			++_g;
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,v);
		}
	};
};
tink_core__$Callback_Callback_$Impl_$.defer = function(f) {
	haxe_Timer.delay(f,0);
};
var tink_core__$Callback_LinkObject = function() { };
$hxClasses["tink.core._Callback.LinkObject"] = tink_core__$Callback_LinkObject;
tink_core__$Callback_LinkObject.__name__ = ["tink","core","_Callback","LinkObject"];
tink_core__$Callback_LinkObject.prototype = {
	__class__: tink_core__$Callback_LinkObject
};
var tink_core__$Callback_CallbackLink_$Impl_$ = {};
$hxClasses["tink.core._Callback.CallbackLink_Impl_"] = tink_core__$Callback_CallbackLink_$Impl_$;
tink_core__$Callback_CallbackLink_$Impl_$.__name__ = ["tink","core","_Callback","CallbackLink_Impl_"];
tink_core__$Callback_CallbackLink_$Impl_$._new = function(link) {
	var this1 = new tink_core__$Callback_SimpleLink(link);
	return this1;
};
tink_core__$Callback_CallbackLink_$Impl_$.dissolve = function(this1) {
	if(this1 != null) {
		this1.dissolve();
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.toCallback = function(this1) {
	return function(_) {
		this1.dissolve();
	};
};
tink_core__$Callback_CallbackLink_$Impl_$.fromFunction = function(f) {
	var this1 = new tink_core__$Callback_SimpleLink(f);
	return this1;
};
tink_core__$Callback_CallbackLink_$Impl_$.join = function(a,b) {
	return new tink_core__$Callback_LinkPair(a,b);
};
tink_core__$Callback_CallbackLink_$Impl_$.fromMany = function(callbacks) {
	var this1 = new tink_core__$Callback_SimpleLink(function() {
		var _g = 0;
		while(_g < callbacks.length) {
			var cb = callbacks[_g];
			++_g;
			if(cb != null) {
				cb.dissolve();
			}
		}
	});
	return this1;
};
var tink_core__$Callback_SimpleLink = function(f) {
	this.f = f;
};
$hxClasses["tink.core._Callback.SimpleLink"] = tink_core__$Callback_SimpleLink;
tink_core__$Callback_SimpleLink.__name__ = ["tink","core","_Callback","SimpleLink"];
tink_core__$Callback_SimpleLink.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_SimpleLink.prototype = {
	dissolve: function() {
		if(this.f != null) {
			this.f();
		}
	}
	,__class__: tink_core__$Callback_SimpleLink
};
var tink_core__$Callback_LinkPair = function(a,b) {
	this.dissolved = false;
	this.a = a;
	this.b = b;
};
$hxClasses["tink.core._Callback.LinkPair"] = tink_core__$Callback_LinkPair;
tink_core__$Callback_LinkPair.__name__ = ["tink","core","_Callback","LinkPair"];
tink_core__$Callback_LinkPair.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_LinkPair.prototype = {
	dissolve: function() {
		if(!this.dissolved) {
			this.dissolved = true;
			var this1 = this.a;
			if(this1 != null) {
				this1.dissolve();
			}
			var this2 = this.b;
			if(this2 != null) {
				this2.dissolve();
			}
		}
	}
	,__class__: tink_core__$Callback_LinkPair
};
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw new js__$Boot_HaxeError("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
$hxClasses["tink.core._Callback.ListCell"] = tink_core__$Callback_ListCell;
tink_core__$Callback_ListCell.__name__ = ["tink","core","_Callback","ListCell"];
tink_core__$Callback_ListCell.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_ListCell.prototype = {
	invoke: function(data) {
		if(this.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(this.cb,data);
		}
	}
	,clear: function() {
		this.list = null;
		this.cb = null;
	}
	,dissolve: function() {
		var _g = this.list;
		if(_g != null) {
			var v = _g;
			this.clear();
			HxOverrides.remove(v,this);
		}
	}
	,__class__: tink_core__$Callback_ListCell
};
var tink_core__$Callback_CallbackList_$Impl_$ = {};
$hxClasses["tink.core._Callback.CallbackList_Impl_"] = tink_core__$Callback_CallbackList_$Impl_$;
tink_core__$Callback_CallbackList_$Impl_$.__name__ = ["tink","core","_Callback","CallbackList_Impl_"];
tink_core__$Callback_CallbackList_$Impl_$.__properties__ = {get_length:"get_length"};
tink_core__$Callback_CallbackList_$Impl_$._new = function() {
	var this1 = [];
	return this1;
};
tink_core__$Callback_CallbackList_$Impl_$.get_length = function(this1) {
	return this1.length;
};
tink_core__$Callback_CallbackList_$Impl_$.add = function(this1,cb) {
	var node = new tink_core__$Callback_ListCell(cb,this1);
	this1.push(node);
	return node;
};
tink_core__$Callback_CallbackList_$Impl_$.invoke = function(this1,data) {
	var _g = 0;
	var _g1 = this1.slice();
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cell.cb,data);
		}
	}
};
tink_core__$Callback_CallbackList_$Impl_$.clear = function(this1) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		cell.clear();
	}
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.isTinkError = true;
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
$hxClasses["tink.core.TypedError"] = tink_core_TypedError;
tink_core_TypedError.__name__ = ["tink","core","TypedError"];
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.ofJsError = function(e,pos) {
	return tink_core_TypedError.withData(500,e.message,e,pos);
};
tink_core_TypedError.asError = function(v) {
	if(v != null && v.isTinkError) {
		return v;
	} else {
		return null;
	}
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		var _g = tink_core_TypedError.asError(e1);
		var tmp;
		if(_g == null) {
			tmp = report == null ? tink_core_TypedError.withData(null,"Unexpected Error",e1,pos) : report(e1);
		} else {
			var e2 = _g;
			tmp = e2;
		}
		return tink_core_Outcome.Failure(tmp);
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw js__$Boot_HaxeError.wrap(any);
};
tink_core_TypedError.prototype = {
	printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,throwSelf: function() {
		var any = this;
		throw js__$Boot_HaxeError.wrap(any);
	}
	,__class__: tink_core_TypedError
};
var tink_core__$Error_Stack_$Impl_$ = {};
$hxClasses["tink.core._Error.Stack_Impl_"] = tink_core__$Error_Stack_$Impl_$;
tink_core__$Error_Stack_$Impl_$.__name__ = ["tink","core","_Error","Stack_Impl_"];
tink_core__$Error_Stack_$Impl_$.toString = function(this1) {
	return "Error stack not available. Compile with -D error_stack.";
};
var tink_core__$Future_FutureObject = function() { };
$hxClasses["tink.core._Future.FutureObject"] = tink_core__$Future_FutureObject;
tink_core__$Future_FutureObject.__name__ = ["tink","core","_Future","FutureObject"];
tink_core__$Future_FutureObject.prototype = {
	__class__: tink_core__$Future_FutureObject
};
var tink_core__$Future_NeverFuture = function() {
};
$hxClasses["tink.core._Future.NeverFuture"] = tink_core__$Future_NeverFuture;
tink_core__$Future_NeverFuture.__name__ = ["tink","core","_Future","NeverFuture"];
tink_core__$Future_NeverFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NeverFuture.prototype = {
	map: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,flatMap: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,handle: function(callback) {
		return null;
	}
	,gather: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,eager: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,__class__: tink_core__$Future_NeverFuture
};
var tink_core_Noise = $hxEnums["tink.core.Noise"] = { __ename__ : true, __constructs__ : ["Noise"]
	,Noise: {_hx_index:0,__enum__:"tink.core.Noise",toString:$estr}
};
var tink_core__$Lazy_LazyObject = function() { };
$hxClasses["tink.core._Lazy.LazyObject"] = tink_core__$Lazy_LazyObject;
tink_core__$Lazy_LazyObject.__name__ = ["tink","core","_Lazy","LazyObject"];
tink_core__$Lazy_LazyObject.prototype = {
	__class__: tink_core__$Lazy_LazyObject
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
$hxClasses["tink.core._Lazy.LazyConst"] = tink_core__$Lazy_LazyConst;
tink_core__$Lazy_LazyConst.__name__ = ["tink","core","_Lazy","LazyConst"];
tink_core__$Lazy_LazyConst.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyConst.prototype = {
	get: function() {
		return this.value;
	}
	,map: function(f) {
		return new tink_core__$Lazy_LazyConst(f(this.value));
	}
	,flatMap: function(f) {
		return f(this.value);
	}
	,__class__: tink_core__$Lazy_LazyConst
};
var tink_core__$Future_SyncFuture = function(value) {
	this.value = value;
};
$hxClasses["tink.core._Future.SyncFuture"] = tink_core__$Future_SyncFuture;
tink_core__$Future_SyncFuture.__name__ = ["tink","core","_Future","SyncFuture"];
tink_core__$Future_SyncFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SyncFuture.prototype = {
	map: function(f) {
		return new tink_core__$Future_SyncFuture(this.value.map(f));
	}
	,flatMap: function(f) {
		var l = this.value.map(f);
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return l.get().handle(cb);
		});
	}
	,handle: function(cb) {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,this.value.get());
		return null;
	}
	,eager: function() {
		return this;
	}
	,gather: function() {
		return this;
	}
	,__class__: tink_core__$Future_SyncFuture
};
var tink_core__$Future_Future_$Impl_$ = {};
$hxClasses["tink.core._Future.Future_Impl_"] = tink_core__$Future_Future_$Impl_$;
tink_core__$Future_Future_$Impl_$.__name__ = ["tink","core","_Future","Future_Impl_"];
tink_core__$Future_Future_$Impl_$._new = function(f) {
	var this1 = new tink_core__$Future_SimpleFuture(f);
	return this1;
};
tink_core__$Future_Future_$Impl_$.first = function(this1,other) {
	var ret = new tink_core_FutureTrigger();
	var l1 = this1.handle($bind(ret,ret.trigger));
	var l2 = other.handle($bind(ret,ret.trigger));
	var ret1 = ret;
	if(l1 != null) {
		var this2 = l1;
		ret1.handle(function(_) {
			this2.dissolve();
		});
	}
	if(l2 != null) {
		var this3 = l2;
		ret1.handle(function(_1) {
			this3.dissolve();
		});
	}
	return ret1;
};
tink_core__$Future_Future_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.map(f);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatMap = function(this1,next,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(next);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.next = function(this1,n) {
	return this1.flatMap(function(v) {
		return n(v);
	});
};
tink_core__$Future_Future_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(t) {
		var ret1 = other.map(function(a) {
			return merger(t,a);
		});
		return ret1;
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatten = function(f) {
	return new tink_core__$Future_NestedFuture(f);
};
tink_core__$Future_Future_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		promise.then(function(a) {
			cb(tink_core_Outcome.Success(a));
		})["catch"](function(e) {
			var tmp = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,e.message,e,{ fileName : "tink/core/Future.hx", lineNumber : 78, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"}));
			cb(tmp);
		});
	});
};
tink_core__$Future_Future_$Impl_$.asPromise = function(s) {
	return s;
};
tink_core__$Future_Future_$Impl_$.ofMany = function(futures,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst([]));
	var _g = 0;
	while(_g < futures.length) {
		var f = [futures[_g]];
		++_g;
		var ret1 = ret.flatMap((function(f1) {
			return function(results) {
				var ret2 = (function() {
					return function(result) {
						return results.concat([result]);
					};
				})();
				var ret3 = f1[0].map(ret2);
				return ret3;
			};
		})(f));
		ret = ret1;
	}
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.fromMany = function(futures) {
	return tink_core__$Future_Future_$Impl_$.ofMany(futures);
};
tink_core__$Future_Future_$Impl_$.lazy = function(l) {
	return new tink_core__$Future_SyncFuture(l);
};
tink_core__$Future_Future_$Impl_$.sync = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core__$Future_Future_$Impl_$.async = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	if(lazy) {
		return new tink_core__$Future_LazyTrigger(f);
	} else {
		var op = new tink_core_FutureTrigger();
		var wrapped = f;
		tink_core__$Callback_Callback_$Impl_$.invoke(wrapped,$bind(op,op.trigger));
		return op;
	}
};
tink_core__$Future_Future_$Impl_$.or = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.first(a,b);
};
tink_core__$Future_Future_$Impl_$.either = function(a,b) {
	var ret = a.map(haxe_ds_Either.Left);
	var ret1 = b.map(haxe_ds_Either.Right);
	return tink_core__$Future_Future_$Impl_$.first(ret,ret1);
};
tink_core__$Future_Future_$Impl_$.and = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.merge(a,b,function(a1,b1) {
		var this1 = new tink_core_MPair(a1,b1);
		return this1;
	});
};
tink_core__$Future_Future_$Impl_$._tryFailingFlatMap = function(f,map) {
	var ret = f.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return map(d);
		case 1:
			var f1 = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryFlatMap = function(f,map) {
	var ret = f.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			var ret1 = map(d).map(tink_core_Outcome.Success);
			return ret1.gather();
		case 1:
			var f1 = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryFailingMap = function(f,map) {
	var ret = f.map(function(o) {
		return tink_core_OutcomeTools.flatMap(o,tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError(map));
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryMap = function(f,map) {
	var ret = f.map(function(o) {
		return tink_core_OutcomeTools.map(o,map);
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._flatMap = function(f,map) {
	var ret = f.flatMap(map);
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._map = function(f,map) {
	var ret = f.map(map);
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$.trigger = function() {
	return new tink_core_FutureTrigger();
};
var tink_core__$Future_Futuristic_$Impl_$ = {};
$hxClasses["tink.core._Future.Futuristic_Impl_"] = tink_core__$Future_Futuristic_$Impl_$;
tink_core__$Future_Futuristic_$Impl_$.__name__ = ["tink","core","_Future","Futuristic_Impl_"];
tink_core__$Future_Futuristic_$Impl_$.ofAny = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
var tink_core__$Future_SimpleFuture = function(f) {
	this.f = f;
};
$hxClasses["tink.core._Future.SimpleFuture"] = tink_core__$Future_SimpleFuture;
tink_core__$Future_SimpleFuture.__name__ = ["tink","core","_Future","SimpleFuture"];
tink_core__$Future_SimpleFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SimpleFuture.prototype = {
	handle: function(callback) {
		return this.f(callback);
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		});
	}
	,flatMap: function(f) {
		var f1 = f;
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.flatten(new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f1(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		}));
	}
	,gather: function() {
		return tink_core_FutureTrigger.gatherFuture(this);
	}
	,eager: function() {
		var ret = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,__class__: tink_core__$Future_SimpleFuture
};
var tink_core__$Future_NestedFuture = function(outer) {
	this.outer = outer;
};
$hxClasses["tink.core._Future.NestedFuture"] = tink_core__$Future_NestedFuture;
tink_core__$Future_NestedFuture.__name__ = ["tink","core","_Future","NestedFuture"];
tink_core__$Future_NestedFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NestedFuture.prototype = {
	map: function(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.map(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	,flatMap: function(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.flatMap(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	,gather: function() {
		return tink_core_FutureTrigger.gatherFuture(this);
	}
	,eager: function() {
		var ret = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,handle: function(cb) {
		var ret = null;
		ret = this.outer.handle(function(inner) {
			ret = inner.handle(function(result) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			});
		});
		return ret;
	}
	,__class__: tink_core__$Future_NestedFuture
};
var tink_core_FutureTrigger = function() {
	var this1 = [];
	this.list = this1;
};
$hxClasses["tink.core.FutureTrigger"] = tink_core_FutureTrigger;
tink_core_FutureTrigger.__name__ = ["tink","core","FutureTrigger"];
tink_core_FutureTrigger.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core_FutureTrigger.gatherFuture = function(f) {
	var op = null;
	var this1 = new tink_core__$Future_SimpleFuture(function(cb) {
		if(op == null) {
			op = new tink_core_FutureTrigger();
			f.handle($bind(op,op.trigger));
			f = null;
		}
		return op.handle(cb);
	});
	return this1;
};
tink_core_FutureTrigger.prototype = {
	handle: function(callback) {
		var _g = this.list;
		if(_g == null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,this.result);
			return null;
		} else {
			var v = _g;
			return tink_core__$Callback_CallbackList_$Impl_$.add(v,callback);
		}
	}
	,map: function(f) {
		var _g = this.list;
		if(_g == null) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(this.result)));
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				var tmp = f(v1);
				ret.trigger(tmp);
			});
			return ret;
		}
	}
	,flatMap: function(f) {
		var _g = this.list;
		if(_g == null) {
			return f(this.result);
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				f(v1).handle($bind(ret,ret.trigger));
			});
			return ret;
		}
	}
	,gather: function() {
		return this;
	}
	,eager: function() {
		return this;
	}
	,asFuture: function() {
		return this;
	}
	,trigger: function(result) {
		if(this.list == null) {
			return false;
		} else {
			var list = this.list;
			this.list = null;
			this.result = result;
			tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
			tink_core__$Callback_CallbackList_$Impl_$.clear(list);
			return true;
		}
	}
	,__class__: tink_core_FutureTrigger
};
var tink_core__$Future_LazyTrigger = function(op) {
	if(op == null) {
		throw new js__$Boot_HaxeError("invalid argument");
	}
	this.op = op;
	tink_core_FutureTrigger.call(this);
};
$hxClasses["tink.core._Future.LazyTrigger"] = tink_core__$Future_LazyTrigger;
tink_core__$Future_LazyTrigger.__name__ = ["tink","core","_Future","LazyTrigger"];
tink_core__$Future_LazyTrigger.__super__ = tink_core_FutureTrigger;
tink_core__$Future_LazyTrigger.prototype = $extend(tink_core_FutureTrigger.prototype,{
	eager: function() {
		if(this.op != null) {
			var op = this.op;
			this.op = null;
			tink_core__$Callback_Callback_$Impl_$.invoke(op,$bind(this,this.trigger));
		}
		return this;
	}
	,map: function(f) {
		var _gthis = this;
		if(this.op == null) {
			return tink_core_FutureTrigger.prototype.map.call(this,f);
		} else {
			return tink_core__$Future_Future_$Impl_$.async(function(cb) {
				_gthis.handle(function(v) {
					var tmp = f(v);
					cb(tmp);
				});
			},true);
		}
	}
	,flatMap: function(f) {
		var _gthis = this;
		if(this.op == null) {
			return tink_core_FutureTrigger.prototype.flatMap.call(this,f);
		} else {
			return tink_core__$Future_Future_$Impl_$.async(function(cb) {
				_gthis.handle(function(v) {
					f(v).handle(cb);
				});
			},true);
		}
	}
	,handle: function(cb) {
		this.eager();
		return tink_core_FutureTrigger.prototype.handle.call(this,cb);
	}
	,__class__: tink_core__$Future_LazyTrigger
});
var tink_core_JsPromiseTools = function() { };
$hxClasses["tink.core.JsPromiseTools"] = tink_core_JsPromiseTools;
tink_core_JsPromiseTools.__name__ = ["tink","core","JsPromiseTools"];
tink_core_JsPromiseTools.toSurprise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core_JsPromiseTools.toPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
var tink_core__$Lazy_Lazy_$Impl_$ = {};
$hxClasses["tink.core._Lazy.Lazy_Impl_"] = tink_core__$Lazy_Lazy_$Impl_$;
tink_core__$Lazy_Lazy_$Impl_$.__name__ = ["tink","core","_Lazy","Lazy_Impl_"];
tink_core__$Lazy_Lazy_$Impl_$.get = function(this1) {
	return this1.get();
};
tink_core__$Lazy_Lazy_$Impl_$.ofFunc = function(f) {
	return new tink_core__$Lazy_LazyFunc(f);
};
tink_core__$Lazy_Lazy_$Impl_$.map = function(this1,f) {
	return this1.map(f);
};
tink_core__$Lazy_Lazy_$Impl_$.flatMap = function(this1,f) {
	return this1.flatMap(f);
};
tink_core__$Lazy_Lazy_$Impl_$.ofConst = function(c) {
	return new tink_core__$Lazy_LazyConst(c);
};
var tink_core__$Lazy_LazyFunc = function(f) {
	this.busy = false;
	this.f = f;
};
$hxClasses["tink.core._Lazy.LazyFunc"] = tink_core__$Lazy_LazyFunc;
tink_core__$Lazy_LazyFunc.__name__ = ["tink","core","_Lazy","LazyFunc"];
tink_core__$Lazy_LazyFunc.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyFunc.prototype = {
	get: function() {
		if(this.busy) {
			throw new js__$Boot_HaxeError(new tink_core_TypedError(null,"circular lazyness",{ fileName : "tink/core/Lazy.hx", lineNumber : 52, className : "tink.core._Lazy.LazyFunc", methodName : "get"}));
		}
		if(this.f != null) {
			this.busy = true;
			this.result = this.f();
			this.f = null;
			this.busy = false;
		}
		return this.result;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var tmp = _gthis.get();
			return f(tmp);
		});
	}
	,flatMap: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var this1 = _gthis.get();
			return f(this1).get();
		});
	}
	,__class__: tink_core__$Lazy_LazyFunc
};
var tink_core_NamedWith = function(name,value) {
	this.name = name;
	this.value = value;
};
$hxClasses["tink.core.NamedWith"] = tink_core_NamedWith;
tink_core_NamedWith.__name__ = ["tink","core","NamedWith"];
tink_core_NamedWith.prototype = {
	__class__: tink_core_NamedWith
};
var tink_core_OptionTools = function() { };
$hxClasses["tink.core.OptionTools"] = tink_core_OptionTools;
tink_core_OptionTools.__name__ = ["tink","core","OptionTools"];
tink_core_OptionTools.force = function(o,pos) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		throw new js__$Boot_HaxeError(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.or = function(o,l) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		return l.get();
	}
};
tink_core_OptionTools.orNull = function(o) {
	if(o._hx_index == 0) {
		var v = o.v;
		return v;
	} else {
		return null;
	}
};
tink_core_OptionTools.filter = function(o,f) {
	if(o._hx_index == 0) {
		var _hx_tmp = f(o.v);
		if(_hx_tmp == false) {
			return haxe_ds_Option.None;
		} else {
			return o;
		}
	} else {
		return o;
	}
};
tink_core_OptionTools.satisfies = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return f(v);
	} else {
		return false;
	}
};
tink_core_OptionTools.equals = function(o,v) {
	if(o._hx_index == 0) {
		var v1 = o.v;
		return v1 == v;
	} else {
		return false;
	}
};
tink_core_OptionTools.map = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return haxe_ds_Option.Some(f(v));
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.flatMap = function(o,f) {
	if(o._hx_index == 0) {
		var v = o.v;
		return f(v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.iterator = function(o) {
	return new tink_core_OptionIter(o);
};
tink_core_OptionTools.toArray = function(o) {
	if(o._hx_index == 0) {
		var v = o.v;
		return [v];
	} else {
		return [];
	}
};
var tink_core_OptionIter = function(o) {
	this.alive = true;
	if(o._hx_index == 0) {
		var v = o.v;
		this.value = v;
	} else {
		this.alive = false;
	}
};
$hxClasses["tink.core.OptionIter"] = tink_core_OptionIter;
tink_core_OptionIter.__name__ = ["tink","core","OptionIter"];
tink_core_OptionIter.prototype = {
	hasNext: function() {
		return this.alive;
	}
	,next: function() {
		this.alive = false;
		return this.value;
	}
	,__class__: tink_core_OptionIter
};
var tink_core_Outcome = $hxEnums["tink.core.Outcome"] = { __ename__ : true, __constructs__ : ["Success","Failure"]
	,Success: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["data"],$_)
	,Failure: ($_=function(failure) { return {_hx_index:1,failure:failure,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["failure"],$_)
};
var tink_core_OutcomeTools = function() { };
$hxClasses["tink.core.OutcomeTools"] = tink_core_OutcomeTools;
tink_core_OutcomeTools.__name__ = ["tink","core","OutcomeTools"];
tink_core_OutcomeTools.sure = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		var failure = outcome.failure;
		var _g = tink_core_TypedError.asError(failure);
		if(_g == null) {
			throw new js__$Boot_HaxeError(failure);
		} else {
			var e = _g;
			return e.throwSelf();
		}
		break;
	}
};
tink_core_OutcomeTools.toOption = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return haxe_ds_Option.Some(data);
	case 1:
		return haxe_ds_Option.None;
	}
};
tink_core_OutcomeTools.toOutcome = function(option,pos) {
	switch(option._hx_index) {
	case 0:
		var value = option.v;
		return tink_core_Outcome.Success(value);
	case 1:
		return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Some value expected but none found in " + pos.fileName + "@line " + pos.lineNumber,{ fileName : "tink/core/Outcome.hx", lineNumber : 47, className : "tink.core.OutcomeTools", methodName : "toOutcome"}));
	}
};
tink_core_OutcomeTools.orNull = function(outcome) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		return null;
	}
};
tink_core_OutcomeTools.orUse = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.orTry = function(outcome,fallback) {
	switch(outcome._hx_index) {
	case 0:
		return outcome;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.equals = function(outcome,to) {
	switch(outcome._hx_index) {
	case 0:
		var data = outcome.data;
		return data == to;
	case 1:
		return false;
	}
};
tink_core_OutcomeTools.map = function(outcome,transform) {
	switch(outcome._hx_index) {
	case 0:
		var a = outcome.data;
		return tink_core_Outcome.Success(transform(a));
	case 1:
		var f = outcome.failure;
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.isSuccess = function(outcome) {
	if(outcome._hx_index == 0) {
		return true;
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatMap = function(o,mapper) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$.apply(mapper,o);
};
tink_core_OutcomeTools.swap = function(outcome,v) {
	switch(outcome._hx_index) {
	case 0:
		var a = outcome.data;
		return tink_core_Outcome.Success(v);
	case 1:
		var f = outcome.failure;
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.attempt = function(f,report) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return tink_core_Outcome.Failure(report((e instanceof js__$Boot_HaxeError) ? e.val : e));
	}
};
tink_core_OutcomeTools.flatten = function(o) {
	switch(o._hx_index) {
	case 0:
		switch(o.data._hx_index) {
		case 0:
			var d = o.data.data;
			return tink_core_Outcome.Success(d);
		case 1:
			var f = o.data.failure;
			return tink_core_Outcome.Failure(f);
		}
		break;
	case 1:
		var f1 = o.failure;
		return tink_core_Outcome.Failure(f1);
	}
};
var tink_core__$Outcome_OutcomeMapper_$Impl_$ = {};
$hxClasses["tink.core._Outcome.OutcomeMapper_Impl_"] = tink_core__$Outcome_OutcomeMapper_$Impl_$;
tink_core__$Outcome_OutcomeMapper_$Impl_$.__name__ = ["tink","core","_Outcome","OutcomeMapper_Impl_"];
tink_core__$Outcome_OutcomeMapper_$Impl_$._new = function(f) {
	var this1 = { f : f};
	return this1;
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.apply = function(this1,o) {
	return this1.f(o);
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return f(d);
		case 1:
			var f1 = o.failure;
			return tink_core_Outcome.Failure(f1);
		}
	});
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withEitherError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			var _g = f(d);
			switch(_g._hx_index) {
			case 0:
				var d1 = _g.data;
				return tink_core_Outcome.Success(d1);
			case 1:
				var f1 = _g.failure;
				return tink_core_Outcome.Failure(haxe_ds_Either.Right(f1));
			}
			break;
		case 1:
			var f2 = o.failure;
			return tink_core_Outcome.Failure(haxe_ds_Either.Left(f2));
		}
	});
};
var tink_core__$Pair_Pair_$Impl_$ = {};
$hxClasses["tink.core._Pair.Pair_Impl_"] = tink_core__$Pair_Pair_$Impl_$;
tink_core__$Pair_Pair_$Impl_$.__name__ = ["tink","core","_Pair","Pair_Impl_"];
tink_core__$Pair_Pair_$Impl_$.__properties__ = {get_b:"get_b",get_a:"get_a"};
tink_core__$Pair_Pair_$Impl_$._new = function(a,b) {
	var this1 = new tink_core_MPair(a,b);
	return this1;
};
tink_core__$Pair_Pair_$Impl_$.get_a = function(this1) {
	return this1.a;
};
tink_core__$Pair_Pair_$Impl_$.get_b = function(this1) {
	return this1.b;
};
tink_core__$Pair_Pair_$Impl_$.toBool = function(this1) {
	return this1 != null;
};
tink_core__$Pair_Pair_$Impl_$.isNil = function(this1) {
	return this1 == null;
};
tink_core__$Pair_Pair_$Impl_$.nil = function() {
	return null;
};
var tink_core_MPair = function(a,b) {
	this.a = a;
	this.b = b;
};
$hxClasses["tink.core.MPair"] = tink_core_MPair;
tink_core_MPair.__name__ = ["tink","core","MPair"];
tink_core_MPair.prototype = {
	__class__: tink_core_MPair
};
var tink_core__$Promise_Promise_$Impl_$ = {};
$hxClasses["tink.core._Promise.Promise_Impl_"] = tink_core__$Promise_Promise_$Impl_$;
tink_core__$Promise_Promise_$Impl_$.__name__ = ["tink","core","_Promise","Promise_Impl_"];
tink_core__$Promise_Promise_$Impl_$.eager = function(this1) {
	return this1.eager();
};
tink_core__$Promise_Promise_$Impl_$.map = function(this1,f) {
	var ret = this1.map(f);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.flatMap = function(this1,f) {
	var ret = this1.flatMap(f);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.tryRecover = function(this1,f) {
	var ret = this1.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
		case 1:
			var e = o.failure;
			return f(e);
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.recover = function(this1,f) {
	var ret = this1.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(d));
		case 1:
			var e = o.failure;
			return f(e);
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.mapError = function(this1,f) {
	var ret = this1.map(function(o) {
		switch(o._hx_index) {
		case 0:
			return o;
		case 1:
			var e = o.failure;
			return tink_core_Outcome.Failure(f(e));
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.handle = function(this1,cb) {
	return this1.handle(cb);
};
tink_core__$Promise_Promise_$Impl_$.noise = function(this1) {
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(v) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
	});
};
tink_core__$Promise_Promise_$Impl_$.isSuccess = function(this1) {
	var ret = this1.map(function(o) {
		return tink_core_OutcomeTools.isSuccess(o);
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.next = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(o) {
		switch(o._hx_index) {
		case 0:
			var d = o.data;
			return f(d);
		case 1:
			var f1 = o.failure;
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Promise_Promise_$Impl_$.swap = function(this1,v) {
	return tink_core__$Future_Future_$Impl_$._tryMap(this1,function(_) {
		return v;
	});
};
tink_core__$Promise_Promise_$Impl_$.swapError = function(this1,e) {
	return tink_core__$Promise_Promise_$Impl_$.mapError(this1,function(_) {
		return e;
	});
};
tink_core__$Promise_Promise_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(t) {
		return tink_core__$Promise_Promise_$Impl_$.next(other,function(a) {
			return merger(t,a);
		},false);
	},gather);
};
tink_core__$Promise_Promise_$Impl_$.and = function(a,b) {
	return tink_core__$Promise_Promise_$Impl_$.merge(a,b,function(a1,b1) {
		var this1 = new tink_core_MPair(a1,b1);
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(this1)));
	});
};
tink_core__$Promise_Promise_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core__$Promise_Promise_$Impl_$.ofSpecific = function(s) {
	return s;
};
tink_core__$Promise_Promise_$Impl_$.ofFuture = function(f) {
	var ret = f.map(tink_core_Outcome.Success);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.ofOutcome = function(o) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
};
tink_core__$Promise_Promise_$Impl_$.ofError = function(e) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(e)));
};
tink_core__$Promise_Promise_$Impl_$.ofData = function(d) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(d)));
};
tink_core__$Promise_Promise_$Impl_$.lazy = function(p) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		p.get().handle(cb);
	},true);
};
tink_core__$Promise_Promise_$Impl_$.inParallel = function(a,lazy) {
	if(a.length == 0) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([])));
	} else {
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			var result = [];
			var pending = a.length;
			var links = null;
			var sync = false;
			var done = function(o) {
				if(links == null) {
					sync = true;
				} else if(links != null) {
					links.dissolve();
				}
				cb(o);
			};
			var fail = function(e) {
				done(tink_core_Outcome.Failure(e));
			};
			var set = function(index,value) {
				result[index] = value;
				if((pending -= 1) == 0) {
					done(tink_core_Outcome.Success(result));
				}
			};
			var linkArray = [];
			var _g1 = 0;
			var _g = a.length;
			while(_g1 < _g) {
				var i = [_g1++];
				if(sync) {
					break;
				}
				var i1 = i[0];
				var tmp = (function(i2) {
					return function(o1) {
						switch(o1._hx_index) {
						case 0:
							var v = o1.data;
							set(i2[0],v);
							break;
						case 1:
							var e1 = o1.failure;
							fail(e1);
							break;
						}
					};
				})(i);
				linkArray.push(a[i1].handle(tmp));
			}
			links = tink_core__$Callback_CallbackLink_$Impl_$.fromMany(linkArray);
			if(sync) {
				if(links != null) {
					links.dissolve();
				}
			}
		},lazy);
	}
};
tink_core__$Promise_Promise_$Impl_$.inSequence = function(a) {
	var loop = null;
	loop = function(index) {
		if(index == a.length) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([])));
		} else {
			return tink_core__$Promise_Promise_$Impl_$.next(a[index],function(head) {
				return tink_core__$Promise_Promise_$Impl_$.next(loop(index + 1),function(tail) {
					return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([head].concat(tail))));
				});
			});
		}
	};
	return loop(0);
};
tink_core__$Promise_Promise_$Impl_$.lift = function(p) {
	return p;
};
var tink_core__$Promise_Next_$Impl_$ = {};
$hxClasses["tink.core._Promise.Next_Impl_"] = tink_core__$Promise_Next_$Impl_$;
tink_core__$Promise_Next_$Impl_$.__name__ = ["tink","core","_Promise","Next_Impl_"];
tink_core__$Promise_Next_$Impl_$.ofSafe = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x)));
	};
};
tink_core__$Promise_Next_$Impl_$.ofSync = function(f) {
	return function(x) {
		var ret = f(x).map(tink_core_Outcome.Success);
		return ret.gather();
	};
};
tink_core__$Promise_Next_$Impl_$.ofSafeSync = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x))));
	};
};
tink_core__$Promise_Next_$Impl_$._chain = function(a,b) {
	return function(v) {
		return tink_core__$Promise_Promise_$Impl_$.next(a(v),b);
	};
};
var tink_core__$Promise_Recover_$Impl_$ = {};
$hxClasses["tink.core._Promise.Recover_Impl_"] = tink_core__$Promise_Recover_$Impl_$;
tink_core__$Promise_Recover_$Impl_$.__name__ = ["tink","core","_Promise","Recover_Impl_"];
tink_core__$Promise_Recover_$Impl_$.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(e)));
	};
};
var tink_core__$Promise_Combiner_$Impl_$ = {};
$hxClasses["tink.core._Promise.Combiner_Impl_"] = tink_core__$Promise_Combiner_$Impl_$;
tink_core__$Promise_Combiner_$Impl_$.__name__ = ["tink","core","_Promise","Combiner_Impl_"];
tink_core__$Promise_Combiner_$Impl_$.ofSafe = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x1,x2)));
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSync = function(f) {
	return function(x1,x2) {
		var ret = f(x1,x2).map(tink_core_Outcome.Success);
		return ret.gather();
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSafeSync = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(f(x1,x2))));
	};
};
var tink_core__$Ref_Ref_$Impl_$ = {};
$hxClasses["tink.core._Ref.Ref_Impl_"] = tink_core__$Ref_Ref_$Impl_$;
tink_core__$Ref_Ref_$Impl_$.__name__ = ["tink","core","_Ref","Ref_Impl_"];
tink_core__$Ref_Ref_$Impl_$.__properties__ = {set_value:"set_value",get_value:"get_value"};
tink_core__$Ref_Ref_$Impl_$._new = function() {
	var this1 = new Array(1);
	var this2 = this1;
	return this2;
};
tink_core__$Ref_Ref_$Impl_$.get_value = function(this1) {
	return this1[0];
};
tink_core__$Ref_Ref_$Impl_$.set_value = function(this1,param) {
	return this1[0] = param;
};
tink_core__$Ref_Ref_$Impl_$.toString = function(this1) {
	return "@[" + Std.string(this1[0]) + "]";
};
tink_core__$Ref_Ref_$Impl_$.to = function(v) {
	var this1 = new Array(1);
	var this2 = this1;
	var ret = this2;
	ret[0] = v;
	return ret;
};
var tink_core__$Signal_Signal_$Impl_$ = {};
$hxClasses["tink.core._Signal.Signal_Impl_"] = tink_core__$Signal_Signal_$Impl_$;
tink_core__$Signal_Signal_$Impl_$.__name__ = ["tink","core","_Signal","Signal_Impl_"];
tink_core__$Signal_Signal_$Impl_$._new = function(f) {
	var this1 = new tink_core__$Signal_SimpleSignal(f);
	return this1;
};
tink_core__$Signal_Signal_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			var this3 = f(result);
			tink_core__$Callback_Callback_$Impl_$.invoke(cb,this3);
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.flatMap = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			f(result).handle(cb);
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.filter = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			if(f(result)) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			}
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.join = function(this1,other,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return new tink_core__$Callback_LinkPair(this1.handle(cb),other.handle(cb));
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.next = function(this1,condition) {
	var ret = new tink_core_FutureTrigger();
	var link = null;
	var immediate = false;
	link = this1.handle(function(v) {
		if(condition == null || condition(v)) {
			ret.trigger(v);
			if(link == null) {
				immediate = true;
			} else if(link != null) {
				link.dissolve();
			}
		}
	});
	if(immediate) {
		if(link != null) {
			link.dissolve();
		}
	}
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.noise = function(this1) {
	return tink_core__$Signal_Signal_$Impl_$.map(this1,function(_) {
		return tink_core_Noise.Noise;
	});
};
tink_core__$Signal_Signal_$Impl_$.gather = function(this1) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	this1.handle(function(x) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(ret.handlers,x);
	});
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.generate = function(generator) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	generator($bind(ret,ret.trigger));
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.trigger = function() {
	return new tink_core_SignalTrigger();
};
tink_core__$Signal_Signal_$Impl_$.ofClassical = function(add,remove,gather) {
	if(gather == null) {
		gather = true;
	}
	var this1 = new tink_core__$Signal_SimpleSignal(function(cb) {
		var f = function(a) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cb,a);
		};
		add(f);
		var f1 = remove;
		var a1 = f;
		var this2 = new tink_core__$Callback_SimpleLink(function() {
			f1(a1);
		});
		return this2;
	});
	var ret = this1;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
var tink_core_SignalObject = function() { };
$hxClasses["tink.core.SignalObject"] = tink_core_SignalObject;
tink_core_SignalObject.__name__ = ["tink","core","SignalObject"];
tink_core_SignalObject.prototype = {
	__class__: tink_core_SignalObject
};
var tink_core__$Signal_SimpleSignal = function(f) {
	this.f = f;
};
$hxClasses["tink.core._Signal.SimpleSignal"] = tink_core__$Signal_SimpleSignal;
tink_core__$Signal_SimpleSignal.__name__ = ["tink","core","_Signal","SimpleSignal"];
tink_core__$Signal_SimpleSignal.__interfaces__ = [tink_core_SignalObject];
tink_core__$Signal_SimpleSignal.prototype = {
	handle: function(cb) {
		return this.f(cb);
	}
	,__class__: tink_core__$Signal_SimpleSignal
};
var tink_core_SignalTrigger = function() {
	var this1 = [];
	this.handlers = this1;
};
$hxClasses["tink.core.SignalTrigger"] = tink_core_SignalTrigger;
tink_core_SignalTrigger.__name__ = ["tink","core","SignalTrigger"];
tink_core_SignalTrigger.__interfaces__ = [tink_core_SignalObject];
tink_core_SignalTrigger.prototype = {
	trigger: function(event) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(this.handlers,event);
	}
	,getLength: function() {
		return this.handlers.length;
	}
	,handle: function(cb) {
		return tink_core__$Callback_CallbackList_$Impl_$.add(this.handlers,cb);
	}
	,clear: function() {
		tink_core__$Callback_CallbackList_$Impl_$.clear(this.handlers);
	}
	,asSignal: function() {
		return this;
	}
	,__class__: tink_core_SignalTrigger
};
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_Resource.content = [{ name : "styles/default/main.css", data : "LmJ1dHRvbiwgLmxhYmVsLCAudGV4dGFyZWEsIC50ZXh0ZmllbGQgewogICAgZm9udC1uYW1lOiAiQXJpYWwiOwogICAgZm9udC1zaXplOiAxM3B4Owp9CgouYnV0dG9uOm5hdGl2ZSB7CiAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogbm9uZTsKfQoKLnRleHRmaWVsZDpuYXRpdmUgewogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKICAgIGNvbG9yOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsKfQoKLnRleHRhcmVhOm5hdGl2ZSB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgY29sb3I6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwp9Cgo"},{ name : "haxeui-core/styles/default/dialogs/question-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAz5JREFUeNpMVG1IU1EYfrZ7d6denVa26WItHaVlrSDLoi+WFRGpRflHWgXVjyAq+vgTEdXffkRQRH8CIdwPjSlBQRR9UTEzmgm1tpZu1XKT6bzb3If3zt5zi/LAc8+597zP877nPe97NW1tbdBoNNBqtepMmE9YCsBEMODPkAjRmZmZz4QxAgqFAtjM4//QE9ZardYN7e3tHbW1tStkWVY3eJ5HMBgc6u7u7gqFQq/pUz8hx/a4+vp65pWRd7S0tBxwOp1nB77A5H6WwN0HEh68SiEQSoMXRFPH/i3bKFLO7/czcoigcHV1dSyUja2trQccDsfBi7ej8EVKUFRWjaoqEyorK5EtiPhAnBfv4ji0t24lx3EyiYwxEV5RFFNNTc2m5uatzgu3otAbzEAmjxun5sw6nYjLd9IIRnS4dCeKS0e2OL1erz8cDvs4m83WdOzY0fNvhqaNgWgZBEGPiYkk4vE4PB/HMC7JWGwtQzCcwLdflM2pArSFJNbYzSaPp/89i8BssVgaup7+RGmpEaOjcdVn38ss0ukpbLbHYSyJIBBIoL9/EmazEYMBBev2VDcwrpYeFclkCp+GZShKAblcHtHYOH5EYqitltGxsxxfwtO4/3wKGk5AKp1XbTOZLBiXp6tiIpBlBVIqi9j4FEgH0Ohw9bhVjebK3VFwgqiu5RmebFUyGJcJJDmOxxILpTSRp0svAfc3dbvPjPypg6KKf+ksQFZtAS0TSDLvkUDgq2+5TY+klECxWE7eSlWDt52rVbA1+8agTGfQUCNgeHjEx7hM4KPL5XJvb6rEvOIU5OwkdHoy1hX988rWnI7IuSQWVGTgaJyDvj63m3E5o9GYmpgY19Ghi08fcSx78sqP0ViCTjIX955x6HwsU6h5SLEAqsQ4rp9rQG9vz32P542bCtDLBFhj/Bwc/KCl/tBePNlaX16UQzo+jCHvO0xGfVi1MIt9jvk4d3gZXK7O3p6eLjeV9COWU43dblc7S5Kk4lwut8NmW9J84sT5XY2N622zShEDA2+DN29eexgM+p/q9frHBoMho3bwLAEqnDTy+byF3puIs4gw7y+fVdcIETyCIHwXRREkoP4CfgswAD0VkVFpyDl9AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/native/main.min.css", data : "KntuYXRpdmU6dHJ1ZTt9Ci5oc2xpZGVyOm5hdGl2ZSwudnNsaWRlcjpuYXRpdmUsLmhwcm9ncmVzczpuYXRpdmUsLnZwcm9ncmVzczpuYXRpdmV7d2lkdGg6YXV0bztoZWlnaHQ6YXV0bztiYWNrZ3JvdW5kOm5vbmU7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czpub25lO30KLmJ1dHRvbjpuYXRpdmUsLmRyb3Bkb3duOm5hdGl2ZXtiYWNrZ3JvdW5kOm5vbmU7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czpub25lO2NvbG9yOm5vbmU7fQoudGV4dGZpZWxkOm5hdGl2ZSwudGV4dGFyZWE6bmF0aXZle2JhY2tncm91bmQ6bm9uZTtib3JkZXI6bm9uZTtib3JkZXItcmFkaXVzOm5vbmU7Y29sb3I6bm9uZTtmaWx0ZXI6bm9uZTt9Ci5kaWFsb2c6bmF0aXZle3BhZGRpbmctdG9wOjBweCFpbXBvcnRhbnQ7fQ"},{ name : "haxeui-core/styles/default/right_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3wcMBgEIxAeiMwAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAOUlEQVQI12P8/////3eyqowMUMDEwMDAIPT49n8UAWRBxv///8NlUVQwMDAwvJNVZWRC5sBVINsCAJMjEmd7MjYNAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/up_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAABGdBTUEAALGPC/xhBQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB98KChUfKOizO2AAAAAdaVRYdENvbW1lbnQAAAAAAENyZWF0ZWQgd2l0aCBHSU1QZC5lBwAAACNJREFUCNdjYEACAQEB/5H5jNgkNmzYwAiXRNcBU8CITQIGALSTC+IXz7eLAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/global.css", data : ""},{ name : "haxeui-core/styles/default/up_arrow.svg", data : "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTYuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+CjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCIKCSB3aWR0aD0iMjkyLjM2MnB4IiBoZWlnaHQ9IjI5Mi4zNjJweCIgdmlld0JveD0iMCAwIDI5Mi4zNjIgMjkyLjM2MiIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgMjkyLjM2MiAyOTIuMzYyOyIKCSB4bWw6c3BhY2U9InByZXNlcnZlIj4KPGc+Cgk8cGF0aCBkPSJNMjg2LjkzNSwxOTcuMjg2TDE1OS4wMjgsNjkuMzc5Yy0zLjYxMy0zLjYxNy03Ljg5NS01LjQyNC0xMi44NDctNS40MjRzLTkuMjMzLDEuODA3LTEyLjg1LDUuNDI0TDUuNDI0LDE5Ny4yODYKCQlDMS44MDcsMjAwLjksMCwyMDUuMTg0LDAsMjEwLjEzMnMxLjgwNyw5LjIzMyw1LjQyNCwxMi44NDdjMy42MjEsMy42MTcsNy45MDIsNS40MjgsMTIuODUsNS40MjhoMjU1LjgxMwoJCWM0Ljk0OSwwLDkuMjMzLTEuODExLDEyLjg0OC01LjQyOGMzLjYxMy0zLjYxMyw1LjQyNy03Ljg5OCw1LjQyNy0xMi44NDdTMjkwLjU0OCwyMDAuOSwyODYuOTM1LDE5Ny4yODZ6Ii8+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPC9zdmc+Cg"},{ name : "haxeui-core/styles/default/dialogs/cross-circle.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA61pVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wUmlnaHRzPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvcmlnaHRzLyIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcFJpZ2h0czpNYXJrZWQ9IkZhbHNlIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InV1aWQ6NzBDQkJENjFFODMxREYxMTlCMjJGQkJBMDE3QTBERTkiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6QzgzMTgzMzI4NDM0MTFFMDkyMTU5REUxMDUzQTBFMjciIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6QzgzMTgzMzE4NDM0MTFFMDkyMTU5REUxMDUzQTBFMjciIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QTI1NDYxQUQyRjg0RTAxMTg1RkJBOTI1NDUxRDI5NkIiIHN0UmVmOmRvY3VtZW50SUQ9InV1aWQ6NzBDQkJENjFFODMxREYxMTlCMjJGQkJBMDE3QTBERTkiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5un3+3AAAICklEQVR42sRXW0xc1xXd834DNWaYGRjGqjEYk8FAoAETsAdccFTLdYRSUeI4UaRYSqX8VPnpRypV/ozUr/5UStREdu3KGGMh27FDx8HY1FR2Yg9jwNhQUx7m/Z47wzCvrn2ZiwYCtOlPjrQ4l7nn7LXO3vvsc64sFovRj9mU/OfkyZPrP8hkMhFyuXz9/3ivRZcJZAG7AYM0Hy0MCMAMMAyMYmEr/EJaYDQaFZ8TF3z16tV1Azs1I3BQq9XmOZ3OvINodrt9j16v361UKo0iezjsEwRhZmRkZKi7u9vj9Xr7AoFAH155AN9OxmWsaBsP8NKdJpOprLq6urKsrKxGrVZbQUbbhY3nKRQKWl1dHe/q6nLfvn37rs/n68IrLzwQ+yEe0GBgVV5eXlVjY+M7WL2DiX0vXlDg229p5ckTCo+PU2RhQRysSEkhpdVK2ldeId2rr5LKZrNWVFScKi4urrx48eK5p0+fpmNYBxD8XzygAX5eV1d34ujRo42hUMgQAtlSczNFvF7anZxMaWlpZDAYSKPRiHNWVlYIK6WZmRmaXVwkRUEBJdXXkwqi4EnB7XZfaGtrawVXGxDcyQPs9sO1tbUnampqTiOOGv/dDhKaLlPmrl1kLyoSkykYDJLf7xdJJderVCpyOBy0B89jY2M0dvYsGd96i/RVlYbqatfpSCRCELKK4W2cmxt2ARuNGyrYv39/lcvlahQEn0a4foNCN25QYX6+GNvZ2dn1sVs1FsRiUlNTKRme6jt/nsIIk/H4LzQu15HG4eF/T/X3P5uEFzzSHHnCFjHBrYcaGhpO+f2CQbhzh4LXr1Mh3AlP0OTkpLhqdvdO4DHT09Nin5udTYHWVmJbSExDfX39KeyeQ8wlLUQuKcGPRVh5JRbgWIELfZeb6UBuLs1h1bxyNr4PefDfBOS2tIj9AlY+Pz9PWZmZtHSpiULjExwmB5Kzkrk2ewCJrs0vKSlxibGFEYvJRCtYOScWG3TCG9y43468AOHiVnjzppgni0hItpGsVNIybCKhqbi4yIXkzWfOdQFQlJWfn58XjUYsoZdjFO5GtiOOL1++FA2Vut0bYs3/8++J2DymrL2d3S56Qa/TUfDRI4pOTHAuWXJycvKYM9EDP4UApxjjRx5KxhbjiRx7NnIZsdzcmJDHsMiMc+docHCQBgYGxH5oaIj+kp5OEyCcnpqiGeSEiovAY49oLydnn5M513cB1JitVouDt8pqby+ZjEbRuJQoKSg0TXv30i/7+mhubk58xy7PunBB3B38zGcHPzO+KS0lNbZlFMUrBBsLGG9ASAMoYMZqF5nN6Q7mTPSAUaPRpnJRCk0iWRAzjpfUIjAkh6HzFguh3n+PUHrG2UDflJSQBv+zYTnsMVhIDFhFQeNtqtNpU5kzUYAaLwxcpsOLSySHMen08nM2Y1cEkVCcNb11dduS30EZ1vF5wOU5Ti5jwLMEhGBLJoM4ucLAnImFiEuyjNUxMdf9CGIlIH5hJJhoMO4NjuVW5Nwb1uIpQgY7snhpZbsxeDSKcXEOGSPRA2G43CeqS0oiAUqDKDwykKvipBLyOjq2JGe83tMjrkgFAUpAARESohAgR3VkfaFQ2MeciQIEn0+YYwEKczoJKDwaru+byLN3IJd+q+zvF8lVcShBzuAEV9tsogBB8M8xZ6KAqeHh4REWoHc6yQf363HScZAkOLYgf1BcTF0HD67/xj3j0PPnawJALIFPIWNBIbhinMgjzJko4F8ej6dPpVKTseQ1WuLJ2EaczUxu3YL8O5DzPmL848CBdXKplUCEGnYYnJBBLMhY+jMxCXt7e/uYM1HAC9yknmF7TalsGWR4rZzmETOdWi26frCqagO5B+SWhNDw8719+zYUqg7UDVU8H3yYk1TxOsnNFnb/VG9vzzPmTBQQQBXsvnu3o1MuV5L17dM0g2oYBqEGk20Y86y8XCT3gty2KTcY/Ns9kFK8t8XJI8ilJdwlMk69hzyIUWfnvc5AwN/NnIlnAeOfbW23unCKjSrTM8j+wYf0nN9BhBqrt3MNALl9C3IJ/O4+yKUx2Nj0QqulPb/5iCjVzFV0tL39713MJd0NRQGcocDS8vJS++ef/7kFz/5dNW+Q5f0z9BgJtAJDaj6ndyCXII3hO3m3QkkZZz6klCO1OLBC/i+++KxleXm5nbmYc8OFJI4HT5542i9d+mtrOBxZtTecpuzf/Z4e6vU0gAmxeOXaCTxmELa+MyVRzid/oIxfvcPkq01NF1p7errbmUPio4QPi/V7CQrSV1euXDKgWCjefffMccuxk7rUolLq/tMf6eu2W2QJhygTYUlGWHTxj5YA3LkIg6MQOaFUkaX2DTr80W9JkWbjm1Hgyy8/u3bt2pUbyKGvcBeIfe9WXIBrl9T4bMdu0KEcnygoKKr5+ONPjmdmZlmVSgUFRodo2H2LRu/dofnBAfJPi1uZ9Glm+snebLJXHqasmmOkzXCgnEdodHR4/NNPz17zeh+5Qd6KS09Auklzw0fMtgIYXK8rjEbTsTffbCipr/91idlsSeVFKxRyEWvfLiQWl7UzZO3DY2pqYra5+eLDlpa/PfT5lm9iC3eCPAbQDxEgJWcKcESn05eWl1dlV1XVZDudhelpaekpuMTqeA4+ywLT05MLXu/jyY4O98D9+x0D2GoPUDfagQWuH0z+/woQ7wYYx0doLvoDGJYBJPMXlDQNWATGcNr1YsX96AWuptJZsaOAH7P9R4ABAJnpEv/4dkWKAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/left_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3wcMBQEeMpWpOwAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAKElEQVQI12NgQAIBAQH/GZE5DAwMDIzIHAYGBgZGZA52FehmMKDbAgAUiA2PlOfODgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/dialogs/exclamation-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAgdJREFUeNqkk8tu00AUho9nfKnDJU5j5NoJkTB20+JU3ZR1F+xaKhZIkRCSAYkdL9CqEgtW9B14BVa8AiyQQCELJCRUFUgXMZAKqOPY8WWYsZISaFohdaTPnjnz/2c84zMcIQTO0rg3L7iT5oqUZ6P+Q8rPaSJ0SvKmbt2zdcu1Wf8kEcoygH+hu7qMhdKaVru5qNXWF7GgrLHYNO3UBBTXsN0GCT+JJPwsGtbdBov9VwK60rJ0rrZaKjfM7Z2vsL3zDZTyNVMqVFfZ3LEEKX1MwMYPKtYdJ/I/oiAIgDHs7yH9yi2HzY00Rx6UpTTTCJLBjQuKsyLLRSONf4Hv+zlp7EOhoBjnL1orTDPp4dP06EBlDnGucXXdiYMvMExDaLVa4Hke7D9ahozsAj9bd9Lerksy8pLqB/lfiBMABv2c2+W560sIRUpv0AGvvwftdhu63S6kQghEjADESJGK1SWmHfsQK0SKCpzYVKuN+d7hW4izHgg4gu/ekxwRD3Mw50NR1+YJ4CbzMC9K6BboNu6rlfpCnH2QeeSDhMMcVXucMx4zZCmRS3OXFpiHeVGSgIUFaUOrzJgC/IAZutKYcZuMMfSqYiKe32BePgjIlllXbREfYkLYif65XMHBZv7uHzz/u34xYKM2a79/523xwQCi16/2OzTcOV7pT0+/iRxE3Fmv828BBgCYsyym9ECFNgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/down_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAABGdBTUEAALGPC/xhBQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB98KChUgEnZhyO4AAAAdaVRYdENvbW1lbnQAAAAAAENyZWF0ZWQgd2l0aCBHSU1QZC5lBwAAAClJREFUCNdjDAgI+M+AAzAyMDAwYFOwYcMGRkYYB1nBhg0bGDGMQTcBALTqC+LBRYBOAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/test/main.css", data : "LmNvbXBvbmVudCB7Cn0KCi52Ym94LCAuaGJveCwgLmFic29sdXRlIHsKICAgIHNwYWNpbmc6IDVweCA1cHg7Cn0K"},{ name : "haxeui-core/styles/default/small-close-button.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAAsTAAALEwEAmpwYAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAACC0lEQVR42qSTzWoTURiGn5kmTav2x+ZkccJAhkCDdZvm5wrcFIobNxVFIiIiQegUai8g3bYX4RWIi95BID+4cOWs3NQM2DgTnZicMslxk4Y2LQj2g7P5+M738/C+ptaa2zxDa81tIjabMAxjDtgEHgASGAOnwFfgs9Z6dKX+8gaGYSwDO8B9YAAoILo07BfwUWv9++KPOTP5KbC8v7/ftW27B/SBvpSyX6vVhkAC2JrUXjthE1g9ODjoHh4eph3H6ReLxa5Satxut1NSypWFhYVTx3HuAQ+BL1dOMAzjBbBq23av2WwKIcRdz/P+RFE0sixrKQiCYalUGriuOwROtdafZhu8B3pA37btWKPREKlU6g6A7/uqXC5HrutqIACGWusPVxiYpqknwCKl1LlSakp7MBiMwzBkwkTF4/HoGsRkMukDSClpt9spy7KWfN9XnucN0+n0YqvVMjOZzBjQQoj+tQYbGxvfgJjjOAkp5UoQBMNyuRzl8/mR53kDKeXi7u7uHJAoFAo/p+gvJNnpdKy1tbWXQOXo6OhVLpd7B+wBbzKZzOvj4+O3wJ4Q4pnnedZNUjbr9Xpxe3s7d3Z2Ng/MAaOJmADmhRDnJycnbj6fb04Uyqw5EmEYFiqVylY2m30CPAd21tfXH1er1UdhGBa01ol/mckE0oAAVie5HvAD+D6dfJMX/if+DgC3ySh13L0wFwAAAABJRU5ErkJggg"},{ name : "templates/shaders/Empty.frag.glsl.template", data : "I3ZlcnNpb24gNDUwCgp2b2lkIG1haW4oKSB7Cn0K"},{ name : "img/repeat_black.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRoWKB6cgfsGAAAA60lEQVQoz4XRsUoDQRgE4O/EJp1VfAAhlV3wAQR7Y2leQZB7gNhbCr6AlSDYSIjY2AmieHCgWKilnFooIhItjGtxyWUloLPN7sywPzN/YoSGtqYmMpldNyIkUn0hOn2pZCz3KuE2MvVGljQiN235rl5pOXv0+bNcblvLYzWoMa2thsKaukWJdw9ezIKaVbqCgRWvgmBPx2c0skshyHWGxHElnRkIitJw52lIfzkZ3lqCoJiSYU4d3Fs3A07Ng6w0lDjQsuDKjmX7NsBFHPPckkO5Sx/jmL+LepM6ijKkk1UH15NV/7ms5L91/wA71pse7/03eAAAAABJRU5ErkJggg"},{ name : "styles/default/main.min.css", data : "LmJ1dHRvbiwubGFiZWwsLnRleHRhcmVhLC50ZXh0ZmllbGR7Zm9udC1uYW1lOiJBcmlhbCI7Zm9udC1zaXplOjEzcHg7fQouYnV0dG9uOm5hdGl2ZXtiYWNrZ3JvdW5kOm5vbmU7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czpub25lO30KLnRleHRmaWVsZDpuYXRpdmV7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czpub25lO2ZpbHRlcjpub25lO2NvbG9yOm5vbmU7YmFja2dyb3VuZC1jb2xvcjpub25lO30KLnRleHRhcmVhOm5hdGl2ZXtib3JkZXI6bm9uZTtib3JkZXItcmFkaXVzOm5vbmU7ZmlsdGVyOm5vbmU7Y29sb3I6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOm5vbmU7fQoK"},{ name : "haxeui-core/styles/default/up_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3wkMBhUMUvQPHgAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAK0lEQVQI12N8K6PCAANCj2//fyerygjjMyFLINNwSWQBZD7j////USSQAQAKMRRsCchObQAAAABJRU5ErkJggg"},{ name : "img/repeat.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQPAizIFYliAAAA90lEQVQoz32RvS4EYRiFn5FNZCuqdQGSrXTDBUj0prW3QGQugF4pcQNbKUSjWNEoJBIhJpmEKFDKoKAQVsM+ipl8M7LhVO/PyftzTkQFu/SIiYGMjN3olhpGpg5tYmhqVLcHoXHXIA0qimmjuOW2o5ClgN0w/MXc3B0Tn8KibosebaBglQ6LRLzzyCszALRZaREDI9boMwXs8cEJk+H+eSzU3I1q6HHYf+63WpSEe5+r8penVZSoWkyQAbN0AHhgnWkAzpgDICsJJQ5IWOCaPsvsswnAZfPNC5c8NPfKz/rN30K9mXrUkC0dl1pvxqT+36woOPqH3T/pdSPPL4cfLwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNy0wOS0yMFQxNTowMjo0NCswMjowMEsGDK8AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTctMDktMjBUMTU6MDI6NDQrMDI6MDA6W7QTAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/dialogs/information-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyNJREFUeNpMlF9sS1Ecx7+997Zdd2uKamdLO7ZERxkPiz9BlhoSS7ZhFiKKxBMRkeCJePJG4kWIF4kH68MmnQgSIYIgYwkjYVrNNP5tlW7dbau9dXvr9zsTnOTbc+455/M95/x+59TS3d0Ni8UCSZJETZpPWgLAS6rBTNFIE5VK5T3pBwmmaYJrBf+KnbSqoaFhXW9v757GxsblhmGIAUVRkEgk3vb39/clk8mn1PWCpPOY3NzczKsyvKWzs3NvOBw+PvwB3ujDDK7e0nDrSQ7xZB6KTfXu2dm2iXYqx2IxhpOkshwIBHgr67u6uvaGQqF9py9PYPRbNapmLUBtrRdutxtFU8UrYh69TGP/9sAKWZYNMvnBJlK5XPb6/f4N7e0bw6cuTUCu9sLlcmFs7DvOHVJx/rCKZHJc9JlWN85cSaOtrS1cX1+/gVk2CPb07Nh9+3EKxcosCg4wPp5GsVj8Gxxup1KTYkzTHbg/NIWOjq27mVXop87n8wX7HnyF0+kRMBfqR2BrlGpTBJG/udTVeTASL2PNtgVBZtnAlc3m8G7MwMJGE7peQmY6h/zPPCJn/SK1u059gUW2CYNcvkRzKygUimzqUihVfAwYRhlajrY6+RO0KCySXcAOhwOSXEUGMxk3KgrNFTCYZYOsTIOLfRTSTImSXg2ZJpqGLmCn0wnJSiaKXRiYMMRcQGKDLK/+LR7/OLqsyY6sloFDnQ3ZRpAyA6uqKtrcxyr/KiC4yEZZ+jTKLBu8iUQi0c2r3ZjnyMEoTsNqp8nWKgHzMbgtWwnWs6h3FRBqnYObN6NRZmWPx5Obmpq00qkdxw6Glt5/EsN4KkMnmYvrDxVcu2fQVkvQUnHUqmlcOBHE4ODAjaGhZ1G6gK/ZgB/G15GRVxLlWTp9tKt5dpWOfHoMb1+/xPTEKFb6i+gJzceJA0sRiVwbHBjoi9KVvssxtbS0tIiXpWmaQ9f1LU1Ni9uPHDnZ0dq6tum/h4bh4eeJixfP3UkkYg/sdvu9mpqagnjB/xkgn8+jVCr56Hs1MQtJ8/7wfLs+ETBks9k+c2zIQPwF/BZgAGlYhQuEH1lJAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/haxeui.png", data : ""},{ name : "img/blank.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4QIKDCIwjMBeawAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAHElEQVQ4y2P8//8/AyWAiYFCMGrAqAGjBgwWAwBjmgMd7D3zQQAAAABJRU5ErkJggg"},{ name : "img/play-button.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQPBhSEe/T4AAAApElEQVQoz42RIRLCMBBFX+pBcIgqXLhFNTMMp8gN4CBoYPC9BXEoVARTj6li5mM6aVIK5bm/+bPZ/WvoUMkWiwU8nqO50yMjp1YprZxM/1xrjLqzyHWFl5qBxQEqY/OgmQ6Dj0q0jzIAqMr67AosGaZmyTnKFYk/JHut9ZQkNQUTFPhhSQuduDAHwH8YVHFjE+V1es0sqMdIUH9E/ftYJg735dxv4ZUOvwfQ2a8AAAAldEVYdGRhdGU6Y3JlYXRlADIwMTctMDktMjBUMTU6MDY6MjArMDI6MDBwzYFBAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE3LTA5LTIwVDE1OjA2OjIwKzAyOjAwAZA5/QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAAASUVORK5CYII"},{ name : "img/up_down_arrows_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAYAAAAKCAYAAACXDi8zAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH4QkbCQQpssu2jwAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAV0lEQVQI15WPsQ2AQAwDL8yR8hf6jjUomYCSyjvQ/VbpfoZQISGkFFxryWfb9AbAtW8JsB6nATC9ISkjIiMiJeX0hknK3jtvxhjYU/VloeB/UMrrudXBG4tcNX9xv+eDAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/main.css", data : ""},{ name : "haxeui-core/styles/default/right_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3wcMBQExmUSUYgAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAALUlEQVQI122MwQkAMBDCck7oqG7Yvg6kNC8NKLYPhQBaasPK+U6WJKMuvIcAF0CaDdeJj/KWAAAAAElFTkSuQmCC"},{ name : "img/hsizegrip.png", data : "iVBORw0KGgoAAAANSUhEUgAAACEAAAAICAQAAADdTl4aAAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfiBhYMHgcuVb7SAAAAIklEQVQoz2MsqGBoZ6AEdDC+42DgosiIHwyUA8ZRj1DTIwC4ggvUBEl9UQAAAABJRU5ErkJggg"},{ name : "img/picture_grey.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRoWMB9pnVPJAAAAuElEQVQoz4XRIW4CARCF4W9hDSHBcYGGM6zBYheFwqB6hIoqimHrCIIQXE0NQXEAEkKqaioaFJwB1RAUCKBhSdgd+ebPvDcz5FSQxMoZ/b/QPHtCIc/iChx8O2YB0Wuk8xjY2+L3X12ZpYGSj6RtdNF+zO2M0xYtnyqaFrYm3j2r6qe3WBqb+fJioIiWyJQgOWefWusK0FPXuA85tPMmAF372y1CbDyJb7T4HqipPb5kqJn9rLxXOAHtQyUuHocCngAAAABJRU5ErkJggg"},{ name : "img/warning.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQPDBvuKwHjAAAA9UlEQVQoz22RvWoCQRRGz8Y0VqKFELDwAcyPkMp26xQ2PkEgjW8Q8CnsEhAEuzSBBFIISywjmybWgk06SyGF7kkRs07C3mnOd7/vXmaYiKCMOAU+IikqK85VnVs5dI+CxIgqMTFVRkXzsZkdADtmxv/tkgsnuZq4sPQ30HdjA7z2Bmy4sR/aNdcOAHz3DcCBa2uHwNCVZQATpwCWXTn8tVtu7e350Yc99dza+sGps3zXyLucZ04Bu+5s58269Zzb7uxi4ji47q33gRqbHHPOa/CgZ6JALbnCJ1PPCv/mwtQXbLo086vgZC5tRmCJS04KVnySRrtvPEaecEm6bM0AAAAldEVYdGRhdGU6Y3JlYXRlADIwMTctMDktMjBUMTU6MTI6MjcrMDI6MDB9D8B1AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE3LTA5LTIwVDE1OjEyOjI3KzAyOjAwDFJ4yQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAAASUVORK5CYII"},{ name : "img/add.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQOMzOCgukSAAAAXklEQVQoz82RsQ2AMAwEn+zAEizg2ZiArTKAB8gMkdiBo0lhpAQKKLjC0r9OsmRLAQzHMY0gA5DHQgWgxi7pgffChGnT0tKsJOnQ3nLRKpw7/IMVP7jDVShh9ui9+wQG0E6nCSZ1AgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNy0wOS0yMFQxNDo1MTo1MSswMjowMJJi7VIAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTctMDktMjBUMTQ6NTE6NTErMDI6MDDjP1XuAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAABJRU5ErkJggg"},{ name : "styles/native/main.css", data : "LmJ1dHRvbiB7Cn0KCi50YWJiYXItYnV0dG9uIHsKICAgIG5hdGl2ZTogZmFsc2U7Cn0KCi50YWJiYXItYnV0dG9uIHsKICAgIGJvcmRlci1yYWRpdXM6IDBweDsKICAgIGJhY2tncm91bmQ6ICNFREVERUQgI0U2RTZFNjsKICAgIHBhZGRpbmc6IDZweDsKICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207CiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOwp9CgoudGFiYmFyLWJ1dHRvbjpkb3duIHsKfQoKLnRhYmJhci1idXR0b24tc2VsZWN0ZWQsIC50YWJiYXItYnV0dG9uLXNlbGVjdGVkOmhvdmVyLCAudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpkb3duIHsKICAgIGJvcmRlci1yYWRpdXM6IDBweDsKCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOwogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4OwogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogd2hpdGU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKfQoKLnRhYmxldmlldyAuaGVhZGVyIHsKICAgIG1hcmdpbi10b3A6IDBweDsKICAgIG1hcmdpbi1sZWZ0OiAwcHg7Cn0"},{ name : "haxeui-core/styles/default/main.min.css", data : "LmNvbXBvbmVudHt9Ci5jdXN0b20tY29tcG9uZW50e3dpZHRoOmF1dG87aGVpZ2h0OmF1dG87fQoubW9kYWwtYmFja2dyb3VuZHtiYWNrZ3JvdW5kLWNvbG9yOmJsYWNrO29wYWNpdHk6MC4yO30KLm1vZGFsLWNvbXBvbmVudHtmaWx0ZXI6Ymx1cigxKTt9Ci5kaWFsb2d7Ym9yZGVyOjFweCBzb2xpZCAjQUJBQkFCO2ZpbHRlcjpkcm9wLXNoYWRvdygxLDQ1LCMwMDAwMDAsMC4yLDIsMiwxLDMsZmFsc2UpO2JvcmRlci1yYWRpdXM6MnB4O2hlaWdodDphdXRvO3dpZHRoOjMwMHB4O2JhY2tncm91bmQtY29sb3I6d2hpdGU7cGFkZGluZzoxcHg7fQouZGlhbG9nLXRpdGxlLWJhcntiYWNrZ3JvdW5kLWNvbG9yOiNFRUVFRUU7cGFkZGluZzo1cHg7d2lkdGg6MTAwJTtib3JkZXItYm90dG9tLXdpZHRoOjFweDtib3JkZXItYm90dG9tLWNvbG9yOiNBQkFCQUI7fQouZGlhbG9nLXRpdGxle3dpZHRoOjEwMCU7dmVydGljYWwtYWxpZ246Y2VudGVyO2ZvbnQtc3R5bGU6Ym9sZDtjb2xvcjojODg4ODg4O30KLmRpYWxvZy1jb250ZW50e3BhZGRpbmc6MTBweDt9Ci5kaWFsb2ctY2xvc2UtYnV0dG9ue2ljb246ImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3NtYWxsLWNsb3NlLWJ1dHRvbi5wbmciO3BhZGRpbmc6MCFpbXBvcnRhbnQ7Ym9yZGVyOm5vbmUhaW1wb3J0YW50O2JhY2tncm91bmQtY29sb3I6bm9uZSFpbXBvcnRhbnQ7aG9yaXpvbnRhbC1hbGlnbjpyaWdodDt2ZXJ0aWNhbC1hbGlnbjpjZW50ZXI7fQouZGlhbG9nLWJ1dHRvbnN7aG9yaXpvbnRhbC1hbGlnbjpyaWdodDtwYWRkaW5nLXJpZ2h0OjEwcHg7cGFkZGluZy1ib3R0b206MTBweDtwYWRkaW5nLWxlZnQ6MTBweDtwYWRkaW5nLXRvcDoxMHB4O30KLm1lc3NhZ2UtZGlhbG9nLW1lc3NhZ2V7dmVydGljYWwtYWxpZ246Y2VudGVyO30KLmxhYmVse3dpZHRoOmF1dG87aGVpZ2h0OmF1dG87fQouaW1hZ2V7d2lkdGg6YXV0bztoZWlnaHQ6YXV0bzt9Ci5idXR0b257YmFja2dyb3VuZDojRURFREVEICNFNkU2RTYgdmVydGljYWw7Y29sb3I6IzIyMjIyMjtib3JkZXI6MXB4IHNvbGlkICNBQkFCQUI7Ym9yZGVyLXJhZGl1czoycHg7cGFkZGluZzo1cHggNXB4O2N1cnNvcjpwb2ludGVyO3dpZHRoOmF1dG87aGVpZ2h0OmF1dG87c3BhY2luZzo1cHggNXB4O30KLmJ1dHRvbjpob3ZlcntiYWNrZ3JvdW5kOiNGNUY1RjUgI0YxRjFGMSB2ZXJ0aWNhbDtjb2xvcjojMDAwMDAwO30KLmJ1dHRvbjpkb3due2JhY2tncm91bmQ6I0QyRDJEMiAjQzJDMkMyIHZlcnRpY2FsO2NvbG9yOiMwMDAwMDA7Ym9yZGVyLWNvbG9yOiM3RjdGN0Y7fQouYnV0dG9uOmFjdGl2ZXtib3JkZXI6MnB4IHNvbGlkICM3N0M2RkY7fQouYnV0dG9uLmVtcGhhc2l6ZWR7YmFja2dyb3VuZDojREFFNEVFICNENERFRTggdmVydGljYWw7Ym9yZGVyLWNvbG9yOiM2Q0ExRDc7fQouYnV0dG9uLmVtcGhhc2l6ZWQ6aG92ZXJ7YmFja2dyb3VuZDojRTJFQ0Y2ICNERUU4RjIgdmVydGljYWw7Ym9yZGVyLWNvbG9yOiM2Q0ExRDc7fQouYnV0dG9uLmVtcGhhc2l6ZWQ6ZG93bntiYWNrZ3JvdW5kOiNDMkNDRDYgI0I0QkVDOCB2ZXJ0aWNhbDtib3JkZXItY29sb3I6IzU2OENDMTt9Ci5idXR0b246ZGlzYWJsZWR7YmFja2dyb3VuZDojRDRENEQ0ICNDQ0NDQ0MgdmVydGljYWw7Y29sb3I6IzkwOTA5MDtjdXJzb3I6ZGVmYXVsdDt9Ci50ZXh0ZmllbGR7YmFja2dyb3VuZC1jb2xvcjojRkZGRkZGO2NvbG9yOiM0NDQ0NDQ7Ym9yZGVyOjFweCBzb2xpZCAjQUJBQkFCO2JvcmRlci1yYWRpdXM6MnB4O3BhZGRpbmc6NXB4IDVweDtmaWx0ZXI6ZHJvcC1zaGFkb3coMSw0NSwjODg4ODg4LDAuMiwxLDEsMSwzLHRydWUpO2hlaWdodDphdXRvO3NwYWNpbmc6NXB4O2ljb24tcG9zaXRpb246cmlnaHQ7fQoudGV4dGZpZWxkOmFjdGl2ZXtib3JkZXI6MXB4IHNvbGlkICMyMTZBQUU7fQoudGV4dGZpZWxkOmVtcHR5e2NvbG9yOiNBMEEwQTA7fQoudGV4dGZpZWxkOmRpc2FibGVke2JhY2tncm91bmQ6I0Q0RDRENCAjQ0NDQ0NDIHZlcnRpY2FsO30KLnRleHRhcmVhe2NvbG9yOiM0NDQ0NDQ7Ym9yZGVyOjFweCBzb2xpZCAjQUJBQkFCO2JvcmRlci1yYWRpdXM6MnB4O3BhZGRpbmctdG9wOjFweDtwYWRkaW5nLWxlZnQ6MXB4O3BhZGRpbmctYm90dG9tOjFweDtwYWRkaW5nLXJpZ2h0OjBweDtmaWx0ZXI6ZHJvcC1zaGFkb3coMSw0NSwjODg4ODg4LDAuMiwxLDEsMSwzLHRydWUpO2JhY2tncm91bmQtY29sb3I6d2hpdGU7fQoudGV4dGFyZWE6YWN0aXZle2JvcmRlcjoxcHggc29saWQgIzIxNkFBRTt9Ci50ZXh0YXJlYTplbXB0eXtjb2xvcjojQTBBMEEwO30KLmJveCwudmJveCwuaGJveCwuYWJzb2x1dGUsLmNvbnRpbnVvdXNoYm94LC5oZ3JpZCwudmdyaWQsLmdyaWR7c3BhY2luZzo1cHggNXB4O30KLmJveCwudmJveCwuaGJveCwuY29udGludW91c2hib3gsLmhncmlkLC52Z3JpZCwuZ3JpZHt3aWR0aDphdXRvO2hlaWdodDphdXRvO30KLnNjcm9sbHtiYWNrZ3JvdW5kLWNvbG9yOiNFOUU5RTk7fQouc2Nyb2xsIC5idXR0b257Ym9yZGVyLXJhZGl1czowO2JvcmRlcjpub25lO2JhY2tncm91bmQtY29sb3I6I0U5RTlFOTtwYWRkaW5nOjA7ZmlsdGVyOm5vbmU7fQouc2Nyb2xsIC5idXR0b246aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojRDdEN0Q3O30KLnNjcm9sbCAuYnV0dG9uOmRvd257YmFja2dyb3VuZC1jb2xvcjojNTI1MjUyO2ZpbHRlcjpub25lO30KLnNjcm9sbCAuYnV0dG9uLmRlaW5je2hlaWdodDoxN3B4O3dpZHRoOjE3cHg7b3BhY2l0eToxO30KLnNjcm9sbCAuYnV0dG9uLmRlaW5jOmRpc2FibGVke29wYWNpdHk6MC41O30KLnNjcm9sbCAuYnV0dG9uLmRlaW5jOmRvd257fQouc2Nyb2xsIC5idXR0b24uaW5je2hlaWdodDoxN3B4O3dpZHRoOjE3cHg7b3BhY2l0eToxO30KLnNjcm9sbCAuYnV0dG9uLmluYzpkaXNhYmxlZHtvcGFjaXR5OjAuNTt9Ci5zY3JvbGwgLmJ1dHRvbi5pbmM6ZG93bnt9Ci5zY3JvbGwgLmJ1dHRvbi50aHVtYntiYWNrZ3JvdW5kLWNvbG9yOiNDNkM2QzY7fQouc2Nyb2xsIC5idXR0b24udGh1bWI6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojQUFBQUFBO30KLnNjcm9sbCAuYnV0dG9uLnRodW1iOmRvd257YmFja2dyb3VuZC1jb2xvcjojNTI1MjUyO30KLnNjcm9sbCAuYnV0dG9uLnRodW1iOmRpc2FibGVke2JhY2tncm91bmQtY29sb3I6I0RERERERDt9Ci52c2Nyb2xse3dpZHRoOjE3cHg7fQoudnNjcm9sbCAuYnV0dG9uLnRodW1ie3dpZHRoOjE3cHg7aGVpZ2h0OjE3cHg7fQoudnNjcm9sbCAuYnV0dG9uLmRlaW5je2ljb246ImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3VwX2Fycm93LnBuZyI7fQoudnNjcm9sbCAuYnV0dG9uLmRlaW5jOmRvd257aWNvbjoiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvdXBfYXJyb3dfd2hpdGUucG5nIjt9Ci52c2Nyb2xsIC5idXR0b24uaW5je2ljb246ImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2Rvd25fYXJyb3cucG5nIjt9Ci52c2Nyb2xsIC5idXR0b24uaW5jOmRvd257aWNvbjoiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvZG93bl9hcnJvd193aGl0ZS5wbmciO30KLmhzY3JvbGx7aGVpZ2h0OjE3cHg7fQouaHNjcm9sbCAuYnV0dG9uLnRodW1ie3dpZHRoOjE3cHg7aGVpZ2h0OjE3cHg7fQouaHNjcm9sbCAuYnV0dG9uLmRlaW5je2ljb246ImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2xlZnRfYXJyb3cucG5nIjt9Ci5oc2Nyb2xsIC5idXR0b24uZGVpbmM6ZG93bntpY29uOiJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9sZWZ0X2Fycm93X3doaXRlLnBuZyI7fQouaHNjcm9sbCAuYnV0dG9uLmluY3tpY29uOiJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9yaWdodF9hcnJvdy5wbmciO30KLmhzY3JvbGwgLmJ1dHRvbi5pbmM6ZG93bntpY29uOiJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9yaWdodF9hcnJvd193aGl0ZS5wbmciO30KLnNjcm9sbHZpZXd7Ym9yZGVyOjFweCBzb2xpZCAjQUJBQkFCO2JvcmRlci1yYWRpdXM6MXB4O3BhZGRpbmc6MXB4O3dpZHRoOmF1dG87aGVpZ2h0OmF1dG87fQouc2Nyb2xsdmlldyAuc2Nyb2xsdmlldy1jb250ZW50c3toZWlnaHQ6YXV0bztzcGFjaW5nOjVweDtwYWRkaW5nOjVweDtib3JkZXI6bm9uZTt9Ci5jaGVja2JveHt3aWR0aDphdXRvO2hlaWdodDphdXRvO2hvcml6b250YWwtc3BhY2luZzo0cHg7Y3Vyc29yOnBvaW50ZXI7Y29sb3I6IzAwMDAwMDt9Ci5jaGVja2JveDpob3Zlcnt9Ci5jaGVja2JveDpkaXNhYmxlZHtjdXJzb3I6ZGVmYXVsdDtjb2xvcjojOTA5MDkwO30KLmNoZWNrYm94LXZhbHVle2JvcmRlcjoxcHggc29saWQgI0FCQUJBQjtiYWNrZ3JvdW5kLWNvbG9yOiNGRkZGRkY7d2lkdGg6MTZweDtoZWlnaHQ6MTZweDt2ZXJ0aWNhbC1hbGlnbjpjZW50ZXI7Ym9yZGVyLXJhZGl1czoycHg7aWNvbjpub25lO2ZpbHRlcjpkcm9wLXNoYWRvdygxLDQ1LCM4ODg4ODgsMC4yLDIsMiwxLDMsdHJ1ZSk7Y3Vyc29yOnBvaW50ZXI7fQouY2hlY2tib3gtdmFsdWU6aG92ZXJ7Ym9yZGVyOjFweCBzb2xpZCAjMjE2QUFFO30KLmNoZWNrYm94LXZhbHVlOnNlbGVjdGVke2ljb246ImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2NoZWNrLnBuZyI7fQouY2hlY2tib3gtdmFsdWU6ZGlzYWJsZWR7YmFja2dyb3VuZDojRDRENEQ0ICNDQ0NDQ0MgdmVydGljYWw7Y3Vyc29yOmRlZmF1bHQ7fQouY2hlY2tib3gtbGFiZWx7dmVydGljYWwtYWxpZ246Y2VudGVyO30KLmNoZWNrYm94LWljb257aG9yaXpvbnRhbC1hbGlnbjpjZW50ZXI7dmVydGljYWwtYWxpZ246Y2VudGVyO2N1cnNvcjpwb2ludGVyO29wYWNpdHk6MTt9Ci5jaGVja2JveC1pY29uOmRpc2FibGVke2N1cnNvcjpkZWZhdWx0O29wYWNpdHk6MC41O30KLm9wdGlvbmJveHt3aWR0aDphdXRvO2hlaWdodDphdXRvO2hvcml6b250YWwtc3BhY2luZzo0cHg7Y3Vyc29yOnBvaW50ZXI7Y29sb3I6IzAwMDAwMDt9Ci5vcHRpb25ib3g6aG92ZXJ7fQoub3B0aW9uYm94OmRpc2FibGVke2N1cnNvcjpkZWZhdWx0O2NvbG9yOiM5MDkwOTA7fQoub3B0aW9uYm94LXZhbHVle2JvcmRlcjoxcHggc29saWQgI0FCQUJBQjtiYWNrZ3JvdW5kLWNvbG9yOiNGRkZGRkY7d2lkdGg6MTZweDtoZWlnaHQ6MTZweDt2ZXJ0aWNhbC1hbGlnbjpjZW50ZXI7Ym9yZGVyLXJhZGl1czoxOHB4O2ljb246bm9uZTtmaWx0ZXI6ZHJvcC1zaGFkb3coMSw0NSwjODg4ODg4LDAuMiwyLDIsMSwzLHRydWUpO3BhZGRpbmctdG9wOjFweDtjdXJzb3I6cG9pbnRlcjt9Ci5vcHRpb25ib3gtdmFsdWU6aG92ZXJ7Ym9yZGVyOjFweCBzb2xpZCAjMjE2QUFFO30KLm9wdGlvbmJveC12YWx1ZTpzZWxlY3RlZHtpY29uOiJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9vcHRpb24ucG5nIjt9Ci5vcHRpb25ib3gtdmFsdWU6ZGlzYWJsZWR7YmFja2dyb3VuZDojRDRENEQ0ICNDQ0NDQ0MgdmVydGljYWw7Y3Vyc29yOmRlZmF1bHQ7fQoub3B0aW9uYm94LWxhYmVse3ZlcnRpY2FsLWFsaWduOmNlbnRlcjtjdXJzb3I6cG9pbnRlcjt9Ci5vcHRpb25ib3gtaWNvbntob3Jpem9udGFsLWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjpjZW50ZXI7Y3Vyc29yOnBvaW50ZXI7b3BhY2l0eToxO30KLm9wdGlvbmJveC1pY29uOmRpc2FibGVke2N1cnNvcjpkZWZhdWx0O29wYWNpdHk6MC41O30KLmhwcm9ncmVzc3tib3JkZXI6MXB4IHNvbGlkICNBQkFCQUI7cGFkZGluZzoycHg7Ym9yZGVyLXJhZGl1czoycHg7YmFja2dyb3VuZDojRjFGMUYxICNGRkZGRkYgdmVydGljYWw7ZmlsdGVyOmRyb3Atc2hhZG93KDEsNDUsIzg4ODg4OCwwLjIsMiwyLDEsMyx0cnVlKTt9Ci5ocHJvZ3Jlc3MgLnByb2dyZXNzLXZhbHVle2JvcmRlcjpub25lO2JhY2tncm91bmQ6IzZDQUFEQiAjMjE2QUFFIHZlcnRpY2FsO2hlaWdodDoxMDAlO2JvcmRlci1yYWRpdXM6MnB4O30KLmhwcm9ncmVzcyAucHJvZ3Jlc3MtdmFsdWU6ZGlzYWJsZWR7YmFja2dyb3VuZDojQkZCRkJGICM4QzhDOEMgdmVydGljYWw7fQoudnByb2dyZXNze2JvcmRlcjoxcHggc29saWQgI0FCQUJBQjtwYWRkaW5nOjJweDtib3JkZXItcmFkaXVzOjJweDtiYWNrZ3JvdW5kOiNGMUYxRjEgI0ZGRkZGRiBob3Jpem9udGFsO2ZpbHRlcjpkcm9wLXNoYWRvdygxLDQ1LCM4ODg4ODgsMC4yLDIsMiwxLDMsdHJ1ZSk7fQoudnByb2dyZXNzIC5wcm9ncmVzcy12YWx1ZXtib3JkZXI6bm9uZTtiYWNrZ3JvdW5kOiM2Q0FBREIgIzIxNkFBRSBob3Jpem9udGFsO3dpZHRoOjEwMCU7Ym9yZGVyLXJhZGl1czoycHg7fQoudnByb2dyZXNzIC5wcm9ncmVzcy12YWx1ZTpkaXNhYmxlZHtiYWNrZ3JvdW5kOiNCRkJGQkYgIzhDOEM4QyBob3Jpem9udGFsO30KLmhzbGlkZXJ7cGFkZGluZy1sZWZ0OjVweDtwYWRkaW5nLXJpZ2h0OjVweDt9Ci5oc2xpZGVyIC5zbGlkZXItdmFsdWUtYmFja2dyb3VuZHtib3JkZXI6MXB4IHNvbGlkICNBQkFCQUI7cGFkZGluZzoycHg7Ym9yZGVyLXJhZGl1czo0cHg7YmFja2dyb3VuZDojRjFGMUYxICNGRkZGRkYgdmVydGljYWw7ZmlsdGVyOmRyb3Atc2hhZG93KDEsNDUsIzg4ODg4OCwwLjIsMiwyLDEsMyx0cnVlKTt3aWR0aDoxMDAlO2hlaWdodDo4cHg7dmVydGljYWwtYWxpZ246Y2VudGVyO2N1cnNvcjpwb2ludGVyO30KLmhzbGlkZXIgLnNsaWRlci12YWx1ZS1iYWNrZ3JvdW5kOmRpc2FibGVke2N1cnNvcjpkZWZhdWx0O30KLmhzbGlkZXIgLnNsaWRlci12YWx1ZXtib3JkZXI6bm9uZTtiYWNrZ3JvdW5kOiM2Q0FBREIgIzIxNkFBRSB2ZXJ0aWNhbDtoZWlnaHQ6MTAwJTtib3JkZXItcmFkaXVzOjJweDtjdXJzb3I6cG9pbnRlcjt9Ci5oc2xpZGVyIC5zbGlkZXItdmFsdWU6ZGlzYWJsZWR7YmFja2dyb3VuZDojQkZCRkJGICM4QzhDOEMgdmVydGljYWw7Y3Vyc29yOmRlZmF1bHQ7fQouaHNsaWRlciAuc2xpZGVyLWJ1dHRvbnt2ZXJ0aWNhbC1hbGlnbjpjZW50ZXI7aGVpZ2h0OjE0cHg7d2lkdGg6MTRweDtib3JkZXItcmFkaXVzOjE2cHg7fQoudnNsaWRlcntwYWRkaW5nLXRvcDo1cHg7cGFkZGluZy1ib3R0b206NXB4O30KLnZzbGlkZXIgLnNsaWRlci12YWx1ZS1iYWNrZ3JvdW5ke2JvcmRlcjoxcHggc29saWQgI0FCQUJBQjtwYWRkaW5nOjJweDtib3JkZXItcmFkaXVzOjRweDtiYWNrZ3JvdW5kOiNGMUYxRjEgI0ZGRkZGRiBob3Jpem9udGFsO2ZpbHRlcjpkcm9wLXNoYWRvdygxLDQ1LCM4ODg4ODgsMC4yLDIsMiwxLDMsdHJ1ZSk7aGVpZ2h0OjEwMCU7d2lkdGg6OHB4O2hvcml6b250YWwtYWxpZ246Y2VudGVyO2N1cnNvcjpwb2ludGVyO30KLnZzbGlkZXIgLnNsaWRlci12YWx1ZS1iYWNrZ3JvdW5kOmRpc2FibGVke2N1cnNvcjpkZWZhdWx0O30KLnZzbGlkZXIgLnNsaWRlci12YWx1ZXtib3JkZXI6bm9uZTtiYWNrZ3JvdW5kOiM2Q0FBREIgIzIxNkFBRSBob3Jpem9udGFsO3dpZHRoOjEwMCU7Ym9yZGVyLXJhZGl1czoycHg7Y3Vyc29yOnBvaW50ZXI7fQoudnNsaWRlciAuc2xpZGVyLXZhbHVlOmRpc2FibGVke2JhY2tncm91bmQ6I0JGQkZCRiAjOEM4QzhDIGhvcml6b250YWw7Y3Vyc29yOmRlZmF1bHQ7fQoudnNsaWRlciAuc2xpZGVyLWJ1dHRvbntob3Jpem9udGFsLWFsaWduOmNlbnRlcjtoZWlnaHQ6MTRweDt3aWR0aDoxNHB4O2JvcmRlci1yYWRpdXM6MTZweDt9Ci50YWJiYXJ7aG9yaXpvbnRhbC1zcGFjaW5nOjVweDtwYWRkaW5nLWxlZnQ6NXB4O3BhZGRpbmctcmlnaHQ6NXB4O2hlaWdodDphdXRvO3dpZHRoOmF1dG87YmFja2dyb3VuZC1jb2xvcjp3aGl0ZTtib3JkZXItYm90dG9tLXdpZHRoOjFweDtib3JkZXItYm90dG9tLWNvbG9yOiNBQkFCQUI7Y2xpcDp0cnVlO30KLnRhYmJhciAudGFiYmFyLWNvbnRlbnRze2JvcmRlcjpub25lO2JvcmRlci1ib3R0b20td2lkdGg6MXB4O2JvcmRlci1ib3R0b20tY29sb3I6I0FCQUJBQjt9Ci50YWJiYXItYnV0dG9ue2JvcmRlci1yYWRpdXM6MHB4O2JhY2tncm91bmQ6I0VERURFRCAjRTZFNkU2IHZlcnRpY2FsO3BhZGRpbmc6NnB4O3ZlcnRpY2FsLWFsaWduOmJvdHRvbTt9Ci50YWJiYXItYnV0dG9uOmRvd257fQoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZCwudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpob3ZlciwudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpkb3due2JvcmRlci1yYWRpdXM6MHB4O2JvcmRlcjoxcHggc29saWQgI0FCQUJBQjtib3JkZXItYm90dG9tLXdpZHRoOjFweDtib3JkZXItYm90dG9tLWNvbG9yOndoaXRlO2JhY2tncm91bmQtY29sb3I6d2hpdGU7fQoudGFiYmFyLXNjcm9sbC1sZWZ0e2ljb246ImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2xlZnRfYXJyb3cucG5nIjtib3JkZXItcmFkaXVzOjA7fQoudGFiYmFyLXNjcm9sbC1yaWdodHtpY29uOiJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9yaWdodF9hcnJvdy5wbmciO2JvcmRlci1yYWRpdXM6MDt9Ci50YWJiYXItYnV0dG9uLXNlbGVjdGVkIC5sYWJlbHt9Ci50YWJiYXItYnV0dG9uLXNlbGVjdGVkIC5pY29ue30KLnRhYnZpZXd7Ym9yZGVyOm5vbmU7d2lkdGg6YXV0bztoZWlnaHQ6YXV0bzt9Ci50YWJ2aWV3IC50YWJ2aWV3LXRhYnN7fQoudGFidmlldyAudGFidmlldy1jb250ZW50e2JvcmRlcjoxcHggc29saWQgI0FCQUJBQjtwYWRkaW5nOjVweDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO30KLmxpc3R2aWV3e2JvcmRlcjoxcHggc29saWQgI0FCQUJBQjtib3JkZXItcmFkaXVzOjFweDtwYWRkaW5nOjFweDt3aWR0aDphdXRvO2hlaWdodDphdXRvO2JhY2tncm91bmQtY29sb3I6I0ZGRkZGRjt9Ci5saXN0dmlldyAubGlzdHZpZXctY29udGVudHN7c3BhY2luZzowO3dpZHRoOjEwMCU7cGFkZGluZzoxcHg7fQouaXRlbXJlbmRlcmVye2hlaWdodDphdXRvO3BhZGRpbmc6NXB4O30KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXIuZXZlbntiYWNrZ3JvdW5kLWNvbG9yOiNGRkZGRkY7Y3Vyc29yOnBvaW50ZXI7fQoubGlzdHZpZXcgLml0ZW1yZW5kZXJlci5ldmVuOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2VjZjJmOTt9Ci5saXN0dmlldyAuaXRlbXJlbmRlcmVyLm9kZHtiYWNrZ3JvdW5kLWNvbG9yOiNGOEY4Rjg7Y3Vyc29yOnBvaW50ZXI7fQoubGlzdHZpZXcgLml0ZW1yZW5kZXJlci5vZGQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZWNmMmY5O30KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWR7YmFja2dyb3VuZC1jb2xvcjojYTdjNGUyO2NvbG9yOndoaXRlO30KLmxpc3R2aWV3LnBvcHVwe2ZpbHRlcjpkcm9wLXNoYWRvdygxLDQ1LCMwMDAwMDAsMC4yLDIsMiwxLDMsZmFsc2UpO30KLmRyb3Bkb3due2ljb246ImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3VwX2Rvd25fYXJyb3dzLnBuZyI7aWNvbi1wb3NpdGlvbjpmYXItcmlnaHQ7fQouaGVhZGVye3dpZHRoOmF1dG87aGVpZ2h0OmF1dG87c3BhY2luZzowO30KLmhlYWRlciAuY29sdW1ue2JvcmRlci1yYWRpdXM6MDtpY29uLXBvc2l0aW9uOmZhci1yaWdodDt9Ci5oZWFkZXIgLmNvbHVtbi5zb3J0YWJsZXtpY29uOiJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC91cF9kb3duX2Fycm93cy5wbmciO2ljb24tcG9zaXRpb246ZmFyLXJpZ2h0O30KLmNvbHVtbiAubGFiZWx7d2lkdGg6OTIlO30KLnRhYmxldmlld3tib3JkZXI6MXB4IHNvbGlkICNBQkFCQUI7Ym9yZGVyLXJhZGl1czoxcHg7fQoudGFibGV2aWV3IC50YWJsZXZpZXctcm93e3BhZGRpbmc6MHB4O3NwYWNpbmc6MnB4O2JhY2tncm91bmQtY29sb3I6I0RERERERDt9Ci50YWJsZXZpZXcgLnRhYmxldmlldy1jb250ZW50c3tzcGFjaW5nOjA7cGFkZGluZzowO21hcmdpbi10b3A6LTFweDt9Ci50YWJsZXZpZXcgLml0ZW1yZW5kZXJlci5ldmVue2JhY2tncm91bmQtY29sb3I6I0ZGRkZGRjt9Ci50YWJsZXZpZXcgLml0ZW1yZW5kZXJlci5ldmVuOmhvdmVye2JhY2tncm91bmQtY29sb3I6I0YwRjBGMDt9Ci50YWJsZXZpZXcgLml0ZW1yZW5kZXJlci5vZGR7YmFja2dyb3VuZC1jb2xvcjojRjhGOEY4O30KLnRhYmxldmlldyAuaXRlbXJlbmRlcmVyLm9kZDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNGMEYwRjA7fQoudGFibGV2aWV3IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWR7YmFja2dyb3VuZC1jb2xvcjojQ0NDQ0NDO30KLnN3aXRjaHtiYWNrZ3JvdW5kLWNvbG9yOiNGRkZGRkY7Ym9yZGVyOjFweCBzb2xpZCAjQUJBQkFCO2JvcmRlci1yYWRpdXM6MnB4O2N1cnNvcjpwb2ludGVyO3BhZGRpbmc6MHB4O3dpZHRoOjYwcHg7aGVpZ2h0OjIwcHg7ZmlsdGVyOmRyb3Atc2hhZG93KDEsNDUsIzg4ODg4OCwwLjMsMSwxLDEsMyx0cnVlKTt9Ci5zd2l0Y2g6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojRkZGRkZGO30KLnN3aXRjaDpzZWxlY3RlZHtiYWNrZ3JvdW5kLWNvbG9yOiM5OGM0ZTY7fQouc3dpdGNoIC5idXR0b257aGVpZ2h0OjEwMCU7d2lkdGg6NTAlO30KLnN3aXRjaC1sYWJlbHtjb2xvcjojQUJBQkFCO30KLnN3aXRjaC1sYWJlbDpzZWxlY3RlZHtjb2xvcjojMmQ3Y2I5O30KCg"},{ name : "img/folder2.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQJJRVJWM+9AAAAuUlEQVQoz4WQoQrCYBCAv/tZHGIT05YsJrHJMAgGrWIxWszqO4jBYPIZTDbF6AsIPsMQNG9ahngGZSrb2KXj7rvvjoOcEO3S/OQ3ZvJMEDqPs7pOkwbrR3ZU74sDEQsJ+Cv9u10dxQb1sBNEiaq6FoD2KeIngCtbJm9DQ8apSwxtA1rmknFGi4MBBqwzgA57Azjipy6wieRhqHHKmO+xATTUQsYfVgCGnQSpbYczgOiQSqogZCl38uMFSHYylfkRpu0AAAAldEVYdGRhdGU6Y3JlYXRlADIwMTctMDktMjBUMDk6Mzc6MjErMDI6MDCnL99HAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE3LTA5LTIwVDA5OjM3OjIxKzAyOjAw1nJn+wAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAAASUVORK5CYII"},{ name : "img/control-000-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH4gYNDhAh5kcSUQAAAENJREFUOMtj/P//PwMlgImBQjCIDfDPnvGfYhcQYwhBLxAyhKgwwGcIUQZsnJrBSLYB+DQTNICQZgYGBgbG0aRMuQEA+v0UakWvu/UAAAAASUVORK5CYII"},{ name : "styles/native/main.min.css", data : "LnRleHRmaWVsZDpuYXRpdmV7YmFja2dyb3VuZC1jb2xvcjpyZWQhaW1wb3J0YW50O30KLmJ1dHRvbnt9Ci50YWJiYXItYnV0dG9ue25hdGl2ZTpmYWxzZTt9Ci50YWJiYXItYnV0dG9ue2JvcmRlci1yYWRpdXM6MHB4O2JhY2tncm91bmQ6I0VERURFRCAjRTZFNkU2O3BhZGRpbmc6NnB4O3ZlcnRpY2FsLWFsaWduOmJvdHRvbTtib3JkZXI6MXB4IHNvbGlkICNBQkFCQUI7fQoudGFiYmFyLWJ1dHRvbjpkb3due30KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQsLnRhYmJhci1idXR0b24tc2VsZWN0ZWQ6aG92ZXIsLnRhYmJhci1idXR0b24tc2VsZWN0ZWQ6ZG93bntib3JkZXItcmFkaXVzOjBweDtib3JkZXI6MXB4IHNvbGlkICNBQkFCQUI7Ym9yZGVyLWJvdHRvbS13aWR0aDoxcHg7Ym9yZGVyLWJvdHRvbS1jb2xvcjp3aGl0ZTtiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO30KLnRhYmxldmlldyAuaGVhZGVye21hcmdpbi10b3A6MHB4O21hcmdpbi1sZWZ0OjBweDt9"},{ name : "haxeui-core/styles/default/dialogs/question.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA61pVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wUmlnaHRzPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvcmlnaHRzLyIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcFJpZ2h0czpNYXJrZWQ9IkZhbHNlIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InV1aWQ6NzBDQkJENjFFODMxREYxMTlCMjJGQkJBMDE3QTBERTkiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6RTkxRDlCRjg4NDM0MTFFMDk1NDQ5NjM2NUYzMUQ5NjMiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6RTkxRDlCRjc4NDM0MTFFMDk1NDQ5NjM2NUYzMUQ5NjMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBXaW5kb3dzIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QTI1NDYxQUQyRjg0RTAxMTg1RkJBOTI1NDUxRDI5NkIiIHN0UmVmOmRvY3VtZW50SUQ9InV1aWQ6NzBDQkJENjFFODMxREYxMTlCMjJGQkJBMDE3QTBERTkiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz6KMnz6AAAI6klEQVR42sRXa2wU1xX+Zmcfsy977fWu3zZP462xiV3TGCgutsEqTaAQhEosCk1VRaqiqqoa9V9/VG1VtWnzp1KrVkFNlERuinikcqHENbIMxCblEdtgMIJSr9exvX7ta3Z2d3Z2eu54d1mwQUr/ZKRvZ3bu4/vOueece4dTVRVf5KVnPwcOHMi+4DhOg06ny/5P3wW6VRCqCEUEa2Y8XUmCSJgneAk+MizGGjIGplIp7TnX4LNnz2YneNZlI2wRBMFTX1/v2UJXZWXlGovFUqTX620aezIZEUVxfnJy8r8jIyPDo6OjdyRJukNNw4TIsybnmKKneICZXm+321va29t3trS0dBiNxlIiw9OWjY3jeR6JRGJ6aGio7+LFi5cikcgQNY2SB9TP4wETdWz1eDytXV1d3ybrqxmxd1rCyIMk7k4o8C+lEBKXJ8uzcnAX6FBbzaNhvR7FhbrSHTt2HG1qatrZ3d397t27d4up2wAhvmoMPElO2NPZ2bl/9+7dXbIsW32zEv7xsYw7ExzyC/JRVORATakAQTBqAyQpjkhEwuB4CBeuBuGpVvHCdgOJ0lcfP378R319fcW9vb1s3t4nRTwpgLn9a4y8o6PjGK2j6epYEj0fp1DocuO5Jje5VyGyOLzeRcRicS24TCYD7HYryspcqKoqxtTUHN78YB77tvNoqeOt7e1txxRFAQlJpEWojwlgk6TXsKG2tra1ra2tSxQjpr7rKfTd4FC3eSPY0vl8S4iEw2j2GNDW6cD6KhdsZj2m/DFcux3C2f4pGM15KCjIg8Nhw6mBCQRFBXuaU6a2tl1dXu+Ef3z83iwt73BGgC4nRexWq3X7kSNHjkajonXwloze6xSFDRsRDEpk1RK5OobO5434yXeqsXVzPgrzDDAaOKwtN+NwZzF+9YNKiOFFzMwEEApJWL++Ch99ooLNRYFpPXTo0FHKnu2MK2O0LqOEXjaS5TspkKun52XN7bW1a+D3h7CwEGITgOIBl26EoKRWz4KqUjMO7sqjpYkhEIho48orSvDh5aQWtAaDoZqCcyfjetIDFOhCXXNzc1s0GsX5IQX5hUWIRhM0SVAjzmA+qOLkBR9OfjSF7/9iFK/+bBTTc7GsiOY6B9gcLGtCIZHEJGAU7Dg3mNTGNzU1tplMpjrGmRVAiqrq6uo8qZRSMrOgYIyi3enMx/T0wmPkDCyPT5z1E+YwMaPCN6fi3MD0o6pl0Wv9mAAWeIFAGFargFsPU5gLgNWJkpqaGg/jzA3CdSSgnim/9ZAmsds0F8bjiVVdzcp0IiFTexzxWBRuuwrKdS2Wbo6LFAOz5G49qFIyt5MYGZxOT3Mr2FEno6ZmY/2NGzfW0VT39GkPuEtLS6qZ4nEvp6XU0lI4mx2Zi7UzkRExmhan4rv7CkGZp1nNCC9/GiGBPM3JabGiJpJkTAg2m4XqSJIEAG53cTXjzPWAzWQSnJR6FCwqyvN4mlDJEieJOBwWIUalrCgdWdT5vBnf+KpD8wgjH5+IY+Am7UnUBraZcQxMCONQMTOv0F8eZrPgZJy5AoxUA6ws10ORFCrJgszuFRHjCJPFbAJwelCTdhVYFRx7wZklnw+m8Ot3/ERsyu4n0KAjP3FIEYKRJL0yMA9ZGWeuALYpcWxQSk3RmimQCYFQTPMEG8TzuYuhor3ZBMHEa+RsA/rtu9OIxI0kkNPKKUd7mY5Lb+ccWz5OM0rjID6GXAFJWsMIx+nyrIJKXpAQiqagqDx5k18RhCqJLHY+Ivf5k7j/mQ683ojl4wO3fNew7AlZUWG3cFpFleVkhHHmChAjEXFREMx5bocOc+E4eIOJvKGsmgVqStHigpEzETMLMepvpP+mdEnHE3eyWkmguFivCRDF6CLjzBXg93q9k5s2edZ41hoxcU2E2eYkAfJTDxJ//nAKfzw1vxyQvAE2R/kjxrTxmQf2Wo6GsXmdoC0DHVwmGWduJfzP8PDwHQNZ0VhjRlwKgj3rjQItgWlVWAsq4aBq6XI5YXWUQWd4vC+XeeYp1ijyoUTRuMlMYnQYGxu7wzhzBTykk9Q9quH+EqceTTUmhIMLtN8LtK6mFWB5vqMmhA9+WYnTv1mP175JWZOMr+ynQYAcC2GrxwJXPsfc7x8bu32PceYKkKjAjFy6NHCF5ffh3UVISX5aaxlG40oRciyM771UCotg0OLgYEcZygvjq4pVKdYMygK+1emiTFBx5crlK5IUHWGcuXsBw9Xe3gtDgUDA5y4wUI674J8cI/elaCkovfSPwJO7pXhKI+fT+ZlUdI/1YWDZEpwZwyv7S1Fo57C4uOjr7//XEOPKnA11mRJLCIXDof4TJ/50hp6ju75ciJf3FMA3Pgg5LlG0syhfhiW/DL+jvJ8PyJBiCt58z4tQqiLbziDHo5h5MISje4vQ2phPpVuOvv32W2fC4XA/42Kc2VNxQ0NDNmbJNQf37t13uKvrlZcEwWTsHfLj9933YczfgKLyWhJiSp/zk4gGPqO7TEFYTu4Wlj1BsTA/dRdy8D5+eLQGHV9x0f4hJd5//y+nL1zoOUmV80zmSEZH+BVnQpUK0vnTp/9mpWLBHz/+6oud28rMWzY58Yfu2+j/5DZFfxUK3WspTQtgc1ZrgxIxEZHgFBb9DyEuedHWXITXftwCl8PINi/pnXfe6unpOX2OasZ5OguoK74LcjygbbGUDWbaz/c3NDR2vP76T1+sqKgq1VNF9M1GcfHqJC5fn8IDbxBzi1FtjKvQQudDB3Y2l6O9pQLlLotWzn0+7/Qbb/y8Z3T0Zh+R/52ySiIBWS7mgacJYGDLscNms3/94MEjzYcOvdzsdpc4WVHheZ2G5W+X5Z2OFZhkcvnDw++fWTh1qvvamTN/vRaJhP9Jbr9C5CpL688jIBOcDsIus9myddu21g2trR0b6uufK3a5ih10iDWzMfRZJs3NzQZGRz+dHRjouz84OHCfUu3flCH9hADLFEb+/wrIHMXYFrqJ7l+iblR3kZ/+iEH6YyNImKK6P0YWj9NdZKehTKo+U8AXef1PgAEA4gDzbt3jjkkAAAAASUVORK5CYII"},{ name : "img/layers_grey.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRoWLx+kx11XAAABKUlEQVQoz23RvUubcRTF8c9jI1jEIbhIqUMDBouTi6uL7dQK/hVKnRoD5WdfjG/9LTadKu3o7CC0ThWHLIJdMoWKDh0UcQkOUhQixMEHfVDPeM7l3nv4JjKKz1VRCn9vveQm7FUxJYdL31VCMzMQO037JJ9ZdmrBt9AiIb62oui+9pXDryS+sKHbw/pvoiNsKVrTvhe2rSmGrUdsn401rSvoz8Q7Ju2GBkksWDHhzGfHlvTj0AdPzOqxoZxDGz2if94ZwIFlz9Izac1RXw2DGkZB3dtQu6751Ly6C4v60g9OfNRl2Fw4SuKYnx6j4b0RJVT9sWwI58YT4ktVQ2DTF8x4BRpK4ff1DzmT5vWihU40zfkRLrOw8irepLBWVcLpHZoQB1Pce7feFZsHVOj9wCZqAAAAAElFTkSuQmCC"},{ name : "templates/sources/Class.template", data : "cGFja2FnZSAkcGFja2FnZTsKCmNsYXNzICRuYW1lIHsKfQ"},{ name : "img/audio-file.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCgMQKxA+KJu1AAAApUlEQVQoz63QIQ7CMACF4b8LIQgUt+EAIACBxRESEGgE3AIsCASCOcoREJyCGyyZ3LJAmoeYYGMdil+2XyseANqrXKoRxWS/wEaZBr9ASytl6gEE+Brz4M4SoOEFZwCuvh9CBCw+B0XwZGYmxBxI89dlsKZjjkCbC1NuVZCYBABDQJNXFewUawg4+pzo+ody2spJmstJsvVD5dn6oQr9C0TeuwjgDRTmgmv5tBfpAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE3LTEwLTAzVDE2OjQzOjE2KzAyOjAwMHjlPgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNy0xMC0wM1QxNjo0MzoxNiswMjowMEElXYIAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/check.png", data : "iVBORw0KGgoAAAANSUhEUgAAAA4AAAAKCAYAAACE2W/HAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3woKFDgxV99L8gAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAACRUlEQVQoFQE6AsX9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVm1gAAAAAAAAAAADclUeEl663/3O89DEAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANmdWGy42gCTvNLv/iVchwJXRSwpAgAAAAAAAAAAAAAAAAAAAAAAAAAAfLvqANWbWAAAAAAA1pxYXcPgAJO72///CAgLAu/b5QAbEAK3BAAAAAD347ZXcGST+gRMZgUfTVC9diAB7YQAAADfoFhcwt8Aoq7U//8KAf4AFSI+AExgQcscBgQ2Avv4z4TJtc6o9wkHrvbi1Knu0NqaAAAAAOynWGW/3QCjqtL//wsB/gAXIzkBQ2JexkkfCzwAAAAABAH+/gD79O4A5v0C/xPdzADsAwRSV2NunKfR6mO82wAACwT/AREZMwA9WlvKQSoRTgEBAfq76v8AAQAAAAD51Jt3rb7ciKO72/8OCAIAAQIDAfv+AQAFAv4ABgonAExwbtlALhQ+FgEB6rvq/wBFFgEABAAAAAAHLGWJ+9KZCvX4/H6zxuH/CggBAAUD/QD9/B0AUnh07z0mDjgTAQHwu+r/AEUWAQAAAAAAAP/VmwAAAAAAAAAAAP/YnJeIfGv/VFVT/1BMbP+04Pb//f//BgAAAAC76v8AAAAAAAAAAAAAAAAAAAAAAAD/1ZsAAAAAAAAAAAD/35yvb2V4/7Tg9v8AAAAAAAAAALvq/wAAAAAAAAAAAAAAAAAAAAAA6MK1OUXq0R0AAAAASUVORK5CYII"},{ name : "img/attachment.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQPBTnqiftOAAAA8UlEQVQoz33RPU/CUBTG8acBNRoGV5yMLAJ+AXcHAa0Lo8TBMLmqiSIOTpUXdWbiG5gYh7sYB11cMGniUIsTq9/hz1LSK228y7knv+TkvEiJxwonjHjFxVEK53ijT54tXjhM54vov8HHPyyxxJiFeb608ib389ySqDOQJPb5ocCqzVcSdULWJfYYU8ZwHHPb4hohZQxezNcWVwkpYbidlX/i5g9/U8TQmbHLhAzbEVcIKGLoxt17tCWGVCR2CdjE0Iuny0bRV4OSmjrQg76cU3v+GhMyLNLgjDUMd8n9P/LMDssc8Uk/7X5ZzvH55R03qVOVwraxRGS3TgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNy0wOS0yMFQxNTowNTo1NyswMjowMFSYDdUAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTctMDktMjBUMTU6MDU6NTcrMDI6MDAlxbVpAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAABJRU5ErkJggg"},{ name : "img/document.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQJLC2wmMxqAAAA2ElEQVQoz33RMUoDURCA4e+JAcFCJGksLBRS2QkKdjYL2+YIwTN4AksvIJEl4AXSprCwsxRsLARFAlYSsdHOsTDZzerqVPPe/Pwzb14icn2PFiOTpWl5ijzyWlkMooj2d76kKaaOnUbnb2DLvkujaLNcao90vTtJgSGmxvaMSyAVlSCNIVA3rDu3JtM18pFu1YGZ4U1RH6cy7Grp4cqrnvt5yxIwseoMkZ7ipsHgwMbMdWHbp7ufwLUVO3jQsellfl0tqtW4soVXPGNSzuO3wX+Gfhw2/siQL2Z9N7ZiQmA5AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE3LTA5LTIwVDA5OjQ0OjQ1KzAyOjAwVwNcUwAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNy0wOS0yMFQwOTo0NDo0NSswMjowMCZe5O8AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/option.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3wkMBhgPflMg6QAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAABB0lEQVQY043MQSsEYRyA8ef/zhtK2WTWpkSSjMbWnqQNN5vWkVrOfAcX5exDODOa87ZxW9ritLVNu5SUXJaRVgjNzuuw5TblOf96BMC8+6Pbu/5wYYZW5RYUMfbiBuFV09k/PnidF3nSxhz2X5w2A8Au32C0QkDxXPOMWOnWZbkRVoyZVC/B9NfRSd0G6KFeYvUJdDjzPTvT/rhWreo5b5YmKd1p4NUeXVWvddBaEqGyNPcPbRT/TOXyKaLIJIK4GzE1kUE5K6sMdaNEGKWylPLjgRpx7wZ2tnIhQBTztzbdHwMpCpulsJ0ZXFAie9/L63Mu4BRnkdgAJiadLwmMOUvFrLsm8vkLmFpcqEjhuWQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/haxeui_tiny.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAB2AAAAdgB+lymcgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAHfSURBVDiNfZO9bhNBFEa/uTPjdeI4siENjSVEXoECCSQXFNSUlIjecp6CzkmBUlFTQQ1SBA2SCz8AUpoYQ2xlwdn/2Z31zg4FcuJYa3/lzD3nXs3VsPdfL6a2tLomCFJQm1lMS5ijV88efsZKPny76OYWx5zToRfpYHadmokbSvZx+PvnzEs7y0IiBkdQQsRGltl355dhWJe8F6XF0ys/208ycyONQ28iWg2BmXfbqSwt0tw0AHTdUHcv5xnitEBVUqVAzR3Zqrp0Qw030GjUJfZ2RKUgz9MWwWLiSF4JL1MlMcUCAJsQ47bfbshoE7xJkqVJZK3p0+NHB2dOjQ+3wVWSoiiGo9PXZwQAujAnbrAdviOpC3DJTwCAAEApA6XNdnIlSaqhwv/NCABqDvV2HcKeU/3aq3GvY7hejBJFDwDY8Pzv8x+/wk9jN2kCgNIlYl299yUMACZPoyIJXxJKNnAD3VwWbZpkFQYAErUmOA2ICB211nFdsg4DACMOC9uheZT7VeMuJVXwjYRLX/yJsjuHemHgxzpRejGSAgNWMv3gfrOfL8onkcr28+J2W1I6EOOrRM68ZDz3M/hJ3mbAVJvy6PvbF6vf+cub01H34N7uMREdptkiiJU2QWBr/wCzgBMSEX+xcQAAAABJRU5ErkJggg"},{ name : "img/audio-file_grey.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCgMOLAENYaP6AAAAt0lEQVQoz63PMU4CURAG4G83xlhYbeFdPIAU0FgZ7AyJFmyCLQUdB1CK12BBYaGFgWC8gAWn4AYklGACMVgQ46777Pyrycw3k0wCYehaMR8u8rd9mYIT5fS9hHoR/M6dnnE4+xucm5tpw0EUPIFp7MKzHW5+GkWw0covLT1Y77fLoCvLRzg2ceW9Clb5CiRSh7ZVMAjL0MCnmkenVZDKvIZ7RzoSze92+c3ULRjGv4jmv8AiOlvAF0t1JV1PK1zuAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/global.min.css", data : ""},{ name : "img/plus_grey.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRoWLA+SXR7wAAAA10lEQVQoz4XRsUrDUBTG8d+97dJHEApunS0RfAEHKXkBu/kAEroIcepk5uAquNUX0G5ujgacnV3dKpmkDoaYKrb/6dzvO/d8cE7QUIxMJRJUKov89VsPUASZKwM/1C6V+ZpAEdyb+MtSmq8jso69smrriYxQjLx0hp/juhN00DfdyF5thAycRoltHPabhjdzn3jCGXrmhkiiHfRVUgzd0Py+7fhVVG0d8Bwt1P/atbve4/vxh5NW2ndkr31d5A8RpWUrjY07qy6J5Gup2a+g2kzaHGv7ub8A0Ps3zX8KKg0AAAAASUVORK5CYII"},{ name : "img/picture.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQONCU5F8qEAAAAoElEQVQoz4WRsQrCQBBEJ3biv/gnKWwF+4AfoQj2NqKlbYhV2iAIljYW6dRvsJIQEJ/FRZOTkJ1y9u3McSsZCgg16Jg/A+hO6FkVX6DUWe1ZOA0lJrTIJRS6S8p/Wyft/Yq+doy1rryLUj208SsAckIO3Ih4AQlLgBo4MqVkwYiicjLiGoiZ8QZgTtZ8pANWbBte+g9cfcuX+dXmsaxT6AMwGMhrZo0jIwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNy0wOS0yMFQxNDo1MjozNyswMjowMNzqauwAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTctMDktMjBUMTQ6NTI6MzcrMDI6MDCtt9JQAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAABJRU5ErkJggg"},{ name : "img/download.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQJKjJrymYZAAAAoklEQVQoz8WQMQrCQBBF3y5LsBBsJLU3CCKeJVims/Q6yQW2ykk0CLlBumCV0u7bLCEbE1unmv/n8ZkZiEqp0tixsaSgiA03A8xMfyXwD0C7X2NtLE1oM1VyAHKqlAXiYdmGtsXicTg8lja4e9SPcUalBg0qNX5D/eRRRrryBm5G0zU6JasrJuosNfnqETm10QHPi+fC+EjKxQDozGkBaMwdPvOMMgZRzxXqAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE3LTA5LTIwVDA5OjQyOjUwKzAyOjAwxI8DLQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNy0wOS0yMFQwOTo0Mjo1MCswMjowMLXSu5EAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/dialogs/cross-circle-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAxtJREFUeNpUVF9IU2EU/213c+XmyjJtDV1NmytTK6YhaaJWlKBCYUW4nqKHqKfwVane8lUEoRcRHOVSh5GZBDaM0FaxCtS1uznMf6iIW7o/XbVzbkL2we9+373n/H7nO98531XU1dVBoVBAqVTKM+EA4RiADIIef0eYsLC1tTVOWCRgc3MTPKvwb2gIxSaT6Wx9ff1Ns9mcL0mSbFCpVBBF8Vt3d3dXKBR6T5/GCHG2CVarlaMy+WJNTU2D3W5/IHm9GfPPn2OurQ1LPT2IiCJ0Wm1G5fVr52mngs/nY3KIsCHk5ubyVkpra2sbKioqbgWbm6EeGYGJopoMBhjT0qALh7HqdmPe8wn59oZCQRAkEllkEeXGxkZGVlZWWVVVpV1sbsJBcj45MIC1tTUsLS3JWF9fx6nBQaQtL2Pq0SOUl5fbjUZjGXNZIO/q1Ss3fg4NQT8zC4vTKed95NkzrKysyOA1j+MuFzTBKSy+G0Z19eUbzGWBQ5mZmXnh0THodDo4c3Jk51gsBmNnJ1Lb2+H3+xEIBPB03z5EVlcR+eiBwWDIYy4L7I1EfiHq9UL6/RspWi06KO/x8XEsLCzIQlxet80mlylGAuwbjcbAXBWVikUgUV2jZFyfnYWO1nRQUKvVSEpKkpGyXWshkUCM7DKHuEp6RARBBXXeCcQo32QyHB0e/o/MfXBuchI6FiAy+wJKFohw9NkfP/wTOlsxVmi7hh3k70VF+FxYKAswiqkforSz5NNFCAanJpjLAl8dDkdvWmk54icK4L1wQSb7iHyY4jA81Cs8Xlos2KRAqSWlcLl6e5nLKcwFAn53X1/PC+vjFihsZ/CaDmwPt/A2eN1lNkNRXALLwyfo73e9CAYDbuYK6enpfDFmvN4vSkpPeamxyborx4KQoManmWn4VGpIlZdgvn0Xljv34XB09DmdXb3U0gOkKykKCgrkmxUOh3fH4/GL2dmWqnv3GqtttpLsHRcNHs8HsbW15ZUo+t5qNJo3er0+Kt/gHQJy+yYSiUx6P7Od/v5t/jJhigijdD7TWuoVEpB/AX8EGAD9/4gGGMr1dAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/up_down_arrows.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAYAAAD+WDajAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AgUERIPwDSeLgAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAjElEQVQY012PMQ4BYRBG3/vXJag4E0KsZGuF1e1dCBtRbETiPEpHGYV/BZN8zbzJmxkfwzEBCJzKWWy6uwUyEBK5jqtpAOzX8+h7KSFtOQuVPvtqEQI2TRMRgZqn0yc+R5PegkgBFEoCBodq+dnxrVZJ28vNH1UGdduZCqA+X/0Hvq99/1O3nSq7DFReYz8i0UirE+EAAAAASUVORK5CYII"},{ name : "styles/main.min.css", data : ""},{ name : "haxeui-core/styles/default/dialogs/information.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAACElJREFUeNrEV2tMW+cZfs/xsX1sYzAX2xAubnMBPAopjFYkKCxcgjali9KhaAljQf2zP5MmbevP7de0P6s0aZo0qVKrpZo6ulS5LKJNO0rESCgkadJxMxAlyzBmgLn5dnx8O8d738/Ys4Fk6v70SA/n8N2e53tv32cumUzC1/kI9Ofs2bOZBo7jGHiez/y/8xbxVYGoQpQgTOn5+CQQEmID4UZ4cGMR6khvUFVV9p294evXr2cWeN6ThzgqiqKzvr7eeRSfysrKF4xGY4kgCHmMPZEISZK0sbS09K+pqanJ6enpOVmW57BrEhF63uIcKXqGBWjr9WazuaWjo+NES0tLp06nK0MyeJbbaJ5Go4FYLLYyMTExfOvWrduhUGgCu6bRAsmvYgE9DmxzOp1tvb29P8TdO4jYvSLD1JMEzC8q4N1WISClFss3cWAr5KHWoYGGQwLYi/iy1tbWvqamphMDAwN/mp+ft+OwUUR03xjYTY441d3dfaarq6s3Ho+bPGsyfPR5HOYWOSgoLICSEgtUl4kgijo2QZajEArJML4QgE/v+sHpSMLp41oUJTj6+/t/Ojw8bB8aGqJ1h3aL2C2AzP4tIu/s7LyIftTfdSVg8HMViqw2eLnJhuZVkCwKCwvLGFgpC5C3bLZiOHDAClVVdlheXoff/mUDvntcAy11GlNHR/tFRVEAhcR2RCRzBFCE7viwoba2tq29vb1XkkL64QcqDD/koO6lI0Cu83i2QVFU8Pv98IPTFdD1qpHN++xeGN7/yAP5+fkYAzwUFuaDxZIHV0YXwS8pcKpZ1be3n+x1uxe9CwuP1tC9k2kBfFaKmE0m0/Hz58/3hcOSaXwmDkMPMAobjiChjLvahkgkCugSqHEIcK4zDwrNPAN9Uxv10ZjVVR8EAjIcOlQFf7uXBFoLA9PU09PTh9lznLjSm+bTSrCxEXd+AgPZsbIRZ2avrX0BvN4AbG4GaIEMHKXaPYFDbdljfL4Qm1deUQp/vZNgQavVah0YnCeIa7cFMNDFuubm5vZwOAw3JxQoKCqBcDiGi/jZzrLx2B3eI4DaKFOon96EQEBCi8RAJ5rh4/FUX1NTY7ter68jzowAVFRVV1fnVFWldHVTARdGe3FxAaysbO4hJ3w5H4A/3liFTV+cgb6pLU2eflPg+XxBMJlEmHmqwroPqE6UVldXO4kzOwgPooB62v3MUyx95jxmwmg0tm+RwIIEv7s0Cb95OxUT6TbcwE5W8IBVkgHNjmLiwPECrq1Aa10cqquP1D98+PAgDn2UtoCtrKzUQYoX3CqYzSbY3g6y4MwGkVEGLP97BaSwDAkczyEZgb6TQFVUw5BMcqBgmsZiCdxMgFXAucUEE2iz2R3EmW2BPL1eLMbUw2BJQnm+BsmUzI5p8WBQYqSpjFHhg19X5pTgC79YBl6jSR1eBDrMOJ59Y+aymrG6oTBxBoNYTJzZAnQ40US5HgipUMlrMqdXSIpCUAqnig4nIAlaTE3sqf8cT9BCip/7rxAUQZZREf5QApu0qE1jIs5sAXQocTRJxd0lEgrEEb5AhFmCJiFH5lGByyEn//M8jdEyUurlsDryO2KoQVE4tinGgXyEbAEJ9G+I4/h8k5hEK8gQCKugJDXAC5o9QZjcRU7gkJzT6CB1feBSb4aUJeJKEsxGjlXUeDwRIs5sAVIoJG2JoiHfZuFhPRgFjVaP1lD2zQJyQTY55jWLfI2g37EM7HrjrpUY2O0CEyBJ4S3izC5EXrfbvYQWAOeLOgiHJAwUAxOxH8jf2eTMAtiW7udRCInhNalvXtChW6Pw0kGRxRJeXJaIM1vAPycnJ+e0Wh00VhsgKvuBvgWduLNALjiNkENO+U5tOWPS3+gW7MQgCENjjQFoky6Xa444swU8xZvUo0gk4i0tFqCpWg9B/yae9yLbyW7wWFRyyNkNStg7jkGEeCQArziNYC3gyPxel2v2EXFmC5CxCk7dvj06Rgud6yoBVfair+NIso8IrSGHnB5q208sxYtW2YTvd1sxE5IwNnZnTJbDU8SZfRYQ7g4NfTrh8/k8tkItXDxtBe+SC82noit0zI9pCFoxh5xFs1bMGUOgguVfdcEbZ8qgyMzB1taWZ2TkswniSt8NmQAqwYhAMBgYeffdt6/hd/jkN4vgwqlC8CyMQzwqI6EOIz8FslI2ear+C5l+QjwahtUnE9D3nRJoayzAcyUevnTpnWvBYHCEuIhzz40In/szM5MVly+/b+3tfeN7506V6yxmLfx+4O+gKzgMJeW1KEQPhvxS6PrJQo4Ai70mVbYx2jeW5yHufww/66uGzleteKzLsQ8//PON2dmpEUzX+8+7EyaxIN28evWyCYuFpr//R691HztgOFpTDH8YmIWRe7NgKqyCItuLYLRU4jlvYpNiEQn8m8uw5X0K0rYb2ptL4Mc/bwGrBVMa2d97753BwcGrH6PbbmLwJvf8LmhoaMg0RKNRvEREDHien2loaOx8881fvlZRUVUmYEX0rIXh1t0luPNgGZ64/bC+lbqYWIuMcKjKAieay6GjpQLKrUZWzj0e98pbb/1qcHr6y2Ekv4FZJVP2pB/8EfNMAQSq1615eeZvv/76+eaengvNNltpMbmeLp6E1G+X1ElHbkwkUj88vN7VzStXBr64du2DL0Kh4Cdo9jEkT1JafxUB6eC0IE4aDMZXjh1rO9zW1nm4vv5lu9Vqt+Al1kBz8GeZvL6+5pue/sfa6Ojw4/Hx0ceYavexXI8gfFS2ifz/FcAuIjiOjtAafH8Dh5UjCnZ+xMDOjw0/Yhmzw4U7XsC3RLchIv+fAr7O5z8CDAAlrruaC1+vLgAAAABJRU5ErkJggg"},{ name : "img/folder.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfiBhYSDAmnoW18AAAAvklEQVQoz42Ruw4BURRF1z0u8R/iN5QKlU6h9weincqjU9JoSIhCIqGZL1CIXqPR6YyReIy5CiSDO+FUZ2evnCf8CFUvqNwz9U91J/wEtJqiH6khHdD8qtAwEXVlElH7c9Xx9BuepBSV6RXdF7Aw++8BzfbZwoyZUbbtIEcNoLp0yNoAMxRgEyq7DWYgQE9VYq60u7jCLTFXxRhg5ASCG+RJ2X3pg0iPuAbr2hIk9FUmBug/fuGZltU+6Db/xB1ApTXyROxAKgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxOC0wNi0yMlQxODoxMjowOSswMjowMDCcd8YAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTgtMDYtMjJUMTg6MTI6MDkrMDI6MDBBwc96AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAABJRU5ErkJggg"},{ name : "img/file.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQONAabcLv2AAAAeUlEQVQoz83MMQqDQBhE4YektMpqaReitWC9recVIb+ldW6QQvAkYyGyuoi2eeXwMYBaxXV6EjoBL/VyFwD01kfZEUwymaYVgEoNcvDgJBkABQ0WQE4CwAxUONJ1DuDHd3fSUMeg3qZjAYzYbm/xMfDb9H8PCTfdggXC7mCrz5RZ7wAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNy0wOS0yMFQxNDo1MjowNiswMjowMPQSZrsAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTctMDktMjBUMTQ6NTI6MDYrMDI6MDCFT94HAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAABJRU5ErkJggg"},{ name : "templates/shaders/Basic.vert.glsl.template", data : "I3ZlcnNpb24gNDUwCgppbiB2ZWMzIHBvczsKCnZvaWQgbWFpbigpIHsKCWdsX1Bvc2l0aW9uID0gdmVjNChwb3MueCwgcG9zLnksIDAuNSwgMS4wKTsKfQo"},{ name : "styles/main.css", data : ""},{ name : "templates/sources/Interface.template", data : "cGFja2FnZSAkcGFja2FnZTsKCmludGVyZmFjZSAkbmFtZSB7Cn0"},{ name : "haxeui-core/styles/default/down_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAABGdBTUEAALGPC/xhBQAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB98KChcWJt1NeUAAAAAdaVRYdENvbW1lbnQAAAAAAENyZWF0ZWQgd2l0aCBHSU1QZC5lBwAAAClJREFUCNdj/P///38GHIDpnawqIzaJd7KqjEwwBroEAwMDAxO6ALJCAAXdCyoVfrojAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/transparent_px.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABAQMAAAAl21bKAAAAA1BMVEX/AP804Oa6AAAAAXRSTlMAQObYZgAAAApJREFUeJxjYgAAAAYAAzY3fKgAAAAASUVORK5CYII"},{ name : "templates/shaders/Empty.vert.glsl.template", data : "I3ZlcnNpb24gNDUwCgp2b2lkIG1haW4oKSB7Cn0K"},{ name : "img/control-270-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH4gYNDg84T3a0DwAAAExJREFUOMtj/P//PwMlgImBQjBqAAMDC7qAf/YMnNGycWoGI0EXYFOET5yJGMW4NDMwMDAw/P//Hyf2y5r+H5/8////GRhHU+IgMAAAO9Q/9liDnukAAAAASUVORK5CYII"},{ name : "img/file_grey.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRoWLhLDbRCrAAAAiUlEQVQoz2NkYGj3YNjOgAo2MyRUvoMwmRiwgSKGRe3CeBRU3mEoYljSLoKq4D7DToadDPehSm4xFDAsbRdmYGDBZkL7DgYGBgYGWQZThh0IBaJQ0x4yMDBoMAgz8ECEEQpuMZxGMsSUwQhdgRFMCBUgFBxk2IEk7sFgj67AHiY0+EzAHlmkKAAAhF4cjJc1qRsAAAAASUVORK5CYII"},{ name : "img/layers.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQOOwtiWduEAAAA/0lEQVQoz3WRsUrCYRRHj6DQ0iAuIS0JgY49gOig4iK+gS/g4pZLRIQ0hy/gE7gIurq42uIiDYE0NIiDiIaCp8H/P5TsTPd+h3vvBz84wowDB2Y4hwnb7lTd2TZxKmM2XHjMwoaxUFeceo6pFcCiK/9jZREwacf9H7m3YzI8krXs6ESPLJs9yJRddWnTmjNVZ9ZsulS7pqKAwCUvfHDPLfBOi5vDdHgi5zhYPXQYVGNzABHwmife+OaZq2DiiwcuuOMx8okF16pOrNpy48aWVSeqri0AloJWe+bN2wu6iaXwD1HrzlXdulV1bt3oaR5xX3/DejV+PtG0ffumj99+AEBRJj8vTizXAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE3LTA5LTIwVDE0OjU5OjExKzAyOjAwBf+jXAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNy0wOS0yMFQxNDo1OToxMSswMjowMHSiG+AAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwaAAAAAElFTkSuQmCC"},{ name : "img/play-button_grey.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRoWKi0RZ/iSAAAA3ElEQVQoz4XRoU7DYBQF4K//MBMYLH4KEpLiERgyqgmbIgHfzCD+B6glFbwC4QHYHG9AEwQKh0KBgJAqUgTNRreEHXfPuTkn955Ei2JgLJWiUrmJz798AkUiV+hboBaVsSGhSNwZWsVMFpuAvJW/vXYWhnKSYuCxNX+x68p5J2gvGC+y42e8kP3x6RsFaTc4Tu24nY/7KwvE9zhy4gOkwRpsqGRdqthy7bQdqqBako89zWUe1p7Zu387/HIENp056NhdxmlAaQZ6tpdeXRKIjcxE3RFrE1lb1v91/wB35j/k8Sy5HwAAAABJRU5ErkJggg"},{ name : "img/repeat_grey.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRoWKTvOnh4AAAABIElEQVQoz33Rv0tbcRQF8M97DbSBSioUBQcXS6DoUHhmLl0lYEf1X+iPkKXDF5yE5yjZHJ0ilLZQKA4FBxERpAGhTsHNUp0yKW6mQy6pk2e6nHPuudx7M4Gybk2hQE9PN/VHfAZlpqVU9R+3kk4aklFmflgK4dyLsWlPMw1ztMYyX3UMo17SIivrTiN84AKH9m2bjkGvKtZU8dc7U97IXLs0CEPVakWBO+/tqOGzGwcej0cu5gr8Nq8GntsI+cQdihw89SE6XjuKalMOuR7mTIE/PnoGji2A3sgwwndvNZzZseyLdfCroutTrDlj0rQZj6x4Emvu5qkvRULDNz9dWQiZlPo5OvaCmLBl9t6pO+Skoaa226BfRnhbM5718Lv/AQ54TBaRTDedAAAAAElFTkSuQmCC"},{ name : "img/vsizegrip.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAhCAQAAABOpSL+AAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfiBhYMHwnQ9qKUAAAAKElEQVQoz2MoaH/HdZ8BQTIxVDBwMDAgSCYGNDAqMKIEKhm+MTAgSADXvA2Z2ElBagAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/left_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4AESCxUGz2OrRgAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAOklEQVQI11XMoRWAQAxEwUlKQIPj+i8IiYYWgrp7Yd18sfHsp7ntvio7IDsgqmoB8j1G/AL0uE5n/AD4RBE2xaxDjQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/native/main.css", data : "KiB7CiAgICBuYXRpdmU6IHRydWU7Cn0KCi5oc2xpZGVyOm5hdGl2ZSwgLnZzbGlkZXI6bmF0aXZlLCAuaHByb2dyZXNzOm5hdGl2ZSwgLnZwcm9ncmVzczpuYXRpdmUgewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogbm9uZTsKfQoKLmJ1dHRvbjpuYXRpdmUsIC5kcm9wZG93bjpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKfQoKLnRleHRmaWVsZDpuYXRpdmUsIC50ZXh0YXJlYTpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKfQoKLmRpYWxvZzpuYXRpdmUgewogICAgcGFkZGluZy10b3A6IDBweCAhaW1wb3J0YW50Owp9"},{ name : "haxeui-core/styles/default/haxeui_small.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4QEeDAkARLIptgAAD0pJREFUaN69WlmMpVdx/qrOOf9/99u3p7tnscHLeB2MB4QNQomDYpAA8YbQKCB4RIKHRBGvlmAkQBGKQmIe4gdHiZAJEY7kB5YIhOMYsgwCC3uGwTYGzOwzvd71X885VXnonvbY7vEsBkr6pfvwL3WqvvrOV3UuAcDDD3+VBoMBBgu3saGUKqOEbJlEAGUGg0FQsDPa7/axUZBaZl1oef35s8/oFz//GX0XL+A/1qc4fFhx+DBhJzt8+DAOHz4MAPjWN/4KX/raXnrwwX10z62Gzq3nZLRJGRUwSZd6UKxKBGOMsC6oStHeoNAab9GTx07J2+/6e/38l1dBDz/8VXrrWz/Aw43TnHQp0cQ6I2QTw0zqyDQIIAsLgBxgxUgQL5bJB6NenAtdqeXoHMuLf/NefeTfdnb+oj300F/DuUXqNLvsW4nxM2uZrVVER0IcmThKAIEQREE+oJKoQWP0MQYt1Ret2pfnJH7z4z8V+vrX/4ViXLKDQaOVe+mC0AekZdk4YrC1CYwFCAQmVjCEiCtASwMzU46ZZVNyzH0+6MdfHl0WXlnT9eERfOUr/wgA+MIXHgJgQaTcbu8nIm8CWkkMeSMSt4m4EzU0IJRA1agCEQExKkIUjSFqiLEO3md1iJNawoRbdfn0t08Ga90CN7s2KaDdkHbfq0nrwdSgSQwHEEcCIghEBCIogRSAt7F4Fn76HDiZlORHFs2p3ciKt9/a8HLLHfH0sRvkgx+CLjRPoNHcS5ZKRrrbIKgrY9oKUvUAnatmk7nFm/bf35qbPyAqBgpSVVJVAAATQASZFrE+MyyzybnTP7DZ8jP1yIZ7PjCINsiUGmavo4h+0uk9uOrdZ/IIWDBSy0iTzQqQ10DBu/ZfGNc57mYrj4D0TKXVGpPZCJ6n7Ipi8Y7SH2o+EM/mB0inbKZun0NWNImkp4r5EMOCS9Pb7njvn3+22e3vJ6IEAEAAEYEJyMqIU6sZTq0VGOc1QrRaFH48X1e/KkLI9qZ7art3962U596q0daubtJcGwJRFHUQVF6AQmENI7Gbl2ECE4GJ0mha75L+W/6J6+z7VE1/6KvsODGv1VUcliVmM1gvRRNDKVMqRx2IDjTGpcHefQd37X3Lh+eW9jzAxgCqKH1EUUdMi4DzGwXODQuMc7/9PSIghqjlbNyqEFoUo7lwbkg2m0VKm4Y5wDUS49opYZR50GbqABCiKIp68wNEABPBMCGxm1mitPchce0H0KieD6Ozj9VF+WIQGscQ8gAhUmrns+nc/NKeg7e87R2fbPd6tznnGiuTCuc3prgwKpFXAUUdUXvZzkJieTvjRIQin0FEXB2CC1rxhUrJMls4NgQrpApe7KUYzmoQ7cwmqkBU3c7SVAFmILWm3Uga99uF/fe7fPhkuXz6OyHIEADIJrtvv+9PPzbYve89a9MaR18a4fR6Dh9kO7oXjXnn7xIR8mwKqzA+1uSLmoqaYIkZSdNC60ggwq5OAlGAcXVGtLmoYgsCTIC1vQ+Y3Xc+4JL1Y+vnpta25w4eWycenjwLHxTMr2Txak1UURUZWBW+Dqg0gmBh9+x2qHwTiS2309ZpWJQ+4lpsC21QAD5EVErpybx5f5VaXBhW2/dZQ7geK/MMCkBEECSCKg+w2wy0JYVhCyaGApjrOGyx2HWZKHB6LUfhIxLL6LUSvBkjIpTFDARAVRGDhycCAeCiAMg6sGEl2qTfQfv6P6gKvLycYVIGXIx1MzUYdNI38U5FVRYACKqqEhVmM9bgGEUNiTCTgEgBoOHMdaVaRHFyLUfpI177dOIY/XaC6wFQjAExRoAAAURIIpQ1SVPlGFVFWAxxxUQewDbnX2vkT6wWmBbhsvc0EoNeO9kslGsJTAyQGAAFFFRrhA9ai2mXykABwHtiU4aqOgrV2llC6sw1McTLqxnyOoCuEOJGYjDXvTaIVlUFEQGglZ2dPwZoSYFDubYKXllRCcEEkTgL2ew5qesXAMJc++oKWRU4tV4gL6+etVK3lYmrLeB8BhDDzC78iKvJr1Vi7psxnHxmqHzu3DFNU/XMmrG149nq6iNQxaCTQK+Qa1XgtysZZsWVI/9aayYGg256VRtNWWTgWPnG+OVviHHTaDmLEw39g5nw5z73Kd3YuCAxlhWTGQn0ZJVlT/WaFpb5DWFzei1HWcfrZpfE8hUzUVclYoxwxeoTQrzMsCNboZp2nZz5r5+CjelhcbEhZelrQpwaMmvFdPoDiVLs6iU7wkgBnFjNMX6Dgr2WTMx1di5sIkI+m4A1jtNq40dEtCoUZoqm/833frpJowDwzDNH1fth9F6KoHGjnEyOVmX10mI3hbxmBaKKE6s58ipeM2zeqCb6nR0olghFNkPix8+kWryoKkNVU16QOgIvbmqnxx9/HJ/+9KfRarW1LLOaVCZieG3t7LnHuk0Le4leUQCn1wrMfg+RvyzFXmLBe0RfyHx9/pvKbt3BzLxt+ZM/+p5uuQM+dOjQlgqEtNomQmIpQYfj8cbxfDz+33bTvWqHnZbh9xb5nRZx6Y5d1xW6Yf2JxNoThnnkDcpIGxG7aRsW21V67NhzmM2CqGjtRWZEZnzmxO+eSI1GVeD0eo78TRTsVRe2u0Q7VbPJoin/k50bJRYZVbV/6aUfK5ZXt+/f3q2++93vARjhnrfdSdOSTQi+WVZVv1R3y6/Xwt5ZFUH445izjMQxdHz+J404/m8FztSQsStd/csjT76qu30VT45Gf4YY5VWOZlWEj/pHc/6iNK/rgKwoL6G+nT2wF388+ugjWFq4g1xnFydUJFBpszELsdO/dz5WGOcBVZA/ivMbkwJnV8cAWu/sexmEEFvkvZuGMXfvvlumL7zw+hq4556DWNw9xzbGJCHbUQ39fTff8tHcqwGAfsvCmT98HiZ5teU8EG2rt+LT96uvBz5oW5PE3bhvP2H30isQevzxx7ekMDjPxChTgy0N5vrz97R6/T8ZZfX2zXNtd80q9eqbFmA0LXDi3PAV54zFxM5/tPLxphhl4ASNduNmg2XZjiQfOnQIjz76KPI8o0ajlYBtj2NcWLhh36c2ZjV81Felt9+0cH+ARYymJc6uTl5F0cQGsCmvp3s/QfDzHrHj4szd9L6P0MUulgHgvvsOknMD4xw3LfF8o9c7mDbTO86s5Xht300EDFrm9wYnImCSVTh1YQjdQbcY14R33fsqat5FxAOi2NjDiQHuwlZHNsHqasmNhksUphtVFprd7geZTfPssADvuGsR5loOiX3zi9iYFDh9YbjzGEcV1jUgZPpVMnifQhdZbYdQuNs+8m4CANPt3kgHDhw0RLYdRfao6IH2wsJfjnKPl85NL7OAzcilzqAO+jq9dLVsMytqnDo/whtxNBmDUGUQk96ZTs8+GTVMvEXmsuDtrS3hffvupaoiJ0JtCaHfWVz8LDHhwqi4rPOXOjFo22subCJgOC1w4uzGlWWJAsamUJu6sn/LJzn6rgnSNj2y46Nt5qUlYmujZTYd2+68g5PkbiiwPK6uSvNsF/Y11MQk26LKq3pEYWwKqCC097wvJv3biU3LFcbedN+AGGgCcE4lNmyaHgRRUvmIogrXFNFB28FZesMebrNgS5w4t3FNcyey7uLYOpXO7nsBaqgV21hYBBtDxCwcVVJRdQBQ+njNkzkAmGs6pG8Ap9G0wOnl8WXnrpdfuNmk1M3JUEIGzlLCMWsQG8MUlVlEGbopOGZlRH0dsoEI6LdeP1MiAFlR4dTyeEeqvOJ7mTcXoAAIzMoGJFRXFXGzCWjwkCikqsQErIzL6xZvBMKg/QrFXizY350bvglBSGDjtk5siNgQLmpOBoCghCgBogKiTQZ6M10LAei3HKwhzPIKZ1bGb3K3ULBLASiICMY4ON2cmfCFZQ+JBeoQoKoo64hx7q85WhfH5aKKUVZjYzStWvXGz/K188/2m1aaabLdU18PjIxLt+FkjYGmbnOjUxHUZUAQUVLF2Y38ivx/KeaJCD4Izo8yLA8LzPIK+9L8yVtb+XdiXQ3fSgXyQneHwc0foz1L78mrgPGsxCSrEEVAoKtMNoFtCkMM5ywQIxSAVQ0oRTT6qESQs+s7b2C0Nc6uw+YxUFEHbEwrrE8KTHKPhCTrOf/8u7vTx/qJvFgGGkeNufpAGkMbZ35+XFvzBzt77/5kf7F7G/YMGkVZY5pXmBU1fIgIURC3xOPrXFDApk1QTtFZo9ROtKkKS2w0lF6q6P2sDH6Uv3I+tnn8Q5gWHuvjAuvTEmUdUHtBHSIAgoVgX5J/f8nmP1xIquMhmrVxSUMGzWIZfR0DNGgKSjtaztb8b478IvZ2H+TBvg+nvaUHGoMuFucEQQQhCCofMcsrTIsKVR22jndp858CNgWBvLOpp0hyQ+rUbgxf1rSzEKJHfnajKHwAQlBMixorowIrwwJ1iNtw2cYkoeoiP367W3uEIGdi1LVRZTcS+KlhLooQ/ep0HNXX1ASK2GpnzseJWBpKNlyV8cpz6hr/7m56x2e51dtvmBLjDNLEoN9OQQTUPmKclZjMKlQ+QMBkknZuZJYrJ3Fp15xa2LYG733taTxdX39qOhasDmfNsvQOAC8YhTKgIhCFAqoi5PuUP7uLJs+V3kwAHqnyVCQWBatv5zae+t1IjnV+rmQt7lq+Ny4d8IEoqaHIQWGi1m2Q1Cv1i08/bxZvvZ/bgwOAmi0SI0DBIMwzYaEFqYLU49xnmpqfmNJNjXp/HstqTViXMuyt2cep0fGRG9k/v9DzLd+IrqoD+xjha0GgCAEpYpSgWgFUzqKbwdSZl6REGXy64OL//etYkibp0aMjAJvd3m9xu75nHrH+dakPvr8dhzP2kqCIMYw57azpdO1CGC//EEQJQY2CL+lDVEGqIlL3IFkMNAkNnTWsC0e+fVbpy1/6B+ruvZ8lLLMvkQhKV9Rqi+jZF55ECWUI0BCACCiTIEQRwBNXXrtLIa7XQqTyz1/7lQJ/dwU2eQif+Lijlm2y7mkZ9VOrXq3AOsPCUYhJ5JWBjwBgqGFEFQ4q3odG7rO1fnxCj4h56qnv4+Xn347F/Sy37OnFyVrwy0zV2nBczbwv8xBKr1KWEko/NIWTWNpGUaa79tSjRjf8+Fsr8iF4+dvH/gfAowAOA3j6Ms4fBvBF/OL407jxhnfqz44a6XRW46B9s7eNYaWFVj5H4ctGGUu7eVW21FpLQ3nVnDd1GNmweiHEF+78um587Qj+H/scE5pvKbATAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/dialogs/exclamation.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAABUJJREFUeNrkV0tsG1UUvfOxHcfxJ3YTT8dOUzueprFJS8PCEUKtCv1QVEFb1CoVbVFKxAJ1x54NEhICVsCmEgiJDbsiFkilYsGqEqB+QGoqmrRJayel+fs/nnnzeHfsuEk6/qRCdMGTjnV933333nfefZ/hKKXwLBsPz7iJ+OMcGFinRFaoYZjyUKwI7xxehD19xY1j3QxfV+XzDNm1ndcnnfDVZT9cm3Ca/zmeB47j1jkojo83ZgADf/Fe2io4thNS7FwMgfLGThyDY9FHUwbOH1qADRQwB4V6gbF1iTbPUanvLKOOwvz090d1LfMj089ZTQJZvD7Zzmjg6iRwcH6zSzfCZp4QqObABKTY2URq/MsRpv/cyhgnUm8yfHXCm0Gvra37YFfvcYXkx4Hkb0PXtmMK6rBvM76eNoG3ZGU0TrVFUVfnAYGyHDsXx76nSsCgrYENSrR1RPb55QNRPXsLDEM3oWVvg19+OdrW0bsPbVr1t1kGOIazof7RBCk+4PTyci0Boi2DXkxzIeVcAm2qti0xIK4m0Kyx+h12+RNJ75ahUHH+F/j2Eg9TqcoujoQNOHPiL/AEkiGXbyCZWxofZi6vtnwSUqMpBJbkmfCOtxNabpLNOAf30zqUy2UTKKNOy9+DUOw0snDGHNPEb+tLAHDA253c4/Js71Kzd5jOAJ4rQalUAcdk1JXzU9Du7uliLO3BMf9WEToo5U+HldPxcm6CrblqBrMJai0BUajoDKMMWmEK5NjxOI7Bsa0VYSOqKLy+JbR30OHs9GqF+7W1c9g1KBaLJtpsWk2vlx6Cw+HzBqThQRzbbAnMIiRGncLjwCPw9pPh2Js7ce0pJY+Lh8vD9HQaFhYWwN3uhNmlHiCEmEy05XLQIQ3vnJv59aRB9csskUzj65hagw08Few9GBdFsV1THwJhCWTLKzCbS0F67k+4e/cmrKykwNlRBJUvg24jQOwU8jqzFUm7W3oBD6dT9fzXGDCo5bbrFkXXsVD0iFJghbdc/BvyWpbZVujaKtlBkhxV2cEYWU9jgRWkTx5SVmZvHDN09QcW4lFdBvDqfwLsQJH7DvcXtTn77PI1FhyvVY0FIiakoA3krQ4TKK/qV0H0RTAgb/fJz/ejL6sYdXcBoy0i2n1HvPJgZGn5N8ZGGQTmdC36og4IssDBoN2UN/YjNDUN3q2xiGBzHUGfVrtAXN0F654DHIwGoy8qZW1GIGQReItnS2T7Tvjsk6NVuicgn7/zpBHNs0gZwR8eUGYnfh9l6/6B5XvAMNZV/i6nK7A/ICs9ucwNcyZWrVS4bWK1CZx1lRMyD75uqWch5d6vFrK7GBN/NKoBjmFMVpKKrqU5oBkQeN0SV35egFdevWkC5Xp2PJRYhBUu2BtV0Hc1hnUNsOxecnmDSX9XMEhKUyCy2dfDx5+m4EFKNYFyI1uOZMEbcAedbk8SYzxxEmoaRYg6oWO9/bsVoqXNs17gjboQbYHH68jkRrYVJvIQisoKxsBYGLOWgKoCu9XgNY9fHvJ2dnRSfcayqtfiow+PQzQaMoFyM3tcCp/P1un2eYYwFsasFaFahjZB4MaURH8Eg/Ns2wHX+B4/tPcuvHHj/cr7fuUKaCXSwu1vQHRHIDKTyo4RQn/CWjYT0HUYCW+X4x4v7yIqKyiu+QvFUNnWezTRdBdsbF6v6JJkd3z6XgZf0d+sJnDhud3bwhw760W7VL0IDPZrmFlXDgpak2lNpo/1ppauOVTWHPgbWmLQH568k7lQS4D5uXjpu6vv/sefhRfNc+d//3X8jwADAHWOFkaFGOstAAAAAElFTkSuQmCC"},{ name : "img/attachment_grey.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAAAmJLR0QA/4ePzL8AAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRoWKzaCGQA/AAABJElEQVQoz2XRvy9DARDA8e97ahGxdBFTY/QHGAy2Nih9hoqJRASboSGNWySi10nf69BEJAxSFhaaqh+DwUQMlIrxLRaJwSzC8J6n7bvpLp9c7nJnEArtYo55PrGpyE8kxN3UuCNJlCI9lEOsN7rm5/16C2ao+0zyfvlGVDvNNq4FDLNU5Mto4XPJaZqELIJO4JDgI9LEF5LTNHnioOPYpChxZAZ8KZsei6tJbCy2eJBdw+cr2Qh4jCIWBR4lCxHgkOsWdkhhU5csgKEpSsQYZJ+4uDqKwyQ2T7LqbWcyxI58s8SyuDqCg4XN8x97IwDqzOgAC1g4NGTl/zqGJtkmRgfT9HLAHi+Sab6uKVXuOWGYY96p0mhlb8QUGQr08cq6nLZ/9xfJ/WmrwJzq+gAAAABJRU5ErkJggg"},{ name : "img/information.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQPCzOU3z/eAAAA0ElEQVQoz42RsW3DMBREH4kgrTJCAAPqXNiqs4UbZwptkGxg2AOodAYIPIHa0AMEHiKFoCKFXxqBUgQ4yFV3//M+yfuBAZY8U1EBicQxfDLCYG1vZ+veva2dvbVhbJ/UxiIbChv1NByxVrdDa+NmYFu1BiztbbL34iXzxt4SX+0mwxcuJhd1vgTfeQhPuXgP4Turlq9IxXnyoQOHiTpT3fEbjzNNJLHmFtakSGI1PnIKC1Z8RI5Edrl65Zr5jsjbPKily1lQ/4j672WF7Lqx7h8xlZMZ/034BgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNy0wOS0yMFQxNToxMTo1MSswMjowMP8tR1UAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTctMDktMjBUMTU6MTE6NTErMDI6MDCOcP/pAAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAABJRU5ErkJggg"},{ name : "templates/shaders/Basic.frag.glsl.template", data : "I3ZlcnNpb24gNDUwCgpvdXQgdmVjNCBGcmFnQ29sb3I7Cgp2b2lkIG1haW4oKSB7CglGcmFnQ29sb3IgPSB2ZWM0KDEuMCwgMC4wLCAwLjAsIDEuMCk7Cn0K"},{ name : "img/right_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAMAAAAGCAYAAAAG5SQMAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH4QkbCQY3evLpbgAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAMklEQVQI102MsQ0AMAjD3N7ByMu5g6+ycQOdKuHRsoyk6Ug6EmzPF8f2AFQVl83O2IMHEscfKl0f80sAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/test/main.min.css", data : "LmNvbXBvbmVudHt9Ci52Ym94LC5oYm94LC5hYnNvbHV0ZXtzcGFjaW5nOjVweCA1cHg7fQoK"},{ name : "templates/sources/TypeDef.template", data : "cGFja2FnZSAkcGFja2FnZTsKCnR5cGVkZWYgJG5hbWUgPSB7Cn0"},{ name : "img/plus.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfhCRQPBiHSyDDbAAAAo0lEQVQoz42RvRGCQBBG350mlOCMMQ1gaCMSUQDBlUA1WABDB4ZCAcaOFqADkfOZ4HDHCPqy/d/91jCgmJSEBGhoKM2FERk5dfLp5GTGcK1v1EOKnOd86OFZDlAcNM+VB4PiNSmRt84Tn4iDJWGJndGNDXCl4AWcgD2womAL3C2/UBWclikL7MrSLNafLSX9bLjnOBWqVTsR6g+pl5/1yZl99xvgGeQbLuHKUgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNy0wOS0yMFQxNTowNjozMyswMjowMI2Pm0IAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTctMDktMjBUMTU6MDY6MzMrMDI6MDD80iP+AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAABJRU5ErkJggg"},{ name : "syntax/haxe.json", data : "ewoJImtleXdvcmRzIjogWwoJCSJ0cnkiLCAiY2F0Y2giLCAidGhyb3ciLCAiaWYiLCAicmV0dXJuIiwgIndoaWxlIiwgImZvciIsCgkJInJldHVybiIsICJicmVhayIsICJjYXNlIiwgImRlZmF1bHQiLCAiY29udGludWUiLCAiZG8iLAoJCSJ3aGlsZSIsICJmb3IiLCAic3dpdGNoIiwgImlmIiwgImVsc2UiLCAiLi4uIiwgImNhc3QiLAoJCSJ1bnR5cGVkIiwgInRyYWNlIiwgInRoaXMiLCAic3VwZXIiLCAibmV3IiwgInZhciIsCgkJImZ1bmN0aW9uIiwgImFic3RyYWN0IiwgImNsYXNzIiwgImVudW0iLCAiaW50ZXJmYWNlIiwgInR5cGVkZWYiLAoJCSJmcm9tIiwgInRvIiwgImRlZmF1bHQiLCAiZ2V0IiwgInNldCIsICJkeW5hbWljIiwgIm5ldmVyIiwgIm51bGwiLAoJCSJwdWJsaWMiLCAicHJpdmF0ZSIsICJzdGF0aWMiLCAiZHluYW1pYyIsICJpbmxpbmUiLCAibWFjcm8iLCAiZXh0ZXJuIiwgIm92ZXJyaWRlIiwKCQkiaW1wb3J0IiwgInBhY2thZ2UiCgldLAoJInR5cGVLZXl3b3JkcyI6IFsKCQkiQm9vbCIsICJGbG9hdCIsICJJbnQiCgldLAoJIm9wZXJhdG9ycyI6IFsKCQkiPSIsICI+IiwgIjwiLCAiISIsICJ+IiwgIj8iLCAiOiIsICI9PSIsICI8PSIsICI+PSIsICIhPSIsCgkJIiYmIiwgInx8IiwgIisrIiwgIi0tIiwgIisiLCAiLSIsICIqIiwgIi8iLCAiJiIsICJ8IiwgIl4iLCAiJSIsCgkJIjw8IiwgIj4+IiwgIj4+PiIsICIrPSIsICItPSIsICIqPSIsICIvPSIsICImPSIsICJ8PSIsICJePSIsCgkJIiU9IiwgIjw8PSIsICI+Pj0iLCAiPj4+PSIKCV0sCgkic3ltYm9scyI6ICJbPT48IX4/OiZ8K1xcLSpcXC9cXF4lXSsiLAoJImVzY2FwZXMiOiAiXFxcXCg/OlthYmZucnR2XFxcXFwiJ118eFswLTlBLUZhLWZdezEsNH18dVswLTlBLUZhLWZdezR9fFVbMC05QS1GYS1mXXs4fSkiLAoJInRva2VuaXplciI6IHsKCQkicm9vdCI6IFsKCQkJWyJbYS16XyRdW1xcdyRdKiIsIHsKCQkJCSJjYXNlcyI6IHsKCQkJCQkiQHR5cGVLZXl3b3JkcyI6ICJrZXl3b3JkIiwKCQkJCQkiQGtleXdvcmRzIjogImtleXdvcmQiLAoJCQkJCSJAZGVmYXVsdCI6ICJpZGVudGlmaWVyIgoJCQkJfQoJCQl9XSwKCQkJWyJbQS1aXVtcXHdcXCRdKiIsICJ0eXBlLmlkZW50aWZpZXIiXSwKCQkJewoJCQkJImluY2x1ZGUiOiAiQHdoaXRlc3BhY2UiCgkJCX0sCgkJCVsiW3t9KClcXFtcXF1dIiwgIkBicmFja2V0cyJdLAoJCQlbIls8Pl0oPyFAc3ltYm9scykiLCAiQGJyYWNrZXRzIl0sCgkJCVsiQHN5bWJvbHMiLCB7CgkJCQkiY2FzZXMiOiB7CgkJCQkJIkBvcGVyYXRvcnMiOiAib3BlcmF0b3IiLAoJCQkJCSJAZGVmYXVsdCI6ICIiCgkJCQl9CgkJCX1dLAoJCQlbIkBcXHMqW2EtekEtWl9cXCRdW1xcd1xcJF0qIiwgewoJCQkJInRva2VuIjogImFubm90YXRpb24iLAoJCQkJImxvZyI6ICJhbm5vdGF0aW9uIHRva2VuOiAkMCIKCQkJfV0sCgkJCVsiXFxkKlxcLlxcZCsoW2VFXVtcXC0rXT9cXGQrKT8iLCAibnVtYmVyLmZsb2F0Il0sCgkJCVsiMFt4WF1bMC05YS1mQS1GXSsiLCAibnVtYmVyLmhleCJdLAoJCQlbIlxcZCsiLCAibnVtYmVyIl0sCgkJCVsiWzssLl0iLCAiZGVsaW1pdGVyIl0sCgkJCVsiXCIoW15cIlxcXFxdfFxcXFwuKSokIiwgInN0cmluZy5pbnZhbGlkIl0sCgkJCVsiJyhbXidcXFxcXXxcXFxcLikqJCIsICJzdHJpbmcuaW52YWxpZCJdLAoJCQlbIlwiIiwgInN0cmluZyIsICJAc3RyaW5nLlwiIl0sCgkJCVsiJyIsICJzdHJpbmciLCAiQHN0cmluZy4nIl0sCgkJCVsiJ1teXFxcXCddJyIsICJzdHJpbmciXSwKCQkJWyIoJykoQGVzY2FwZXMpKCcpIiwgWyJzdHJpbmciLCAic3RyaW5nLmVzY2FwZSIsICJzdHJpbmciXV0sCgkJCVsiJyIsICJzdHJpbmcuaW52YWxpZCJdCgkJXSwKCgkJImNvbW1lbnQiOiBbCgkJCVsiW15cXC8qXSsiLCAiY29tbWVudCJdLAoJCQlbIlwvXFwqIiwgImNvbW1lbnQiLCAiQHB1c2giXSwKCQkJWyJcXCovIiwgImNvbW1lbnQiLCAiQHBvcCJdLAoJCQlbIltcXC8qXSIsICJjb21tZW50Il0KCgkJXSwKCQkic3RyaW5nIjogWwoJCQlbIlteXFxcIiddKyIsICJzdHJpbmciXSwKCQkJWyJAZXNjYXBlcyIsICJzdHJpbmcuZXNjYXBlIl0sCgkJCVsiXFwuIiwgInN0cmluZy5lc2NhcGUuaW52YWxpZCJdLAoKCQkJWyJbXCInXSIsIHsKCQkJCSJjYXNlcyI6IHsKCQkJCQkiJCM9PSRTMiI6IHsKCQkJCQkJInRva2VuIjogInN0cmluZyIsCgkJCQkJCSJuZXh0IjogIkBwb3AiCgkJCQkJfSwKCQkJCQkiQGRlZmF1bHQiOiAic3RyaW5nIgoJCQkJfQoJCQl9XQoJCV0sCgkJIndoaXRlc3BhY2UiOiBbXQoKCgl9Cn0"}];
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
haxe_ui_validation_ValidationManager.get_instance().registerEvent("ValidationStop",haxe_ui_backend_html5_HtmlUtils.onValidationStop);
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
haxe_ui_backend_ComponentBase.elementToComponent = new haxe_ds_ObjectMap();
haxe_ui_core_Component.__meta__ = { fields : { id : { clonable : null}, text : { clonable : null}, value : { clonable : null}, styleNames : { clonable : null}, styleString : { clonable : null}, percentWidth : { clonable : null, bindable : null}, percentHeight : { clonable : null, bindable : null}, width : { bindable : null}, height : { bindable : null}}};
haxe_ui_core_Component.INTERACTIVE_EVENTS = ["mousemove","mouseover","mouseout","mousedown","mouseup","mousewheel","click","keydown","keyup"];
MainView.sha = "f15101ea8cc3c1ad81450f0ca02210e34dae5132";
Server._lastId = 0;
Server._calls = new haxe_ds_IntMap();
StringTools.winMetaCharacters = [32,40,41,37,33,94,34,60,62,38,124,10,13,44,59];
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
custom_MonacoEditor._loaded = false;
haxe_ui_containers_ScrollView.__meta__ = { fields : { vscrollPos : { bindable : null}, hscrollPos : { bindable : null}}};
haxe_ui_containers_ScrollView.INERTIAL_TIME_CONSTANT = 325;
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
haxe_ui_backend_BackendBase.id = "html5";
haxe_ui_util_GenericConfig.cache = new haxe_ds_StringMap();
haxe_ui_Toolkit.styleSheet = new haxe_ui_styles_Engine();
haxe_ui_Toolkit.theme = "default";
haxe_ui_Toolkit.properties = new haxe_ds_StringMap();
haxe_ui_Toolkit.backendProperties = new haxe_ui_util_Properties();
haxe_ui_Toolkit.nativeConfig = new haxe_ui_util_GenericConfig();
haxe_ui_Toolkit._built = false;
haxe_ui_Toolkit.pixelsPerRem = 16;
haxe_ui_Toolkit.autoScale = true;
haxe_ui_Toolkit.autoScaleDPIThreshold = 160;
haxe_ui_Toolkit._scaleX = 0;
haxe_ui_Toolkit._scaleY = 0;
haxe_ui_backend_PlatformBase._vscrollWidth = -1;
haxe_ui_backend_PlatformBase._hscrollHeight = -1;
haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["mousemove"] != null) {
		_g.setReserved("mousemove","mousemove");
	} else {
		_g.h["mousemove"] = "mousemove";
	}
	if(__map_reserved["mouseover"] != null) {
		_g.setReserved("mouseover","mouseover");
	} else {
		_g.h["mouseover"] = "mouseover";
	}
	if(__map_reserved["mouseout"] != null) {
		_g.setReserved("mouseout","mouseout");
	} else {
		_g.h["mouseout"] = "mouseout";
	}
	if(__map_reserved["mousedown"] != null) {
		_g.setReserved("mousedown","mousedown");
	} else {
		_g.h["mousedown"] = "mousedown";
	}
	if(__map_reserved["mouseup"] != null) {
		_g.setReserved("mouseup","mouseup");
	} else {
		_g.h["mouseup"] = "mouseup";
	}
	if(__map_reserved["click"] != null) {
		_g.setReserved("click","click");
	} else {
		_g.h["click"] = "click";
	}
	if(__map_reserved["change"] != null) {
		_g.setReserved("change","change");
	} else {
		_g.h["change"] = "change";
	}
	if(__map_reserved["keydown"] != null) {
		_g.setReserved("keydown","keydown");
	} else {
		_g.h["keydown"] = "keydown";
	}
	if(__map_reserved["keyup"] != null) {
		_g.setReserved("keyup","keyup");
	} else {
		_g.h["keyup"] = "keyup";
	}
	if(__map_reserved["scrollchange"] != null) {
		_g.setReserved("scrollchange","scroll");
	} else {
		_g.h["scrollchange"] = "scroll";
	}
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["mousemove"] != null) {
		_g.setReserved("mousemove","mousemove");
	} else {
		_g.h["mousemove"] = "mousemove";
	}
	if(__map_reserved["mouseover"] != null) {
		_g.setReserved("mouseover","mouseover");
	} else {
		_g.h["mouseover"] = "mouseover";
	}
	if(__map_reserved["mouseout"] != null) {
		_g.setReserved("mouseout","mouseout");
	} else {
		_g.h["mouseout"] = "mouseout";
	}
	if(__map_reserved["mousedown"] != null) {
		_g.setReserved("mousedown","mousedown");
	} else {
		_g.h["mousedown"] = "mousedown";
	}
	if(__map_reserved["mouseup"] != null) {
		_g.setReserved("mouseup","mouseup");
	} else {
		_g.h["mouseup"] = "mouseup";
	}
	if(__map_reserved["touchmove"] != null) {
		_g.setReserved("touchmove","mousemove");
	} else {
		_g.h["touchmove"] = "mousemove";
	}
	if(__map_reserved["touchstart"] != null) {
		_g.setReserved("touchstart","mousedown");
	} else {
		_g.h["touchstart"] = "mousedown";
	}
	if(__map_reserved["touchend"] != null) {
		_g.setReserved("touchend","mouseup");
	} else {
		_g.h["touchend"] = "mouseup";
	}
	if(__map_reserved["click"] != null) {
		_g.setReserved("click","click");
	} else {
		_g.h["click"] = "click";
	}
	if(__map_reserved["change"] != null) {
		_g.setReserved("change","change");
	} else {
		_g.h["change"] = "change";
	}
	if(__map_reserved["keydown"] != null) {
		_g.setReserved("keydown","keydown");
	} else {
		_g.h["keydown"] = "keydown";
	}
	if(__map_reserved["keyup"] != null) {
		_g.setReserved("keyup","keyup");
	} else {
		_g.h["keyup"] = "keyup";
	}
	if(__map_reserved["scroll"] != null) {
		_g.setReserved("scroll","scrollchange");
	} else {
		_g.h["scroll"] = "scrollchange";
	}
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["mousemove"] != null) {
		_g.setReserved("mousemove","touchmove");
	} else {
		_g.h["mousemove"] = "touchmove";
	}
	if(__map_reserved["mousedown"] != null) {
		_g.setReserved("mousedown","touchstart");
	} else {
		_g.h["mousedown"] = "touchstart";
	}
	if(__map_reserved["mouseup"] != null) {
		_g.setReserved("mouseup","touchend");
	} else {
		_g.h["mouseup"] = "touchend";
	}
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.TOUCH_TO_MOUSE = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["touchmove"] != null) {
		_g.setReserved("touchmove","mousemove");
	} else {
		_g.h["touchmove"] = "mousemove";
	}
	if(__map_reserved["touchstart"] != null) {
		_g.setReserved("touchstart","mouseout");
	} else {
		_g.h["touchstart"] = "mouseout";
	}
	if(__map_reserved["touchend"] != null) {
		_g.setReserved("touchend","mousedown");
	} else {
		_g.h["touchend"] = "mousedown";
	}
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_HtmlUtils._dpi = 0;
haxe_ui_backend_html5_util_FontDetect._initialized = false;
haxe_ui_backend_html5_util_FontDetect._aFallbackFonts = ["serif","sans-serif","monospace","cursive","fantasy"];
haxe_ui_components_DropDown.__meta__ = { fields : { selectedIndex : { bindable : null}}};
haxe_ui_components_DropDown.NO_SELECTION = -1;
haxe_ui_components_Progress.__meta__ = { fields : { pos : { bindable : null, clonable : null}, min : { bindable : null, clonable : null}, max : { bindable : null, clonable : null}, rangeStart : { bindable : null, clonable : null}, rangeEnd : { bindable : null, clonable : null}, indeterminate : { bindable : null, clonable : null}}};
haxe_ui_components_Scroll.__meta__ = { fields : { pos : { bindable : null, clonable : null}, min : { bindable : null, clonable : null}, max : { bindable : null, clonable : null}, pageSize : { bindable : null, clonable : null}, incrementSize : { bindable : null, clonable : null}}};
haxe_ui_components_Slider.__meta__ = { fields : { round : { bindable : null, clonable : null}, pos : { bindable : null, clonable : null}, min : { bindable : null, clonable : null}, max : { bindable : null, clonable : null}, rangeStart : { bindable : null, clonable : null}, rangeEnd : { bindable : null, clonable : null}}};
haxe_ui_components_TabBar.__meta__ = { fields : { selectedIndex : { bindable : null}}};
haxe_ui_components_TabBar.SCROLL_INCREMENT = 20;
haxe_ui_containers_ListView.NO_SELECTION = -1;
haxe_ui_containers_dialogs_DialogButton.OK = 1;
haxe_ui_containers_dialogs_DialogButton.CANCEL = 2;
haxe_ui_containers_dialogs_DialogButton.CLOSE = 4;
haxe_ui_containers_dialogs_DialogButton.CONFIRM = 8;
haxe_ui_containers_dialogs_DialogButton.YES = 16;
haxe_ui_containers_dialogs_DialogButton.NO = 32;
haxe_ui_containers_dialogs_DialogButton.YES_NO = 48;
haxe_ui_containers_dialogs_DialogButton.YES_NO_CANCEL = 50;
haxe_ui_containers_dialogs_DialogOptions.ICON_ERROR = 256;
haxe_ui_containers_dialogs_DialogOptions.ICON_INFO = 512;
haxe_ui_containers_dialogs_DialogOptions.ICON_WARNING = 1024;
haxe_ui_containers_dialogs_DialogOptions.ICON_QUESTION = 2048;
haxe_ui_core_ItemRenderer.__meta__ = { fields : { allowHover : { clonable : null}}};
haxe_ui_core_UIEvent.READY = "ready";
haxe_ui_core_UIEvent.RESIZE = "resize";
haxe_ui_core_UIEvent.CHANGE = "change";
haxe_ui_core_UIEvent.BEFORE_CHANGE = "beforeChange";
haxe_ui_core_UIEvent.MOVE = "move";
haxe_ui_core_KeyboardEvent.KEY_TAB = 9;
haxe_ui_core_KeyboardEvent.KEY_DOWN = "keydown";
haxe_ui_core_KeyboardEvent.KEY_UP = "keyup";
haxe_ui_core_MouseEvent.MOUSE_MOVE = "mousemove";
haxe_ui_core_MouseEvent.MOUSE_OVER = "mouseover";
haxe_ui_core_MouseEvent.MOUSE_OUT = "mouseout";
haxe_ui_core_MouseEvent.MOUSE_DOWN = "mousedown";
haxe_ui_core_MouseEvent.MOUSE_UP = "mouseup";
haxe_ui_core_MouseEvent.MOUSE_WHEEL = "mousewheel";
haxe_ui_core_MouseEvent.CLICK = "click";
haxe_ui_core_Platform.METRIC_VSCROLL_WIDTH = "patform.metrics.vscroll.width";
haxe_ui_core_Platform.METRIC_HSCROLL_HEIGHT = "patform.metrics.hscroll.height";
haxe_ui_core_ScrollEvent.CHANGE = "scrollchange";
haxe_ui_core_ScrollEvent.START = "scrollstart";
haxe_ui_core_ScrollEvent.STOP = "scrollstop";
haxe_ui_core_ValidationEvent.START = "ValidationStart";
haxe_ui_core_ValidationEvent.STOP = "ValidationStop";
haxe_ui_macros_BackendMacros.properties = new haxe_ui_util_Properties();
haxe_ui_macros_ModuleMacros._modules = [];
haxe_ui_parsers_ui_ComponentParser._nextId = 0;
haxe_ui_util_MathUtil.MAX_INT = 2147483647;
haxe_ui_util_MathUtil.MIN_INT = -2147483648;
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved["lt"] != null) {
		h.setReserved("lt","<");
	} else {
		h.h["lt"] = "<";
	}
	if(__map_reserved["gt"] != null) {
		h.setReserved("gt",">");
	} else {
		h.h["gt"] = ">";
	}
	if(__map_reserved["amp"] != null) {
		h.setReserved("amp","&");
	} else {
		h.h["amp"] = "&";
	}
	if(__map_reserved["quot"] != null) {
		h.setReserved("quot","\"");
	} else {
		h.h["quot"] = "\"";
	}
	if(__map_reserved["apos"] != null) {
		h.setReserved("apos","'");
	} else {
		h.h["apos"] = "'";
	}
	$r = h;
	return $r;
}(this));
hscript_Parser.p1 = 0;
hscript_Parser.readPos = 0;
hscript_Parser.tokenMin = 0;
hscript_Parser.tokenMax = 0;
js_Boot.__toStr = ({ }).toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
tink_core__$Callback_Callback_$Impl_$.depth = 0;
tink_core__$Callback_Callback_$Impl_$.MAX_DEPTH = 1000;
tink_core__$Future_NeverFuture.inst = new tink_core__$Future_NeverFuture();
tink_core__$Future_Future_$Impl_$.NULL = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(null));
tink_core__$Future_Future_$Impl_$.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Noise.Noise));
tink_core__$Future_Future_$Impl_$.NEVER = tink_core__$Future_NeverFuture.inst;
tink_core__$Promise_Promise_$Impl_$.NULL = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(null)));
tink_core__$Promise_Promise_$Impl_$.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
tink_core__$Promise_Promise_$Impl_$.NEVER = (function($this) {
	var $r;
	var ret = tink_core__$Future_Future_$Impl_$.NEVER.map(tink_core_Outcome.Success);
	$r = ret.gather();
	return $r;
}(this));
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=client.js.map