{
	"keywords": [
		"try", "catch", "throw", "if", "return", "while", "for",
		"return", "break", "case", "default", "continue", "do",
		"while", "for", "switch", "if", "else", "...", "cast",
		"untyped", "trace", "this", "super", "new", "var",
		"function", "abstract", "class", "enum", "interface", "typedef",
		"from", "to", "default", "get", "set", "dynamic", "never", "null",
		"public", "private", "static", "dynamic", "inline", "macro", "extern", "override",
		"import", "package"
	],
	"typeKeywords": [
		"Bool", "Float", "Int"
	],
	"operators": [
		"=", ">", "<", "!", "~", "?", ":", "==", "<=", ">=", "!=",
		"&&", "||", "++", "--", "+", "-", "*", "/", "&", "|", "^", "%",
		"<<", ">>", ">>>", "+=", "-=", "*=", "/=", "&=", "|=", "^=",
		"%=", "<<=", ">>=", ">>>="
	],
	"symbols": "[=><!~?:&|+\\-*\\/\\^%]+",
	"escapes": "\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})",
	"tokenizer": {
		"root": [
			["[a-z_$][\\w$]*", {
				"cases": {
					"@typeKeywords": "keyword",
					"@keywords": "keyword",
					"@default": "identifier"
				}
			}],
			["[A-Z][\\w\\$]*", "type.identifier"],
			{
				"include": "@whitespace"
			},
			["[{}()\\[\\]]", "@brackets"],
			["[<>](?!@symbols)", "@brackets"],
			["@symbols", {
				"cases": {
					"@operators": "operator",
					"@default": ""
				}
			}],
			["@\\s*[a-zA-Z_\\$][\\w\\$]*", {
				"token": "annotation",
				"log": "annotation token: $0"
			}],
			["\\d*\\.\\d+([eE][\\-+]?\\d+)?", "number.float"],
			["0[xX][0-9a-fA-F]+", "number.hex"],
			["\\d+", "number"],
			["[;,.]", "delimiter"],
			["\"([^\"\\\\]|\\\\.)*$", "string.invalid"],
			["'([^'\\\\]|\\\\.)*$", "string.invalid"],
			["\"", "string", "@string.\""],
			["'", "string", "@string.'"],
			["'[^\\\\']'", "string"],
			["(')(@escapes)(')", ["string", "string.escape", "string"]],
			["'", "string.invalid"]
		],

		"comment": [
			["[^\\/*]+", "comment"],
			["\/\\*", "comment", "@push"],
			["\\*/", "comment", "@pop"],
			["[\\/*]", "comment"]

		],
		"string": [
			["[^\\\"']+", "string"],
			["@escapes", "string.escape"],
			["\\.", "string.escape.invalid"],

			["[\"']", {
				"cases": {
					"$#==$S2": {
						"token": "string",
						"next": "@pop"
					},
					"@default": "string"
				}
			}]
		],
		"whitespace": []


	}
}